{"version":3,"sources":["../../../src/utils/datetime.js","../../../../src/components/inline-error/InlineError.js","../../../../src/components/inline-notice/InlineNotice.js","../../../../src/icon/fill/InfoBadge16.tsx","../../../../src/components/label/InfoIconWithTooltip.tsx","../../../../src/components/label/LabelPrimitive.tsx","../../../../src/components/label/StandardLabel.tsx","../../../../src/components/label/HiddenLabel.tsx","../../../../src/components/label/Label.tsx","../../../../src/components/inline-notice/index.js","../../../../src/components/label-pill/LabelPillIcon.tsx","../../../../src/components/label-pill/LabelPillText.tsx","../../../../src/components/label-pill/LabelPill.tsx","../../../../src/icons/general/IconInfo.tsx","../node_modules/lodash/_hasUnicode.js","../../../../src/elements/content-sidebar/withErrorHandling.js","../../../../src/components/modal/ModalDialog.js","../../../../src/components/label/index.tsx","../node_modules/lodash/upperFirst.js","../../../../src/components/modal/Modal.js","../../../../src/components/modal/ModalActions.js","../../../src/common/variables.js","../node_modules/react-textarea-autosize/dist/react-textarea-autosize.esm.browser.js","../node_modules/lodash/startCase.js","../node_modules/lodash/_createCaseFirst.js","../node_modules/lodash/_castSlice.js","../node_modules/lodash/_stringToArray.js","../node_modules/lodash/_asciiToArray.js","../node_modules/lodash/_unicodeToArray.js","../../../../src/icons/general/IconVerified.tsx","../node_modules/lodash/isFinite.js","../node_modules/lodash/isNil.js","../node_modules/react-process-string/dist/index.js","../node_modules/filesize/lib/filesize.js","../../../../src/icons/general/IconEye.tsx","../../../../src/icons/general/IconComment.tsx","../../../../src/icons/general/IconPencilSolid.tsx","../../../../src/features/access-stats/messages.js","../../../../src/features/access-stats/AccessStatsItem.js","../../../../src/features/access-stats/AccessStatsItemsList.js","../../../../src/features/access-stats/AccessStats.js","../../../../src/elements/content-sidebar/SidebarAccessStats.js","../../../../src/icons/general/IconSecurityClassification.tsx","../../../../src/features/security/SecurityBadge.js","../../../../src/features/classification/ClassifiedBadge.js","../../../../src/features/classification/constants.js","../../../../../src/features/classification/security-controls/messages.js","../../../../../src/features/classification/security-controls/appRestrictionsMessageMap.js","../../../../../src/features/classification/security-controls/downloadRestrictionsMessageMap.js","../../../../../src/features/classification/security-controls/utils.js","../../../../../src/features/classification/security-controls/SecurityControlsItem.js","../../../../src/features/classification/messages.js","../../../../../src/features/classification/security-controls/SecurityControlsModal.js","../../../../../src/features/classification/security-controls/SecurityControls.js","../../../../src/features/classification/Classification.js","../../../../src/features/classification/EditClassificationButton.js","../../../../src/features/classification/classificationColorsMap.js","../../../../src/elements/content-sidebar/SidebarClassification.js","../../../src/illustration/MetricsReview56.tsx","../../../../src/features/content-insights/messages.ts","../../../../src/features/content-insights/ContentAnalyticsErrorState.tsx","../../../../src/components/ghost/Ghost.tsx","../../../../src/features/content-insights/GraphGhostState.tsx","../../../../src/features/content-insights/GraphCardGhostState.tsx","../../../../src/features/content-insights/ContentInsightsSummaryGhostState.tsx","../../../../../src/features/content-insights/charts/bar/Bar.tsx","../../../../../src/features/content-insights/charts/bar/BarChart.tsx","../../../../src/features/content-insights/numberUtils.ts","../../../../src/features/content-insights/CompactCount.tsx","../../../../src/features/content-insights/HeaderWithCount.tsx","../../../../src/features/content-insights/TrendPill.tsx","../../../../src/features/content-insights/constants.ts","../../../../src/features/content-insights/MetricSummary.tsx","../../../../src/features/content-insights/GraphCardPreviewsSummary.tsx","../../../../src/features/content-insights/OpenContentInsightsButton.tsx","../../../../src/features/content-insights/ContentInsightsSummary.tsx","../../../../src/elements/content-sidebar/SidebarContentInsights.tsx","../../../../src/features/item-details/messages.js","../../../../src/features/item-details/EditableDescription.js","../../../../src/features/item-details/EditableURL.js","../../../../src/features/item-details/RetentionPolicy.js","../../../../src/features/item-details/ReadonlyDescription.js","../../../../src/features/item-details/ItemProperties.js","../../../src/utils/getFileSize.js","../../../../src/elements/content-sidebar/SidebarFileProperties.js","../../../../src/features/item-details/SharedLinkExpirationNotice.js","../../../../src/features/item-details/ItemExpirationNotice.js","../../../../../src/elements/common/date/DateField.js","../../../../src/elements/content-sidebar/SidebarNotices.js","../../../../src/features/item-details/VersionHistoryLink.js","../../../../src/elements/content-sidebar/SidebarVersions.js","../../../../src/elements/content-sidebar/DetailsSidebar.js"],"names":["MILLISECONDS_PER_DAY","MILLISECONDS_PER_MINUTE","RE_ISO8601_DATE","ISO8601_DATETIME","ISO8601_MILLISECONDS","ISO8601_TIMEZONE","ISO8601_Z_FMT","ISO8601_SHORT_FMT","ISO8601_MEDIUM_FMT","ISO8601_LONG_FMT","convertToDate","dateValue","Date","isToday","toDateString","isYesterday","getTime","isCurrentMonth","getMonth","isCurrentYear","getFullYear","formatTime","seconds","h","Math","floor","m","s","hour","toString","sec","min","addTime","timeToAdd","convertDateToUnixMidnightTime","date","getTimezoneOffset","isValidDate","isNaN","convertISOStringToUTCDate","isoString","utcDate","test","parseDate","split","dateTime","milliseconds","timeZone","substr","convertISOStringtoRFC3339String","utcTime","timezoneOffsetInMins","InlineError","props","type","InlineNotice","children","className","title","rest","classNames","InfoBadge16","AccessibleSVG","width","height","viewBox","fill","vars","d","InfoIconWithTooltip","iconProps","tooltipText","key","position","TooltipPosition","TOP_CENTER","text","LabelPrimitive","labelContent","StandardLabel","tooltip","label","TOP_RIGHT","HiddenLabel","OptionalFormattedMessage","commonMessages","optional","Label","infoTooltip","infoIconProps","showOptionalText","hideLabel","push","LabelPillIcon","Component","LabelPillStatus","LabelPillSize","LabelPillText","LabelPillContainer","ref","DEFAULT","size","REGULAR","labelPillClasses","startCase","displayName","LabelPill","Pill","Text","Icon","IconInfo","color","fillRule","reHasUnicode","RegExp","module","exports","string","withErrorHandling","WrappedComponent","maskError","inlineError","errorCode","errorHeader","errorSubHeader","undefined","content","ALERT_TYPE","messages","defineMessages","backModalText","closeModalText","ModalDialog","event","onRequestBack","onRequestClose","uniqueId","formatMessage","this","intl","onClick","onBackButtonClick","closeButtonProps","onCloseButtonClick","elements","React","toArray","length","Error","id","modalID","modalRef","isAlertType","divProps","omit","role","renderBackButton","renderCloseButton","renderContent","injectIntl","upperFirst","require","createCaseFirst","Modal","isOpen","stopPropagation","onBackdropClick","setTimeout","focusElementSelector","focusElementSelectorTrimmed","trim","focusElement","focusFirstUsefulElement","dialog","tabbableEls","tabbable","focus","elementSelector","el","querySelector","onModalOpen","prevProps","isLoading","shouldNotUsePortal","style","modalProps","WrapperComponent","Portal","onKeyDown","tabIndex","backdrop","modalEl","ModalActions","RESIN_TAG_TARGET","isIE","document","documentElement","currentStyle","HIDDEN_TEXTAREA_STYLE","visibility","overflow","top","right","SIZING_STYLE","computedStyleCache","hiddenTextarea","createElement","forceHiddenStyles","node","Object","keys","forEach","setProperty","calculateNodeHeight","uiTextNode","uid","useCache","minRows","maxRows","parentNode","body","appendChild","nodeStyling","window","getComputedStyle","sizingStyle","reduce","obj","name","getPropertyValue","boxSizing","parseFloat","paddingSize","borderSize","nodeInfo","calculateNodeStyling","value","placeholder","minHeight","Infinity","maxHeight","scrollHeight","singleRowHeight","valueRowCount","max","rowCount","setAttribute","noop","TextareaAutosize","_React$Component","_this","call","_onRef","_ref","inputRef","current","_onChange","_controlled","_resizeComponent","onChange","_assertThisInitialized","callback","nodeHeight","_uid","useCacheForDOMMeasurements","state","setState","_resizeLock","_inheritsLoose","_proto","prototype","render","_this$props","onHeightChange","_objectWithoutPropertiesLoose","_extends","componentDidMount","_this2","_resizeListener","addEventListener","componentDidUpdate","prevState","componentWillUnmount","removeEventListener","purgeCache","defaultProps","createCompounder","result","word","index","castSlice","hasUnicode","stringToArray","methodName","strSymbols","chr","charAt","trailing","join","slice","baseSlice","array","start","end","asciiToArray","unicodeToArray","rsAstralRange","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","match","IconVerified","bdlGreenLight","opacity","nativeIsFinite","isFinite","options","processInputWithRegex","option","input","fn","regex","output","exec","substring","lastIndex","Array","isArray","map","chunk","global","b","symbol","iec","bits","bytes","jedec","fullform","filesize","arg","base","ceil","full","fullforms","locale","localeOptions","neg","round","unix","separator","spacer","standard","symbols","descriptor","arguments","val","e","num","TypeError","exponent","Number","log","pow","toFixed","replace","toLocaleString","partial","opt","IconEye","IconComment","IconPencilSolid","accessStatsViewDetails","accessStatsViews","accessStatsPreviews","accessStatsEdits","accessStatsComments","accessStatsDownloads","statsAttributesTable","preview","icon","message","view","download","IconDownloadSolid","comment","edit","ITEM_CONTENT_CLASS_NAME","AccessStatsItem","count","hasCountOverflowed","openAccessStatsModal","statButtonProps","statAttributes","IconComponent","labelMessage","itemContent","PlainButton","AccessStatsItemsList","commentCount","commentStatButtonProps","downloadCount","downloadStatButtonProps","editCount","editStatButtonProps","isBoxNote","previewCount","previewStatButtonProps","viewStatButtonProps","AccessStats","errorMessage","viewMoreButtonProps","onAccessStatsClick","accessStats","comment_count","download_count","edit_count","has_count_overflowed","preview_count","file","error","SidebarSection","interactionTarget","SECTION_TARGETS","ACCESS_STATS","sidebarAccessStats","INTERACTION_TARGET","DETAILS_TARGETS","COMMENTS","DOWNLOADS","PREVIEWS","VIEWS","EDITS","VIEW_DETAILS","IconSecurityClassification","bdlGray","classes","SecurityBadge","backgroundColor","IconAlertDefault","bdlYellow50","strokeWidth","ClassifiedBadge","tooltipPosition","isClickable","isTooltipDisabled","badge","isDisabled","isTabbable","SECURITY_CONTROLS_FORMAT","ACCESS_POLICY_RESTRICTION","DOWNLOAD_CONTROL","LIST_ACCESS_LEVEL","MANAGED_USERS_ACCESS_LEVEL","SHARED_LINK_ACCESS_LEVEL","APP_RESTRICTION_MESSAGE_TYPE","securityControlsLabel","shortSharing","shortDownload","shortApp","shortWatermarking","shortSign","shortSharingDownload","shortSharingApp","shortDownloadApp","shortSharingSign","shortDownloadSign","shortAppSign","shortDownloadAppSign","shortSharingAppSign","shortSharingDownloadSign","shortSharingDownloadApp","shortSharingDownloadAppSign","sharingCollabOnly","sharingCollabAndCompanyOnly","watermarkingApplied","externalCollabBlock","externalCollabDomainList","appDownloadRestricted","appDownloadBlacklist","appDownloadBlacklistOverflow","appDownloadWhitelist","appDownloadWhitelistOverflow","allAppNames","webDownloadOwners","webDownloadOwnersEditors","webDownloadExternalOwners","webDownloadExternalOwnersEditors","webDownloadExternal","boxSignRequestRestricted","mobileDownloadOwners","mobileDownloadOwnersEditors","mobileDownloadExternalOwners","mobileDownloadExternalOwnersEditors","mobileDownloadExternal","desktopDownloadOwners","desktopDownloadOwnersEditors","desktopDownloadExternalOwners","desktopDownloadExternalOwnersEditors","desktopDownloadExternal","viewAll","modalTitle","modalDescription","WHITELIST","WITH_APP_LIST","WITH_OVERFLOWN_APP_LIST","appRestrictionsMessageMap","MOBILE","WEB","OWNERS_AND_COOWNERS","OWNERS_COOWNERS_AND_EDITORS","downloadRestrictionsMessageMap","externalAllowed","externalRestricted","APP","BOX_SIGN_REQUEST","DOWNLOAD","EXTERNAL_COLLAB","SHARED_LINK","WATERMARK","DESKTOP","BLOCK","BLACKLIST","COLLAB_ONLY","COLLAB_AND_COMPANY_ONLY","PUBLIC","getFullSecurityControlsMessages","controls","maxAppCount","items","getProp","getSharedLinkMessages","getExternalCollabMessages","web","mobile","desktop","downloadRestrictions","platform","restrictions","platformKey","restrictExternalUsers","restrictManagedUsers","default","getDownloadMessages","accessLevel","apps","isNil","appsToDisplay","remainingAppCount","appNames","displayText","appsList","values","tooltipMessage","messageType","getAppDownloadMessages","getWatermarkingMessages","getBoxSignRequestMessages","SecurityControlsItem","bdlBoxBlue","add","classification","definition","missing","modifiedByLabel","importedBy","modifiedBy","classificationYellow","classificationOrange","classificationRed","classificationPurple","classificationLightBlue","classificationDarkBlue","classificationGreen","classificationGrey","SecurityControlsModal","closeModal","classificationColor","classificationName","isSecurityControlsModalOpen","itemName","modalItems","classificationMessages","close","FULL","SHORT","SHORT_WITH_BTN","SecurityControls","controlsFormat","shouldRenderLabel","app","boxSignRequest","externalCollab","sharedLink","watermark","sharing","getShortSecurityControlsMessage","shouldShowSecurityControlsModal","itemsList","openModal","STYLE_INLINE","Classification","isImportedClassification","isLoadingControls","messageStyle","modifiedAt","isClassified","hasDefinition","hasModifiedAt","hasModifiedBy","isTooltipMessageEnabled","isInlineMessageEnabled","isNotClassifiedMessageVisible","isControlsIndicatorEnabled","isSecurityControlsEnabled","modifiedDate","isModifiedMessageVisible","formattedModifiedAt","month","year","day","modifiedByMessage","LoadingIndicator","EditClassificationButton","isEditing","onEdit","interaction","tinycon","SidebarClassification","isEditable","FIELD_PERMISSIONS_CAN_UPLOAD","hasClassification","Collapsible","buttonProps","CLASSIFICATION","headerActionItems","MetricsReview56","contentAnalyticsErrorText","contentAnalyticsPermissionError","contentInsightsTitle","downloadGraphLabel","downloadGraphType","trendMonth","trendThreeMonths","trendWeek","trendYear","trendDown","trendUp","peopleGraphLabel","peopleTitle","previewGraphLabel","previewGraphType","openContentInsightsButton","ContentAnalyticsErrorState","responseError","status","Ghost","isAnimated","borderRadius","GRAPH_BAR_HEIGHTS","GraphGhostState","GraphCardGhostState","ContentInsightsSummaryGhostState","Bar","direction","onMouseEnter","onMouseLeave","isHorizontal","cssProperty","useState","setStyle","adjustedSize","barRef","useRef","handleMouseEnter","useCallback","offsetPosition","left","boundingClientRect","getBoundingClientRect","useEffect","isFunction","valueAccessor","BarChart","data","hasAxisLabel","labelAccessor","onBarMouseEnter","onBarMouseLeave","isInteractive","datum","previousValue","currentValue","getSize","handleBarMouseEnter","handleBarMouseLeave","formatCount","formatNumber","notation","HeaderWithCount","totalCount","period","trend","trendStatus","getTrendStatus","trendLabel","getTrendByPeriod","METRIC","freeze","USERS","PERIOD","WEEK","MONTH","THREEMONTHS","YEAR","PRESET_TIMES","ONE_WEEK","TWO_WEEKS","ONE_MONTH","TWO_MONTHS","THREE_MONTHS","SIX_MONTHS","ONE_YEAR","TWO_YEARS","currentPeriod","previousPeriod","METRIC_MAP","headerMessage","getPeriodCount","previewsCount","downloadsCount","totalUsers","users","Set","from","metric","previousPeriodCount","periodCount","calculatedTrend","formatTrend","graphData","OpenContentInsightsButton","ButtonType","BUTTON","ContentInsightsSummary","defaultContentInsights","contentInsights","onContentInsightsClick","sidebarContentInsights","bookmarkExpiration","created","deleted","description","descriptionPlaceholder","enterpriseOwner","fileExpiration","folderExpiration","modified","owner","retentionPolicyDescription","retentionPolicyExpiration","retentionPolicyExtend","savedVersions","sharedLinkExpiration","uploader","url","urlPlaceholder","EditableDescription","onDescriptionChange","currentTarget","prevValue","textAreaProps","maxLength","onBlur","handleBlur","handleChange","VALUE_MISSING","TYPE_MISMATCH","errorMap","requiredFieldError","invalidURLError","EditableURL","inputEl","validity","valid","valueMissing","onValidURLChange","TextInput","isRequired","onFocus","handleFocus","datetimeOptions","RetentionPolicy","dispositionTime","policyType","tagName","NEWLINE_REGEX","URL_REGEX","ReadonlyDescription","href","rel","target","propTypes","PropTypes","minute","ItemProperties","createdAt","descriptionTextareaProps","retentionPolicyProps","trashedAt","descriptionId","uniqueid","oneOfType","number","object","func","defaultDigitalUnits","bcp47TagToDigitalUnits","fi","fr","ru","getFileSize","settings","localizedUnits","unit","hasRetentionPolicy","retentionPolicy","onRetentionPolicyExtendClick","LoadingIndicatorWrapper","content_created_at","DESCRIPTION","content_modified_at","PLACEHOLDER_USER","SharedLinkExpirationNotice","expiration","FILE","FOLDER","WEBLINK","ItemExpirationNotice","messageID","itemType","oneOf","DEFAULT_DATE_FORMAT","weekday","dateFormat","omitCommas","relative","capitalize","isTodaysDate","isYesterdaysDate","Message","today","yesterday","formattedDate","formatDate","NOTICE_DATE_FORMAT","SidebarNotices","itemExpiration","VersionHistoryLink","versionCount","formattedMessageComponent","SidebarVersions","onVersionHistoryClick","version_number","versionNumber","parseInt","VERSION_HISTORY","MARK_NAME_JS_READY","ORIGIN_DETAILS_SIDEBAR","EVENT_JS_READY","mark","DetailsSidebar","fileError","code","onError","fileDescriptionInlineErrorTitleMessage","defaultInlineErrorContentMessage","newDescription","api","getBadItemError","getFileAPI","setFileDescription","descriptionChangeSuccessCallback","descriptionChangeErrorCallback","hasAccessStats","accessStatsError","isForbidden","HTTP_STATUS_CODE_FORBIDDEN","fileAccessStatsPermissionsError","fileAccessStatsErrorHeaderMessage","defaultErrorMaskSubHeaderMessage","isLoadingAccessStats","IS_ERROR_DISPLAYED","logger","onReadyMetric","endMarkName","hasContentInsights","fetchContentInsights","fetchFile","fetchAccessStats","prevHasAccessStats","prevHasContentInsights","hasContentInsightsChanged","successCallback","fetchFileSuccessCallback","errorCallback","fetchFileErrorCallback","fileId","getFile","fields","SIDEBAR_FIELDS_TO_FETCH","getFileAccessStatsAPI","getFileAccessStats","fetchAccessStatsSuccessCallback","fetchAccessStatsErrorCallback","elementId","hasProperties","hasNotices","hasVersions","onClassificationClick","SidebarContent","sidebarView","SIDEBAR_VIEW_DETAILS","sidebarDetailsTitle","FILE_PROPERTIES","sidebarProperties","PureComponent","flow","withLogger","withErrorBoundary","withAPIContext"],"mappings":"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","file":"static/js/8.208bfc39.chunk.js","sourcesContent":["/**\n * @flow\n * @file Date and time utilities\n * @author Box\n */\nimport isNaN from 'lodash/isNaN';\n\nconst MILLISECONDS_PER_SECOND = 1000;\n// 24 hours * 60 minutes * 60 seconds * 1000 milliseconds\nconst MILLISECONDS_PER_DAY = 24 * 60 * 60 * MILLISECONDS_PER_SECOND;\n// 60 sec * 1000\nconst MILLISECONDS_PER_MINUTE = 60 * MILLISECONDS_PER_SECOND;\n\n/**\n * RegExp matcher for acceptable ISO 8601 date formats w/ timezone (see below)\n * Capture groups structured as follows:\n * 1) the date/time portion (2018-06-13T00:00:00.000)\n * 2) the milliseconds (if matched)\n * 3) the timezone portion (e.g., Z, +03, -0400, +05:00)\n * 4) the Z format for timezone (if matched)\n * 5) the short format for timezone (if matched)\n * 6) the colon-less format for timezone (if matched)\n * 7) the colon long format for timezone (if matched)\n */\nconst RE_ISO8601_DATE = /^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?)?((Z$)|(?:[+-](?:([0-2]\\d$)|([0-2]\\d(?:00|30)$)|([0-2]\\d:(?:00|30)$))))$/;\nconst ISO8601_DATETIME: 1 = 1;\nconst ISO8601_MILLISECONDS: 2 = 2;\nconst ISO8601_TIMEZONE: 3 = 3;\nconst ISO8601_Z_FMT: 4 = 4;\nconst ISO8601_SHORT_FMT: 5 = 5;\nconst ISO8601_MEDIUM_FMT: 6 = 6;\nconst ISO8601_LONG_FMT: 7 = 7;\n\n/**\n * Helper to normalize a date value to a date object\n * @param dateValue - Date number, string, or object\n * @returns {date} the normalized date object\n */\nfunction convertToDate(dateValue: number | string | Date): Date {\n    return dateValue instanceof Date ? dateValue : new Date(dateValue);\n}\n\n/**\n * Converts an integer value in seconds to milliseconds.\n * @param {number} seconds - The value in seconds\n * @returns {number} the value in milliseconds\n */\nfunction convertToMs(seconds: number): number {\n    return seconds * MILLISECONDS_PER_SECOND;\n}\n\n/**\n * Checks whether the given date value (in unix milliseconds) is today.\n * @param {number|string|Date} dateValue - Date object or integer representing the number of milliseconds since 1/1/1970 UTC\n * @returns {boolean} whether the given value is today\n */\nfunction isToday(dateValue: number | string | Date): boolean {\n    return new Date().toDateString() === convertToDate(dateValue).toDateString();\n}\n\n/**\n * Checks whether the given date value (in unix milliseconds) is yesterday.\n * @param {number|string|Date} dateValue - Date object or integer or representing the number of milliseconds since 1/1/1970 UTC\n * @returns {boolean} whether the given value is yesterday\n */\nfunction isYesterday(dateValue: number | string | Date): boolean {\n    return isToday(convertToDate(dateValue).getTime() + MILLISECONDS_PER_DAY);\n}\n\n/**\n * Checks whether the given date value (in unix milliseconds) is tomorrow.\n * @param {number|string|Date} dateValue - Date object or integer or representing the number of milliseconds since 1/1/1970 UTC\n * @returns {boolean} whether the given value is tomorrow\n */\nfunction isTomorrow(dateValue: number | string | Date): boolean {\n    return isToday(convertToDate(dateValue).getTime() - MILLISECONDS_PER_DAY);\n}\n\n/**\n * Checks whether the given date value (in unix milliseconds) is in the current month.\n * @param {number|string|Date} dateValue - Date object or integer representing the number of milliseconds since 1/1/1970 UTC\n * @returns {boolean} whether the given value is in the current month\n */\nfunction isCurrentMonth(dateValue: number | string | Date): boolean {\n    return new Date().getMonth() === convertToDate(dateValue).getMonth();\n}\n\n/**\n * Checks whether the given date value (in unix milliseconds) is in the current year.\n * @param {number|string|Date} dateValue - Date object or integer representing the number of milliseconds since 1/1/1970 UTC\n * @returns {boolean} whether the given value is in the current year\n */\nfunction isCurrentYear(dateValue: number | string | Date): boolean {\n    return new Date().getFullYear() === convertToDate(dateValue).getFullYear();\n}\n\n/**\n * Formats a number of seconds as a time string\n *\n * @param {number} seconds - seconds\n * @return {string} a string formatted like 3:57:35\n */\nfunction formatTime(seconds: number): string {\n    const h = Math.floor(seconds / 3600);\n    const m = Math.floor((seconds % 3600) / 60);\n    const s = Math.floor((seconds % 3600) % 60);\n    const hour = h > 0 ? `${h.toString()}:` : '';\n    const sec = s < 10 ? `0${s.toString()}` : s.toString();\n    let min = m.toString();\n    if (h > 0 && m < 10) {\n        min = `0${min}`;\n    }\n    return `${hour}${min}:${sec}`;\n}\n\n/**\n * Adds time to a given dateValue\n *\n * @param {number|Date} dateValue - date or integer value to add time to\n * @param {number} timeToAdd - amount of time to add in ms\n * @return {number|Date} the modified date or integer\n */\nfunction addTime(dateValue: number | Date, timeToAdd: number): number | Date {\n    if (dateValue instanceof Date) {\n        return new Date(dateValue.getTime() + timeToAdd);\n    }\n\n    return dateValue + timeToAdd;\n}\n\n/**\n * Will convert\n *      2018-06-13T07:00:00.000Z\n * to\n *      2018-06-13T00:00:00.000Z\n *\n * This is the opposite of convertISOStringToUTCDate\n *\n * @param {Date} date\n * @return {number}\n */\nfunction convertDateToUnixMidnightTime(date: Date) {\n    // date is localized to 00:00:00 at system/browser timezone\n    const utcUnixTimeInMs = date.getTime();\n\n    // timezone an integer offset; minutes behind GMT\n    // we use the browser timezone offset instead of the user's,\n    // because the datepicker uses the browser to get the \"midnight\"\n    // time in the user's timezone with getTime()\n    const timezoneOffsetInMins = date.getTimezoneOffset();\n    const timezoneOffsetInMs = timezoneOffsetInMins * MILLISECONDS_PER_MINUTE;\n\n    // we need the unix/epoch time for midnight on the date selected\n    const unixDayMidnightTime = utcUnixTimeInMs - timezoneOffsetInMs;\n    return unixDayMidnightTime;\n}\n\n/**\n * Will check to see if a date object is not valid, according to the browser\n * JS engine.\n *\n * @param {Date} date\n * @return {boolean} whether the date value passes validation\n */\nfunction isValidDate(date: Date): boolean {\n    return !isNaN(date.getTime());\n}\n\n/**\n * Will convert ISO8601-compatible dates (with zone designators)\n *      2018-06-13T00:00:00.000-0500\n *      or\n *      2018-06-13T00:00:00.000-05\n *\n * to\n *      2018-06-13T00:00:00.000-05:00\n *\n * Equivalent formats between the two (e.g., uzing 'Z') will remain unchanged.\n * If the date format cannot be converted, it will pass along the existing value\n * @param {string} isoString\n * @return {string} converted date format, if applicable\n */\nfunction convertISOStringtoRFC3339String(isoString: string): string {\n    // test that the date format inbound is ISO8601-compatible\n    if (RE_ISO8601_DATE.test(isoString)) {\n        // if it is, parse out the timezone part if it's in a longer format\n        // use the capture groups instead of the split result for the datetime and the time zone\n        const parseDate = isoString.split(RE_ISO8601_DATE);\n        let dateTime = parseDate[ISO8601_DATETIME];\n        const milliseconds = parseDate[ISO8601_MILLISECONDS];\n        const timeZone = parseDate[ISO8601_TIMEZONE];\n\n        // add milliseconds if missing, to standardize output\n        if (!milliseconds) {\n            dateTime += '.000';\n        }\n\n        if (parseDate[ISO8601_Z_FMT]) {\n            return isoString;\n        }\n\n        if (parseDate[ISO8601_SHORT_FMT]) {\n            return `${dateTime + timeZone}:00`;\n        }\n\n        if (parseDate[ISO8601_MEDIUM_FMT]) {\n            return `${dateTime + timeZone.substr(0, 3)}:${timeZone.substr(3)}`;\n        }\n\n        if (parseDate[ISO8601_LONG_FMT]) {\n            return isoString;\n        }\n    }\n    return isoString;\n}\n\n/**\n * Will convert\n *      2018-06-13T00:00:00.000Z\n * to\n *      2018-06-13T07:00:00.000Z\n *\n * This is the opposite of convertDateToUnixMidnightTime\n *\n * @param {string} isoString - ISO string in UTC time zone\n */\nfunction convertISOStringToUTCDate(isoString: string): Date {\n    // get date in UTC midnight time\n    const utcDate = new Date(convertISOStringtoRFC3339String(isoString));\n    const utcTime = utcDate.getTime();\n\n    // get browser's timezone\n    const timezoneOffsetInMins = utcDate.getTimezoneOffset();\n    const timezoneOffsetInMs = timezoneOffsetInMins * MILLISECONDS_PER_MINUTE;\n\n    // return date in utc timezone\n    const localizedUnixTimeInMs = utcTime + timezoneOffsetInMs;\n    return new Date(localizedUnixTimeInMs);\n}\n\nexport {\n    convertToDate,\n    convertToMs,\n    convertDateToUnixMidnightTime,\n    convertISOStringToUTCDate,\n    convertISOStringtoRFC3339String,\n    isToday,\n    isTomorrow,\n    isValidDate,\n    isYesterday,\n    isCurrentMonth,\n    isCurrentYear,\n    formatTime,\n    addTime,\n};\n","// @flow\nimport * as React from 'react';\nimport InlineNotice from '../inline-notice';\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n    /** Title of the inline error. */\n    title: React.Node,\n};\n\nconst InlineError = (props: Props) => <InlineNotice {...props} type=\"error\" />;\n\nexport default InlineError;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nimport type { InlineNoticeType } from '../../common/types/core';\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n    title?: React.Node,\n    type?: InlineNoticeType,\n};\n\nconst InlineNotice = ({ children, className = '', title, type = 'warning', ...rest }: Props) => (\n    <div className={classNames(className, 'inline-alert', 'inline-alert-visible', `inline-alert-${type}`)} {...rest}>\n        {title ? <strong>{title}</strong> : null}\n        <div>{children}</div>\n    </div>\n);\n\nexport default InlineNotice;\n","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst InfoBadge16 = (props: SVGProps) => (\n    <AccessibleSVG width={16} height={16} viewBox=\"0 0 16 16\" {...props}>\n        <path\n            fill={vars.bdlGray50}\n            d=\"M8 1a7 7 0 110 14A7 7 0 018 1zm.5 6H7a.5.5 0 000 1h.5v3H7a.5.5 0 100 1h2.5a.5.5 0 100-1H9V7.75a.783.783 0 00-.012-.139A.502.502 0 008.5 7zM8 4a1 1 0 100 2 1 1 0 000-2z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default InfoBadge16;\n","import * as React from 'react';\n\nimport InfoBadge16 from '../../icon/fill/InfoBadge16';\nimport Tooltip, { TooltipPosition } from '../tooltip';\n\nexport interface InfoIconWithTooltipProps {\n    /** Custom class for the icon */\n    className?: string;\n    /** Optional props for the icon */\n    iconProps?: Record<string, any>; // eslint-disable-line @typescript-eslint/no-explicit-any\n    /** Optional tooltip text for the label */\n    tooltipText: React.ReactNode;\n}\n\nconst InfoIconWithTooltip = ({ className = '', iconProps, tooltipText }: InfoIconWithTooltipProps) => (\n    <span key=\"infoIcon\" className={`${className} tooltip-icon-container`}>\n        <Tooltip position={TooltipPosition.TOP_CENTER} text={tooltipText}>\n            <span className=\"info-icon-container\">\n                <InfoBadge16 {...iconProps} />\n            </span>\n        </Tooltip>\n    </span>\n);\n\nexport default InfoIconWithTooltip;\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface LabelPrimitiveProps {\n    /** Child for the label */\n    children: React.ReactElement;\n    /** Custom class for the label */\n    className?: string;\n    /** Text content of the label */\n    labelContent: React.ReactNode;\n}\n\nconst LabelPrimitive = ({ children, className, labelContent, ...rest }: LabelPrimitiveProps) => (\n    <label>\n        <span className={classNames('label bdl-Label', className)} {...rest}>\n            {labelContent}\n        </span>\n        {children}\n    </label>\n);\n\nexport default LabelPrimitive;\n","import * as React from 'react';\n\nimport Tooltip, { TooltipPosition } from '../tooltip';\nimport LabelPrimitive from './LabelPrimitive';\n\nexport interface StandardLabelProps {\n    /** Child for the label */\n    children: React.ReactElement;\n    /** Text content of the label */\n    labelContent: React.ReactNode;\n    /** Optional tooltip text for the label */\n    tooltip?: React.ReactNode;\n}\n\nconst StandardLabel = ({ children, labelContent, tooltip }: StandardLabelProps) => {\n    const label = <LabelPrimitive labelContent={labelContent}>{children}</LabelPrimitive>;\n\n    return tooltip ? (\n        <Tooltip position={TooltipPosition.TOP_RIGHT} text={tooltip}>\n            {label}\n        </Tooltip>\n    ) : (\n        label\n    );\n};\n\nexport default StandardLabel;\n","import * as React from 'react';\n\nimport LabelPrimitive from './LabelPrimitive';\n\nexport interface HiddenLabelProps {\n    /** Child for the label */\n    children: React.ReactElement;\n    /** Text content of the label */\n    labelContent: React.ReactNode;\n}\n\nconst HiddenLabel = ({ children, labelContent }: HiddenLabelProps) => (\n    <LabelPrimitive className=\"accessibility-hidden\" labelContent={labelContent}>\n        {children}\n    </LabelPrimitive>\n);\n\nexport default HiddenLabel;\n","import * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport InfoIconWithTooltip from './InfoIconWithTooltip';\nimport StandardLabel from './StandardLabel';\nimport HiddenLabel from './HiddenLabel';\n// @ts-ignore flow import\nimport commonMessages from '../../common/messages';\n\nimport './Label.scss';\n\nconst OptionalFormattedMessage = () => (\n    <span className=\"label-optional bdl-Label-optional\">\n        (<FormattedMessage {...commonMessages.optional} />)\n    </span>\n);\n\nexport interface LabelProps {\n    /** Child for the label */\n    children: React.ReactElement;\n    /** Whether the text of the label should be accessibly hidden */\n    hideLabel?: boolean;\n    /** Optional props for the icon */\n    infoIconProps?: Record<string, any>; // eslint-disable-line @typescript-eslint/no-explicit-any\n    /** Tooltip text for the info icon */\n    infoTooltip?: React.ReactNode;\n    /** Whether to show the `(Optional)` text next to the label for an optional field */\n    showOptionalText?: boolean;\n    /** The label text */\n    text: React.ReactNode;\n    /** Optional tooltip text for the label */\n    tooltip?: React.ReactNode;\n}\n\nconst Label = ({ text, tooltip, infoTooltip, infoIconProps, showOptionalText, hideLabel, children }: LabelProps) => {\n    const labelContent = [\n        <span key=\"labelText\">{text}</span>,\n        showOptionalText ? <OptionalFormattedMessage key=\"optionalMessage\" /> : null,\n    ];\n\n    if (infoTooltip) {\n        labelContent.push(\n            <InfoIconWithTooltip\n                key=\"infoTooltip\"\n                iconProps={{ className: 'tooltip-icon', ...infoIconProps }}\n                tooltipText={infoTooltip}\n            />,\n        );\n    }\n\n    if (hideLabel) {\n        return <HiddenLabel labelContent={labelContent}>{children}</HiddenLabel>;\n    }\n\n    return (\n        <StandardLabel labelContent={labelContent} tooltip={tooltip}>\n            {children}\n        </StandardLabel>\n    );\n};\n\nexport default Label;\n","// @flow\nexport { default } from './InlineNotice';\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { SVGProps } from '../../components/accessible-svg/AccessibleSVG';\n\nexport interface LabelPillIconProps {\n    /** Icon component */\n    Component: React.FunctionComponent<SVGProps>;\n    /** Additional CSS classname(s) */\n    className?: string;\n}\n\nconst LabelPillIcon = ({ Component, className, ...rest }: LabelPillIconProps) => (\n    <Component className={classNames('bdl-LabelPill-iconContent', className)} width={12} height={12} {...rest} />\n);\n\nexport default LabelPillIcon;\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface LabelPillTextProps {\n    /** Text content, ie string or FormattedMessage */\n    children: React.ReactChild;\n    /** Additional CSS classname(s) */\n    className?: string;\n}\n\nconst LabelPillText = ({ children, className, ...rest }: LabelPillTextProps) => (\n    <span className={classNames('bdl-LabelPill-textContent', className)} {...rest}>\n        {children}\n    </span>\n);\n\nexport default LabelPillText;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport startCase from 'lodash/startCase';\nimport LabelPillIcon from './LabelPillIcon';\nimport LabelPillText from './LabelPillText';\n\nimport './LabelPill.scss';\n\nexport enum LabelPillStatus {\n    DEFAULT = 'default',\n    INFO = 'info',\n    FTUX = 'ftux',\n    HIGHLIGHT = 'highlight',\n    SUCCESS = 'success',\n    WARNING = 'warning',\n    ALERT = 'alert',\n    ERROR = 'error',\n}\n\nexport enum LabelPillSize {\n    REGULAR = 'regular',\n    LARGE = 'large',\n}\n\nexport interface LabelPillProps {\n    /** Content, wrapped in either LabelPill.Text or LabelPill.Icon */\n    children: Array<React.ReactChild> | React.ReactChild;\n    /** Type of pill */\n    type?: LabelPillStatus;\n    /** Size of pill */\n    size?: LabelPillSize;\n    /** Additional CSS classname(s) */\n    className?: string;\n}\n\nconst LabelPillContainer = React.forwardRef((props: LabelPillProps, ref: React.Ref<HTMLSpanElement>) => {\n    const { children, type = LabelPillStatus.DEFAULT, size = LabelPillSize.REGULAR, className, ...rest } = props;\n    const labelPillClasses = classNames(\n        'bdl-LabelPill',\n        `bdl-LabelPill--${type}`,\n        `bdl-LabelPill--size${startCase(size)}`,\n        className,\n    );\n    return (\n        <span ref={ref} className={labelPillClasses} {...rest}>\n            {children}\n        </span>\n    );\n});\n\nLabelPillContainer.displayName = 'LabelPill';\n\nconst LabelPill = {\n    Pill: LabelPillContainer,\n    Text: LabelPillText,\n    Icon: LabelPillIcon,\n};\n\nexport default LabelPill;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconInfo = ({ className = '', color = '#000000', height = 24, title, width = 24 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-info ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"-603 389 16 16\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M-595 403c5.5 0 8-7.1 3.9-10.6-4.2-3.6-10.8.3-9.8 5.7.5 2.8 3 4.9 5.9 4.9zm.9-6.7v3.7h-1.4v-3.7h1.4zm.1-2.2c0 1-1.7 1.1-1.7 0 .1-1.1 1.7-1.1 1.7 0z\"\n            fill={color}\n            fillRule=\"evenodd\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconInfo;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","/**\n * @flow\n * @file withErrorHandling higher order component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ErrorMask from '../../components/error-mask/ErrorMask';\nimport InlineError from '../../components/inline-error/InlineError';\n\nimport SidebarSection from './SidebarSection';\n\nimport type { Errors } from '../common/flowTypes';\n\ntype Props = {\n    errorCode?: string,\n} & Errors;\n\nconst withErrorHandling = (WrappedComponent: React.ComponentType<any>) => ({\n    maskError,\n    inlineError,\n    errorCode,\n    ...rest\n}: Props) => {\n    if (maskError) {\n        return (\n            <SidebarSection>\n                <ErrorMask\n                    errorHeader={<FormattedMessage {...maskError.errorHeader} />}\n                    errorSubHeader={\n                        maskError.errorSubHeader ? <FormattedMessage {...maskError.errorSubHeader} /> : undefined\n                    }\n                />\n            </SidebarSection>\n        );\n    }\n    if (inlineError) {\n        return (\n            <>\n                <InlineError title={<FormattedMessage {...inlineError.title} />}>\n                    <FormattedMessage {...inlineError.content} />\n                </InlineError>\n                <WrappedComponent {...rest} />\n            </>\n        );\n    }\n\n    return <WrappedComponent {...rest} />;\n};\n\nexport default withErrorHandling;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport uniqueId from 'lodash/uniqueId';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport IconBack from '../../icon/fill/Arrow16';\nimport IconClose from '../../icon/fill/X16';\n\nconst ALERT_TYPE = 'alert';\nconst DIALOG_TYPE = 'dialog';\n\nconst messages = defineMessages({\n    backModalText: {\n        defaultMessage: 'Back',\n        description: 'Button to get back inside modal',\n        id: 'boxui.modalDialog.backModalText',\n    },\n    closeModalText: {\n        defaultMessage: 'Close Modal',\n        description: 'Button to close modal',\n        id: 'boxui.modalDialog.closeModalText',\n    },\n});\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n    closeButtonProps: Object,\n    intl: Object,\n    modalRef?: Function,\n    onRequestBack?: Function,\n    onRequestClose?: Function,\n    title?: React.Node,\n    type?: 'alert' | 'dialog',\n};\n\nclass ModalDialog extends React.Component<Props> {\n    static defaultProps = {\n        type: DIALOG_TYPE,\n        closeButtonProps: {},\n    };\n\n    /**\n     * Handles clicking on the back button\n     * @param {SyntheticMouseEvent} event\n     * @return {void}\n     */\n    onBackButtonClick = (event: SyntheticMouseEvent<HTMLButtonElement>) => {\n        const { onRequestBack } = this.props;\n        if (onRequestBack) {\n            onRequestBack(event);\n        }\n    };\n\n    /**\n     * Handles clicking on the close button\n     * @param {SyntheticMouseEvent} event\n     * @return {void}\n     */\n    onCloseButtonClick = (event: SyntheticMouseEvent<HTMLButtonElement>) => {\n        const { onRequestClose } = this.props;\n        if (onRequestClose) {\n            onRequestClose(event);\n        }\n    };\n\n    modalID: string = uniqueId('modal');\n\n    /**\n     * Renders a button if onRequestBack is passed in\n     * @return {ReactElement|null} - Returns the button, or null if the button shouldn't be rendered\n     */\n    renderBackButton() {\n        const { intl } = this.props;\n        const { formatMessage } = intl;\n        return (\n            <button\n                aria-label={formatMessage(messages.backModalText)}\n                className=\"modal-back-button\"\n                data-testid=\"modal-back-button\"\n                onClick={this.onBackButtonClick}\n                type=\"button\"\n            >\n                <IconBack height={18} width={18} />\n            </button>\n        );\n    }\n\n    /**\n     * Renders a button if onRequestClose is passed in\n     * @return {ReactElement|null} - Returns the button, or null if the button shouldn't be rendered\n     */\n    renderCloseButton() {\n        const { closeButtonProps, intl } = this.props;\n        const { formatMessage } = intl;\n\n        return (\n            // eslint-disable-next-line react/button-has-type\n            <button\n                {...closeButtonProps}\n                aria-label={formatMessage(messages.closeModalText)}\n                className=\"modal-close-button\"\n                onClick={this.onCloseButtonClick}\n            >\n                <IconClose color=\"#909090\" height={18} width={18} />\n            </button>\n        );\n    }\n\n    renderContent() {\n        const { children, type } = this.props;\n\n        if (type !== ALERT_TYPE) {\n            return <div className=\"modal-content\">{children}</div>;\n        }\n\n        const elements = React.Children.toArray(children);\n        if (elements.length !== 2) {\n            throw new Error('Alert modal must have exactly two children: A message and <ModalActions>');\n        }\n\n        return (\n            <div className=\"modal-content\">\n                <p id={`${this.modalID}-desc`}>{elements[0]}</p>\n                {elements[1]}\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            className,\n            modalRef,\n            onRequestBack,\n            onRequestClose,\n            title,\n            type,\n            ...rest // Useful for resin tagging, and other misc tags such as a11y\n        } = this.props;\n        const isAlertType = type === ALERT_TYPE;\n        const divProps = omit(rest, ['children', 'closeButtonProps', 'onRequestClose', 'intl']);\n\n        divProps.role = isAlertType ? 'alertdialog' : 'dialog';\n        divProps['aria-labelledby'] = `${this.modalID}-label`;\n        if (isAlertType) {\n            divProps['aria-describedby'] = `${this.modalID}-desc`;\n        }\n\n        return (\n            <div ref={modalRef} className={classNames('modal-dialog', className)} {...divProps}>\n                <div className=\"modal-header-container\">\n                    <div className=\"modal-header\">\n                        {onRequestBack && this.renderBackButton()}\n                        <h2 className=\"modal-title\" id={`${this.modalID}-label`}>\n                            {title}\n                        </h2>\n                    </div>\n                    {onRequestClose && this.renderCloseButton()}\n                </div>\n                {this.renderContent()}\n            </div>\n        );\n    }\n}\n\nexport { ModalDialog as ModalDialogBase };\nexport default injectIntl(ModalDialog);\n","export { default } from './Label';\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport tabbable from 'tabbable';\nimport omit from 'lodash/omit';\n\nimport FocusTrap from '../focus-trap';\nimport LoadingIndicator from '../loading-indicator';\nimport Portal from '../portal';\nimport ModalDialog from './ModalDialog';\n\nimport './Modal.scss';\n\ntype Props = {\n    children: React.Node,\n    /** Additional CSS classname of the `.modal` element */\n    className?: string,\n    focusElementSelector?: string,\n    isLoading?: boolean,\n    isOpen?: boolean,\n    onBackdropClick?: Function,\n    /** `(event) => {}`. `event` can be of type `SyntheticKeyboardEvent|SyntheticMouseEvent`. */\n    onRequestClose?: Function,\n    /** modal usually use Portal as Portal stays if parent is removed, but it cannot retain DOM tree's resin props */\n    shouldNotUsePortal?: boolean,\n    style: {\n        backdrop?: Object,\n        dialog?: Object,\n    },\n    title?: React.Node,\n};\n\nclass Modal extends React.Component<Props> {\n    static defaultProps = {\n        style: {\n            backdrop: {},\n            dialog: {},\n        },\n    };\n\n    componentDidMount() {\n        const { isOpen } = this.props;\n\n        if (isOpen) {\n            this.onModalOpen();\n        }\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        const { isLoading, isOpen } = this.props;\n\n        // Set focus if modal is transitioning from closed -> open and/or loading -> not loading\n        if ((!prevProps.isOpen || prevProps.isLoading) && isOpen && !isLoading) {\n            this.onModalOpen();\n        }\n    }\n\n    /**\n     * Call props.onRequestClose when escape is pressed\n     * @param {SyntheticKeyboardEvent} event\n     */\n    onKeyDown = (event: SyntheticKeyboardEvent<>) => {\n        const { isOpen, onRequestClose } = this.props;\n        if (isOpen && onRequestClose && event.key === 'Escape') {\n            event.stopPropagation();\n            onRequestClose(event);\n        }\n    };\n\n    /**\n     * Call props.onRequestClose when backdrop is clicked\n     * @param {SyntheticMouseEvent} event\n     */\n    onBackdropClick = (event: SyntheticMouseEvent<HTMLDivElement>) => {\n        const { onRequestClose, onBackdropClick } = this.props;\n\n        if (onBackdropClick) {\n            onBackdropClick(event);\n        } else if (onRequestClose) {\n            onRequestClose(event);\n        }\n    };\n\n    /**\n     * Focuses on the correct element in the popup when it opens\n     */\n    onModalOpen = () => {\n        setTimeout(() => {\n            const { focusElementSelector } = this.props;\n            const focusElementSelectorTrimmed = focusElementSelector && focusElementSelector.trim();\n            if (focusElementSelectorTrimmed) {\n                this.focusElement(focusElementSelectorTrimmed);\n            } else {\n                this.focusFirstUsefulElement();\n            }\n        }, 0);\n    };\n\n    dialog: ?HTMLElement;\n\n    /**\n     * Focus the first useful element in the modal (i.e. not the close button, unless it's the only thing)\n     */\n    focusFirstUsefulElement = () => {\n        if (!this.dialog) {\n            return;\n        }\n        const tabbableEls = tabbable(this.dialog);\n        if (tabbableEls.length > 1) {\n            tabbableEls[1].focus();\n        } else if (tabbableEls.length > 0) {\n            tabbableEls[0].focus();\n        }\n    };\n\n    /**\n     * Focus the element that matches the selector in the modal\n     * @throws {Error} When the elementSelector does not match any element\n     */\n    focusElement = (elementSelector: string) => {\n        if (!this.dialog) {\n            return;\n        }\n        const el = this.dialog.querySelector(elementSelector);\n        if (el) {\n            el.focus();\n        } else {\n            throw new Error(`Could not find element matching selector ${elementSelector} to focus on.`);\n        }\n    };\n\n    render() {\n        const { className, isLoading, isOpen, onRequestClose, shouldNotUsePortal, style, ...rest } = this.props;\n\n        if (!isOpen) {\n            return null;\n        }\n\n        const bodyOverrideStyle = `\n            body {\n                overflow:hidden;\n            }\n        `;\n\n        // used `omit` here to prevent certain key/value pairs from going into the spread on `ModalDialog`\n        const modalProps = omit(rest, ['onBackdropClick', 'focusElementSelector']);\n\n        const WrapperComponent = shouldNotUsePortal ? 'div' : Portal;\n        // Render a style tag to prevent body from scrolling as long as the Modal is open\n        return (\n            <WrapperComponent className={classNames('modal', className)} onKeyDown={this.onKeyDown} tabIndex=\"-1\">\n                {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events */}\n                <div className=\"modal-backdrop\" onClick={this.onBackdropClick} style={style.backdrop} />\n                <FocusTrap className=\"modal-dialog-container\">\n                    {isLoading ? (\n                        <LoadingIndicator size=\"large\" />\n                    ) : (\n                        <ModalDialog\n                            modalRef={modalEl => {\n                                // This callback gets passed through as a regular prop since\n                                // ModalDialog is wrapped in a HOC\n                                this.dialog = modalEl;\n                            }}\n                            onRequestClose={onRequestClose}\n                            style={style.dialog}\n                            {...modalProps}\n                        />\n                    )}\n                </FocusTrap>\n                <style type=\"text/css\">{bodyOverrideStyle}</style>\n            </WrapperComponent>\n        );\n    }\n}\n\nexport default Modal;\n","// @flow\nimport React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n    className?: string,\n};\n\nconst ModalActions = ({ className, ...rest }: Props) => (\n    <div className={classNames('modal-actions', className)} {...rest} />\n);\n\nexport default ModalActions;\n","// @flow\nconst BOX_BLUE = '#0061d5';\nconst SEESEE = '#ccc';\nconst RESIN_TAG_TARGET = 'data-resin-target';\n\nexport { BOX_BLUE, SEESEE, RESIN_TAG_TARGET };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport { createElement, Component } from 'react';\nimport { oneOfType, func, shape, any, number, object, bool, string } from 'prop-types';\n\nvar isIE =  !!document.documentElement.currentStyle ;\nvar HIDDEN_TEXTAREA_STYLE = {\n  'min-height': '0',\n  'max-height': 'none',\n  height: '0',\n  visibility: 'hidden',\n  overflow: 'hidden',\n  position: 'absolute',\n  'z-index': '-1000',\n  top: '0',\n  right: '0'\n};\nvar SIZING_STYLE = ['letter-spacing', 'line-height', 'font-family', 'font-weight', 'font-size', 'font-style', 'tab-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left', 'border-top-width', 'border-right-width', 'border-bottom-width', 'border-left-width', 'box-sizing'];\nvar computedStyleCache = {};\nvar hiddenTextarea =  document.createElement('textarea');\n\nvar forceHiddenStyles = function forceHiddenStyles(node) {\n  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function (key) {\n    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], 'important');\n  });\n};\n\n{\n  hiddenTextarea.setAttribute('tab-index', '-1');\n  hiddenTextarea.setAttribute('aria-hidden', 'true');\n  forceHiddenStyles(hiddenTextarea);\n}\n\nfunction calculateNodeHeight(uiTextNode, uid, useCache, minRows, maxRows) {\n  if (useCache === void 0) {\n    useCache = false;\n  }\n\n  if (minRows === void 0) {\n    minRows = null;\n  }\n\n  if (maxRows === void 0) {\n    maxRows = null;\n  }\n\n  if (hiddenTextarea.parentNode === null) {\n    document.body.appendChild(hiddenTextarea);\n  } // Copy all CSS properties that have an impact on the height of the content in\n  // the textbox\n\n\n  var nodeStyling = calculateNodeStyling(uiTextNode, uid, useCache);\n\n  if (nodeStyling === null) {\n    return null;\n  }\n\n  var paddingSize = nodeStyling.paddingSize,\n      borderSize = nodeStyling.borderSize,\n      boxSizing = nodeStyling.boxSizing,\n      sizingStyle = nodeStyling.sizingStyle; // Need to have the overflow attribute to hide the scrollbar otherwise\n  // text-lines will not calculated properly as the shadow will technically be\n  // narrower for content\n\n  Object.keys(sizingStyle).forEach(function (key) {\n    hiddenTextarea.style[key] = sizingStyle[key];\n  });\n  forceHiddenStyles(hiddenTextarea);\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || 'x';\n  var minHeight = -Infinity;\n  var maxHeight = Infinity;\n  var height = hiddenTextarea.scrollHeight;\n\n  if (boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    height = height + borderSize;\n  } else if (boxSizing === 'content-box') {\n    // remove padding, since height = content\n    height = height - paddingSize;\n  } // measure height of a textarea with a single row\n\n\n  hiddenTextarea.value = 'x';\n  var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize; // Stores the value's rows count rendered in `hiddenTextarea`,\n  // regardless if `maxRows` or `minRows` props are passed\n\n  var valueRowCount = Math.floor(height / singleRowHeight);\n\n  if (minRows !== null) {\n    minHeight = singleRowHeight * minRows;\n\n    if (boxSizing === 'border-box') {\n      minHeight = minHeight + paddingSize + borderSize;\n    }\n\n    height = Math.max(minHeight, height);\n  }\n\n  if (maxRows !== null) {\n    maxHeight = singleRowHeight * maxRows;\n\n    if (boxSizing === 'border-box') {\n      maxHeight = maxHeight + paddingSize + borderSize;\n    }\n\n    height = Math.min(maxHeight, height);\n  }\n\n  var rowCount = Math.floor(height / singleRowHeight);\n  return {\n    height: height,\n    minHeight: minHeight,\n    maxHeight: maxHeight,\n    rowCount: rowCount,\n    valueRowCount: valueRowCount\n  };\n}\n\nfunction calculateNodeStyling(node, uid, useCache) {\n  if (useCache === void 0) {\n    useCache = false;\n  }\n\n  if (useCache && computedStyleCache[uid]) {\n    return computedStyleCache[uid];\n  }\n\n  var style = window.getComputedStyle(node);\n\n  if (style === null) {\n    return null;\n  }\n\n  var sizingStyle = SIZING_STYLE.reduce(function (obj, name) {\n    obj[name] = style.getPropertyValue(name);\n    return obj;\n  }, {});\n  var boxSizing = sizingStyle['box-sizing']; // probably node is detached from DOM, can't read computed dimensions\n\n  if (boxSizing === '') {\n    return null;\n  } // IE (Edge has already correct behaviour) returns content width as computed width\n  // so we need to add manually padding and border widths\n\n\n  if (isIE && boxSizing === 'border-box') {\n    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(style['border-right-width']) + parseFloat(style['border-left-width']) + parseFloat(style['padding-right']) + parseFloat(style['padding-left']) + 'px';\n  }\n\n  var paddingSize = parseFloat(sizingStyle['padding-bottom']) + parseFloat(sizingStyle['padding-top']);\n  var borderSize = parseFloat(sizingStyle['border-bottom-width']) + parseFloat(sizingStyle['border-top-width']);\n  var nodeInfo = {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize,\n    boxSizing: boxSizing\n  };\n\n  if (useCache) {\n    computedStyleCache[uid] = nodeInfo;\n  }\n\n  return nodeInfo;\n}\n\nvar purgeCache = function purgeCache(uid) {\n  delete computedStyleCache[uid];\n};\n\nvar noop = function noop() {};\n\nvar uid = 0;\n\nvar TextareaAutosize =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TextareaAutosize, _React$Component);\n\n  function TextareaAutosize(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this._onRef = function (node) {\n      _this._ref = node;\n      var inputRef = _this.props.inputRef;\n\n      if (typeof inputRef === 'function') {\n        inputRef(node);\n        return;\n      }\n\n      inputRef.current = node;\n    };\n\n    _this._onChange = function (event) {\n      if (!_this._controlled) {\n        _this._resizeComponent();\n      }\n\n      _this.props.onChange(event, _assertThisInitialized(_this));\n    };\n\n    _this._resizeComponent = function (callback) {\n      if (callback === void 0) {\n        callback = noop;\n      }\n\n      var nodeHeight = calculateNodeHeight(_this._ref, _this._uid, _this.props.useCacheForDOMMeasurements, _this.props.minRows, _this.props.maxRows);\n\n      if (nodeHeight === null) {\n        callback();\n        return;\n      }\n\n      var height = nodeHeight.height,\n          minHeight = nodeHeight.minHeight,\n          maxHeight = nodeHeight.maxHeight,\n          rowCount = nodeHeight.rowCount,\n          valueRowCount = nodeHeight.valueRowCount;\n      _this.rowCount = rowCount;\n      _this.valueRowCount = valueRowCount;\n\n      if (_this.state.height !== height || _this.state.minHeight !== minHeight || _this.state.maxHeight !== maxHeight) {\n        _this.setState({\n          height: height,\n          minHeight: minHeight,\n          maxHeight: maxHeight\n        }, callback);\n\n        return;\n      }\n\n      callback();\n    };\n\n    _this.state = {\n      height: props.style && props.style.height || 0,\n      minHeight: -Infinity,\n      maxHeight: Infinity\n    };\n    _this._uid = uid++;\n    _this._controlled = props.value !== undefined;\n    _this._resizeLock = false;\n    return _this;\n  }\n\n  var _proto = TextareaAutosize.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _inputRef = _this$props.inputRef,\n        _maxRows = _this$props.maxRows,\n        _minRows = _this$props.minRows,\n        _onHeightChange = _this$props.onHeightChange,\n        _useCacheForDOMMeasurements = _this$props.useCacheForDOMMeasurements,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"inputRef\", \"maxRows\", \"minRows\", \"onHeightChange\", \"useCacheForDOMMeasurements\"]);\n\n    props.style = _extends({}, props.style, {\n      height: this.state.height\n    });\n    var maxHeight = Math.max(props.style.maxHeight || Infinity, this.state.maxHeight);\n\n    if (maxHeight < this.state.height) {\n      props.style.overflow = 'hidden';\n    }\n\n    return createElement(\"textarea\", _extends({}, props, {\n      onChange: this._onChange,\n      ref: this._onRef\n    }));\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this._resizeComponent(); // Working around Firefox bug which runs resize listeners even when other JS is running at the same moment\n    // causing competing rerenders (due to setState in the listener) in React.\n    // More can be found here - facebook/react#6324\n\n\n    this._resizeListener = function () {\n      if (_this2._resizeLock) {\n        return;\n      }\n\n      _this2._resizeLock = true;\n\n      _this2._resizeComponent(function () {\n        _this2._resizeLock = false;\n      });\n    };\n\n    window.addEventListener('resize', this._resizeListener);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      this._resizeComponent();\n    }\n\n    if (this.state.height !== prevState.height) {\n      this.props.onHeightChange(this.state.height, this);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    window.removeEventListener('resize', this._resizeListener);\n    purgeCache(this._uid);\n  };\n\n  return TextareaAutosize;\n}(Component);\n\nTextareaAutosize.defaultProps = {\n  inputRef: noop,\n  onChange: noop,\n  onHeightChange: noop,\n  useCacheForDOMMeasurements: false\n};\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  inputRef: oneOfType([func, shape({\n    current: any\n  })]),\n  maxRows: number,\n  minRows: number,\n  onChange: func,\n  onHeightChange: func,\n  style: object,\n  useCacheForDOMMeasurements: bool,\n  value: string\n} : void 0;\n\nexport default TextareaAutosize;\n","var createCompounder = require('./_createCompounder'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts `string` to\n * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n *\n * @static\n * @memberOf _\n * @since 3.1.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the start cased string.\n * @example\n *\n * _.startCase('--foo-bar--');\n * // => 'Foo Bar'\n *\n * _.startCase('fooBar');\n * // => 'Foo Bar'\n *\n * _.startCase('__FOO_BAR__');\n * // => 'FOO BAR'\n */\nvar startCase = createCompounder(function(result, word, index) {\n  return result + (index ? ' ' : '') + upperFirst(word);\n});\n\nmodule.exports = startCase;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","import * as React from 'react';\nimport { bdlGreenLight } from '../../styles/variables';\n\nimport AccessibleSVG from '../accessible-svg';\nimport { Icon } from '../iconTypes';\n\nconst IconVerified = ({ className = '', color = bdlGreenLight, height = 14, opacity = 1, title, width = 14 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-verified ${className}`}\n        height={height}\n        opacity={opacity}\n        title={title}\n        viewBox=\"0 0 14 14\"\n        width={width}\n    >\n        <path\n            d=\"M7 14c-3.865993 0-7-3.134007-7-7s3.134007-7 7-7 7 3.134007 7 7-3.134007 7-7 7zM5.31288 9.303048l1.44555 1.21296 4.499514-5.36231-1.44555-1.21296-4.499514 5.36231zM3 7.36231L5.31288 9.30305l1.21296-1.44555L4.21296 5.91676 3 7.36231z\"\n            fill={color}\n            fillRule=\"evenodd\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconVerified;\n","var root = require('./_root');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = root.isFinite;\n\n/**\n * Checks if `value` is a finite primitive number.\n *\n * **Note:** This method is based on\n * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n * @example\n *\n * _.isFinite(3);\n * // => true\n *\n * _.isFinite(Number.MIN_VALUE);\n * // => true\n *\n * _.isFinite(Infinity);\n * // => false\n *\n * _.isFinite('3');\n * // => false\n */\nfunction isFinite(value) {\n  return typeof value == 'number' && nativeIsFinite(value);\n}\n\nmodule.exports = isFinite;\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nmodule.exports = isNil;\n","'use strict';\n\nfunction processString(options) {\n    var key = 0;\n\n    function processInputWithRegex(option, input) {\n        if (!option.fn || typeof option.fn !== 'function') return input;\n\n        if (!option.regex || !(option.regex instanceof RegExp)) return input;\n\n        if (typeof input === 'string') {\n            var regex = option.regex;\n            var result = null;\n            var output = [];\n\n            while ((result = regex.exec(input)) !== null) {\n                var index = result.index;\n                var match = result[0];\n\n                output.push(input.substring(0, index));\n                output.push(option.fn(++key, result));\n\n                input = input.substring(index + match.length, input.length + 1);\n                regex.lastIndex = 0;\n            }\n\n            output.push(input);\n            return output;\n        } else if (Array.isArray(input)) {\n            return input.map(function (chunk) {\n                return processInputWithRegex(option, chunk);\n            });\n        } else return input;\n    }\n\n    return function (input) {\n        if (!options || !Array.isArray(options) || !options.length) return input;\n\n        options.forEach(function (option) {\n            return input = processInputWithRegex(option, input);\n        });\n\n        return input;\n    };\n}\n\nmodule.exports = processString;\n\n","\"use strict\";\n\n/**\r\n * filesize\r\n *\r\n * @copyright 2019 Jason Mulligan <jason.mulligan@avoidwork.com>\r\n * @license BSD-3-Clause\r\n * @version 4.2.1\r\n */\n(function (global) {\n  var b = /^(b|B)$/,\n      symbol = {\n    iec: {\n      bits: [\"b\", \"Kib\", \"Mib\", \"Gib\", \"Tib\", \"Pib\", \"Eib\", \"Zib\", \"Yib\"],\n      bytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\n    },\n    jedec: {\n      bits: [\"b\", \"Kb\", \"Mb\", \"Gb\", \"Tb\", \"Pb\", \"Eb\", \"Zb\", \"Yb\"],\n      bytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n    }\n  },\n      fullform = {\n    iec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\n    jedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\n  };\n  /**\r\n   * filesize\r\n   *\r\n   * @method filesize\r\n   * @param  {Mixed}   arg        String, Int or Float to transform\r\n   * @param  {Object}  descriptor [Optional] Flags\r\n   * @return {String}             Readable file size String\r\n   */\n\n  function filesize(arg) {\n    var descriptor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var result = [],\n        val = 0,\n        e = void 0,\n        base = void 0,\n        bits = void 0,\n        ceil = void 0,\n        full = void 0,\n        fullforms = void 0,\n        locale = void 0,\n        localeOptions = void 0,\n        neg = void 0,\n        num = void 0,\n        output = void 0,\n        round = void 0,\n        unix = void 0,\n        separator = void 0,\n        spacer = void 0,\n        standard = void 0,\n        symbols = void 0;\n\n    if (isNaN(arg)) {\n      throw new TypeError(\"Invalid number\");\n    }\n\n    bits = descriptor.bits === true;\n    unix = descriptor.unix === true;\n    base = descriptor.base || 2;\n    round = descriptor.round !== void 0 ? descriptor.round : unix ? 1 : 2;\n    locale = descriptor.locale !== void 0 ? descriptor.locale : \"\";\n    localeOptions = descriptor.localeOptions || {};\n    separator = descriptor.separator !== void 0 ? descriptor.separator : \"\";\n    spacer = descriptor.spacer !== void 0 ? descriptor.spacer : unix ? \"\" : \" \";\n    symbols = descriptor.symbols || {};\n    standard = base === 2 ? descriptor.standard || \"jedec\" : \"jedec\";\n    output = descriptor.output || \"string\";\n    full = descriptor.fullform === true;\n    fullforms = descriptor.fullforms instanceof Array ? descriptor.fullforms : [];\n    e = descriptor.exponent !== void 0 ? descriptor.exponent : -1;\n    num = Number(arg);\n    neg = num < 0;\n    ceil = base > 2 ? 1000 : 1024; // Flipping a negative number to determine the size\n\n    if (neg) {\n      num = -num;\n    } // Determining the exponent\n\n\n    if (e === -1 || isNaN(e)) {\n      e = Math.floor(Math.log(num) / Math.log(ceil));\n\n      if (e < 0) {\n        e = 0;\n      }\n    } // Exceeding supported length, time to reduce & multiply\n\n\n    if (e > 8) {\n      e = 8;\n    }\n\n    if (output === \"exponent\") {\n      return e;\n    } // Zero is now a special case because bytes divide by 1\n\n\n    if (num === 0) {\n      result[0] = 0;\n      result[1] = unix ? \"\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\n    } else {\n      val = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));\n\n      if (bits) {\n        val = val * 8;\n\n        if (val >= ceil && e < 8) {\n          val = val / ceil;\n          e++;\n        }\n      }\n\n      result[0] = Number(val.toFixed(e > 0 ? round : 0));\n\n      if (result[0] === ceil && e < 8 && descriptor.exponent === void 0) {\n        result[0] = 1;\n        e++;\n      }\n\n      result[1] = base === 10 && e === 1 ? bits ? \"kb\" : \"kB\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\n\n      if (unix) {\n        result[1] = standard === \"jedec\" ? result[1].charAt(0) : e > 0 ? result[1].replace(/B$/, \"\") : result[1];\n\n        if (b.test(result[1])) {\n          result[0] = Math.floor(result[0]);\n          result[1] = \"\";\n        }\n      }\n    } // Decorating a 'diff'\n\n\n    if (neg) {\n      result[0] = -result[0];\n    } // Applying custom symbol\n\n\n    result[1] = symbols[result[1]] || result[1];\n\n    if (locale === true) {\n      result[0] = result[0].toLocaleString();\n    } else if (locale.length > 0) {\n      result[0] = result[0].toLocaleString(locale, localeOptions);\n    } else if (separator.length > 0) {\n      result[0] = result[0].toString().replace(\".\", separator);\n    } // Returning Array, Object, or String (default)\n\n\n    if (output === \"array\") {\n      return result;\n    }\n\n    if (full) {\n      result[1] = fullforms[e] ? fullforms[e] : fullform[standard][e] + (bits ? \"bit\" : \"byte\") + (result[0] === 1 ? \"\" : \"s\");\n    }\n\n    if (output === \"object\") {\n      return {\n        value: result[0],\n        symbol: result[1]\n      };\n    }\n\n    return result.join(spacer);\n  } // Partial application for functional programming\n\n\n  filesize.partial = function (opt) {\n    return function (arg) {\n      return filesize(arg, opt);\n    };\n  }; // CommonJS, AMD, script tag\n\n\n  if (typeof exports !== \"undefined\") {\n    module.exports = filesize;\n  } else if (typeof define === \"function\" && define.amd !== void 0) {\n    define(function () {\n      return filesize;\n    });\n  } else {\n    global.filesize = filesize;\n  }\n})(typeof window !== \"undefined\" ? window : global);\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconEye = ({ className = '', color = '#000000', height = 11, title, width = 15 }: Icon) => (\n    <AccessibleSVG className={`icon-eye ${className}`} height={height} title={title} viewBox=\"0 0 15 11\" width={width}>\n        <path\n            className=\"fill-color\"\n            d=\"M.118 5.857C1.233 8.855 3.986 10.98 7.21 10.98c3.223 0 5.976-2.125 7.09-5.123C13.187 2.86 10.434.735 7.21.735 3.986.735 1.233 2.86.118 5.857zM7.21 9.27c-1.78 0-3.224-1.528-3.224-3.413 0-1.885 1.444-3.414 3.224-3.414 1.78 0 3.223 1.53 3.223 3.414 0 1.885-1.444 3.414-3.223 3.414zm0-5.462c-1.07 0-1.935.915-1.935 2.05 0 1.133.864 2.048 1.935 2.048 1.07 0 1.934-.915 1.934-2.05 0-1.133-.864-2.048-1.934-2.048z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconEye;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconComment = ({ className = '', color = '#000000', height = 11, title, width = 11 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-comment ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 11 11\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M9.556.932H1.492C.938.932.49 1.386.49 1.94l-.006 9.072L2.5 8.996h7.056c.554 0 1.008-.454 1.008-1.008V1.94c0-.554-.454-1.008-1.008-1.008zM2.5 4.46h6.048v1.008H2.5V4.46zm4.032 2.52H2.5V5.972h4.032V6.98zm2.016-3.024H2.5V2.948h6.048v1.008z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconComment;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconPencilSolid = ({ className = '', color = '#000000', height = 10, title, width = 10 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-pencil-solid ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 10 10\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M.5 7.625V9.5h1.875l5.53-5.53-1.876-1.874L.5 7.626zM9.354 2.52c.195-.194.195-.51 0-.704L8.184.646C7.99.45 7.674.45 7.48.646l-.916.915L8.44 3.437l.914-.915z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconPencilSolid;\n","import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    accessStatsViewDetails: {\n        defaultMessage: 'View Details',\n        description: 'The text in the link in the sidebar to open up the access stats popup',\n        id: 'boxui.accessStats.accessStatsViewDetails',\n    },\n    accessStatsViews: {\n        defaultMessage: 'Views',\n        description: 'The label for the view category of access stats for box notes',\n        id: 'boxui.accessStats.accessStatsViews',\n    },\n    accessStatsPreviews: {\n        defaultMessage: 'Previews',\n        description: 'The label for the preview category of access stats',\n        id: 'boxui.accessStats.accessStatsPreviews',\n    },\n    accessStatsEdits: {\n        defaultMessage: 'Edits',\n        description: 'The label for the edit category of access stats',\n        id: 'boxui.accessStats.accessStatsEdits',\n    },\n    accessStatsComments: {\n        defaultMessage: 'Comments',\n        description: 'The label for the comments category of access stats',\n        id: 'boxui.accessStats.accessStatsComments',\n    },\n    accessStatsDownloads: {\n        defaultMessage: 'Downloads',\n        description: 'The label for the downloads category of access stats',\n        id: 'boxui.accessStats.accessStatsDownloads',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage, FormattedNumber } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport IconEye from '../../icons/general/IconEye';\nimport IconComment from '../../icons/general/IconComment';\nimport IconDownloadSolid from '../../icons/general/IconDownloadSolid';\nimport IconPencilSolid from '../../icons/general/IconPencilSolid';\n\nimport messages from './messages';\n\nimport './AccessStatsItem.scss';\n\nconst statsAttributesTable = {\n    preview: {\n        icon: IconEye,\n        message: messages.accessStatsPreviews,\n    },\n    view: {\n        icon: IconEye,\n        message: messages.accessStatsViews,\n    },\n    download: {\n        icon: IconDownloadSolid,\n        message: messages.accessStatsDownloads,\n    },\n    comment: {\n        icon: IconComment,\n        message: messages.accessStatsComments,\n    },\n    edit: {\n        icon: IconPencilSolid,\n        message: messages.accessStatsEdits,\n    },\n};\nconst ICON_COLOR = '#2a62b9';\nconst ITEM_CONTENT_CLASS_NAME = 'access-stats-item-content';\n\ntype AccessStatsItemType = {\n    count: number,\n    hasCountOverflowed?: boolean,\n    openAccessStatsModal?: Function,\n    statButtonProps: Object,\n    type: $Keys<typeof statsAttributesTable>,\n};\n\nconst AccessStatsItem = ({\n    type,\n    count = 0,\n    hasCountOverflowed = false,\n    openAccessStatsModal,\n    statButtonProps,\n}: AccessStatsItemType) => {\n    const statAttributes = statsAttributesTable[type];\n    const IconComponent = statAttributes.icon;\n    const labelMessage = statAttributes.message;\n\n    const itemContent = (\n        <>\n            <IconComponent color={ICON_COLOR} height={10} width={14} />\n            <span className=\"access-stats-label\">\n                <FormattedMessage {...labelMessage} />\n            </span>\n            <FormattedNumber value={count} />\n            {hasCountOverflowed && '+'}\n        </>\n    );\n\n    return (\n        <li className=\"access-stats-item\">\n            {openAccessStatsModal ? (\n                <PlainButton className={ITEM_CONTENT_CLASS_NAME} onClick={openAccessStatsModal} {...statButtonProps}>\n                    {itemContent}\n                </PlainButton>\n            ) : (\n                <span className={ITEM_CONTENT_CLASS_NAME}>{itemContent}</span>\n            )}\n        </li>\n    );\n};\n\nexport default AccessStatsItem;\n","// @flow\nimport * as React from 'react';\n\nimport AccessStatsItem from './AccessStatsItem';\n\ntype AccessStatsItemsType = {\n    commentCount: number,\n    commentStatButtonProps: Object,\n    downloadCount: number,\n    downloadStatButtonProps: Object,\n    editCount: number,\n    editStatButtonProps: Object,\n    hasCountOverflowed: boolean,\n    isBoxNote: boolean,\n    openAccessStatsModal?: Function,\n    previewCount: number,\n    previewStatButtonProps: Object,\n    viewStatButtonProps: Object,\n};\n\nconst AccessStatsItemsList = ({\n    commentCount,\n    commentStatButtonProps,\n    downloadCount,\n    downloadStatButtonProps,\n    editCount,\n    editStatButtonProps,\n    hasCountOverflowed = false,\n    isBoxNote,\n    openAccessStatsModal,\n    previewCount,\n    previewStatButtonProps,\n    viewStatButtonProps,\n}: AccessStatsItemsType) => (\n    <ul className=\"access-stats-list\">\n        <AccessStatsItem\n            count={previewCount}\n            hasCountOverflowed={hasCountOverflowed}\n            openAccessStatsModal={openAccessStatsModal}\n            statButtonProps={isBoxNote ? viewStatButtonProps : previewStatButtonProps}\n            type={isBoxNote ? 'view' : 'preview'}\n        />\n        <AccessStatsItem\n            count={editCount}\n            hasCountOverflowed={hasCountOverflowed}\n            openAccessStatsModal={openAccessStatsModal}\n            statButtonProps={editStatButtonProps}\n            type=\"edit\"\n        />\n        <AccessStatsItem\n            count={commentCount}\n            hasCountOverflowed={hasCountOverflowed}\n            openAccessStatsModal={openAccessStatsModal}\n            statButtonProps={commentStatButtonProps}\n            type=\"comment\"\n        />\n        {!isBoxNote && (\n            <AccessStatsItem\n                count={downloadCount}\n                hasCountOverflowed={hasCountOverflowed}\n                openAccessStatsModal={openAccessStatsModal}\n                statButtonProps={downloadStatButtonProps}\n                type=\"download\"\n            />\n        )}\n    </ul>\n);\n\nexport default AccessStatsItemsList;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport AccessStatsItemsList from './AccessStatsItemsList';\n\nimport messages from './messages';\n\nimport './AccessStats.scss';\n\ntype AccessStatsType = {\n    commentCount?: number,\n    /**\n     * Props for comment stat PlainButton\n     */\n    commentStatButtonProps?: Object,\n    downloadCount?: number,\n    /**\n     * Props for download stat PlainButton\n     */\n    downloadStatButtonProps?: Object,\n    editCount?: number,\n    /**\n     * Props for edit stat PlainButton\n     */\n    editStatButtonProps?: Object,\n    errorMessage?: string,\n    hasCountOverflowed?: boolean,\n    isBoxNote?: boolean,\n    /**\n     * A function that opens the access stats modal\n     */\n    openAccessStatsModal?: Function,\n    previewCount?: number,\n    /**\n     * Props for preview stat PlainButton\n     */\n    previewStatButtonProps?: Object,\n    /**\n     * Props for View More PlainButton\n     */\n    viewMoreButtonProps?: Object,\n    /**\n     * Props for view stat PlainButton\n     */\n    viewStatButtonProps?: Object,\n};\n\nconst AccessStats = ({\n    commentCount = 0,\n    commentStatButtonProps = {},\n    downloadCount = 0,\n    downloadStatButtonProps = {},\n    editCount = 0,\n    editStatButtonProps = {},\n    errorMessage,\n    hasCountOverflowed = false,\n    isBoxNote = false,\n    openAccessStatsModal,\n    previewCount = 0,\n    previewStatButtonProps = {},\n    viewMoreButtonProps = {},\n    viewStatButtonProps = {},\n}: AccessStatsType) => (\n    <div className=\"access-stats\">\n        {errorMessage ? (\n            <p>{errorMessage}</p>\n        ) : (\n            <>\n                <AccessStatsItemsList\n                    commentCount={commentCount}\n                    commentStatButtonProps={commentStatButtonProps}\n                    downloadCount={downloadCount}\n                    downloadStatButtonProps={downloadStatButtonProps}\n                    editCount={editCount}\n                    editStatButtonProps={editStatButtonProps}\n                    hasCountOverflowed={hasCountOverflowed}\n                    isBoxNote={isBoxNote}\n                    openAccessStatsModal={openAccessStatsModal}\n                    previewCount={previewCount}\n                    previewStatButtonProps={previewStatButtonProps}\n                    viewStatButtonProps={viewStatButtonProps}\n                />\n                {openAccessStatsModal && (\n                    <PlainButton\n                        className=\"lnk access-stats-view-details\"\n                        onClick={openAccessStatsModal}\n                        {...viewMoreButtonProps}\n                    >\n                        <FormattedMessage {...messages.accessStatsViewDetails} />\n                    </PlainButton>\n                )}\n            </>\n        )}\n    </div>\n);\n\nexport default AccessStats;\n","/**\n * @flow\n * @file Versions sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport isFinite from 'lodash/isFinite';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport type { MessageDescriptor, InjectIntlProvidedProps } from 'react-intl';\nimport AccessStats from '../../features/access-stats/AccessStats';\nimport messages from '../common/messages';\nimport { INTERACTION_TARGET, SECTION_TARGETS, DETAILS_TARGETS } from '../common/interactionTargets';\nimport { isBoxNote } from '../../utils/file';\nimport SidebarSection from './SidebarSection';\nimport withErrorHandling from './withErrorHandling';\nimport type { FileAccessStats } from './flowTypes';\nimport type { BoxItem } from '../../common/types/core';\n\ntype Props = {\n    accessStats?: FileAccessStats,\n    error?: MessageDescriptor,\n    file: BoxItem,\n    onAccessStatsClick?: Function,\n} & InjectIntlProvidedProps;\n\nconst SidebarAccessStats = ({\n    onAccessStatsClick,\n    accessStats = {\n        comment_count: undefined,\n        download_count: undefined,\n        edit_count: undefined,\n        has_count_overflowed: false,\n        preview_count: undefined,\n    },\n    file,\n    error,\n    intl,\n}: Props) => {\n    const { preview_count, comment_count, download_count, edit_count } = accessStats;\n\n    if (\n        !isFinite(preview_count) &&\n        !isFinite(comment_count) &&\n        !isFinite(download_count) &&\n        !isFinite(edit_count) &&\n        !error\n    ) {\n        return null;\n    }\n\n    const errorMessage = error ? intl.formatMessage(error) : undefined;\n    return (\n        <SidebarSection\n            interactionTarget={SECTION_TARGETS.ACCESS_STATS}\n            title={<FormattedMessage {...messages.sidebarAccessStats} />}\n        >\n            <AccessStats\n                errorMessage={errorMessage}\n                commentCount={comment_count}\n                commentStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.COMMENTS,\n                }}\n                downloadCount={download_count}\n                downloadStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.DOWNLOADS,\n                }}\n                previewCount={preview_count}\n                previewStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.PREVIEWS,\n                }}\n                viewStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.VIEWS,\n                }}\n                editCount={edit_count}\n                editStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.EDITS,\n                }}\n                openAccessStatsModal={onAccessStatsClick}\n                isBoxNote={isBoxNote(file)}\n                viewMoreButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.VIEW_DETAILS,\n                }}\n            />\n        </SidebarSection>\n    );\n};\n\nexport { SidebarAccessStats as SidebarAccessStatsComponent };\nexport default withErrorHandling(injectIntl(SidebarAccessStats));\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nimport AccessibleSVG from '../accessible-svg';\nimport { bdlGray } from '../../styles/variables';\nimport { Icon } from '../iconTypes';\n\n// TODO - Move this icon to the Asset repo. P Paul 5/2020\nconst IconSecurityClassification = ({ className = '', height = 12, color = bdlGray, title, width = 12 }: Icon) => {\n    const classes = classNames('bdl-IconSecurityClassification', className);\n\n    return (\n        <AccessibleSVG className={classes} height={height} title={title} viewBox=\"0 0 12 12\" width={width}>\n            <path\n                d=\"M6 0l4.875 2.438v2.856c0 2.645-2.309 5.792-4.79 6.366L6 11.68l-.084-.02c-2.482-.574-4.791-3.721-4.791-6.366V2.438L6 0zm0 .839L1.875 2.9v2.393c0 2.276 2.026 5.068 4.125 5.614 2.1-.546 4.125-3.338 4.125-5.614V2.901L6 .839zm2.25 2.58c.207 0 .375.168.375.375v3c0 .207-.168.375-.375.375s-.375-.168-.375-.375v-3c0-.207.168-.375.375-.375z\"\n                fill={color}\n                fillRule=\"evenodd\"\n            />\n        </AccessibleSVG>\n    );\n};\n\nexport default IconSecurityClassification;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nimport IconAlertDefault from '../../icons/general/IconAlertDefault';\nimport { bdlYellow50 } from '../../styles/variables';\nimport './SecurityBadge.scss';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    icon?: React.Node,\n    message: React.Node,\n    strokeColor?: string,\n};\n\nconst SecurityBadge = ({ className, color, icon, message, ...rest }: Props) => (\n    <h1 className={classNames('bdl-SecurityBadge', className)} style={{ backgroundColor: color }} {...rest}>\n        {icon}\n        <span className=\"bdl-SecurityBadge-name\">{message}</span>\n    </h1>\n);\n\nSecurityBadge.defaultProps = {\n    icon: <IconAlertDefault color={bdlYellow50} height={22} width={22} strokeWidth={3} />,\n};\n\nexport default SecurityBadge;\n","// @flow\nimport * as React from 'react';\n\nimport PlainButton from '../../components/plain-button';\nimport Tooltip from '../../components/tooltip';\nimport IconSecurityClassification from '../../icons/general/IconSecurityClassification';\nimport SecurityBadge from '../security';\nimport { bdlYellow50 } from '../../styles/variables';\nimport type { Position } from '../../components/tooltip';\nimport './ClassifiedBadge.scss';\n\ntype Props = {\n    color?: string,\n    name: string,\n    onClick?: (event: SyntheticEvent<HTMLButtonElement>) => void,\n    tooltipPosition?: Position,\n    tooltipText?: string,\n};\n\nconst ICON_SIZE = 12;\n\nconst ClassifiedBadge = ({ color, name, onClick, tooltipPosition = 'bottom-center', tooltipText }: Props) => {\n    const isClickable = typeof onClick === 'function';\n    const isTooltipDisabled = !tooltipText;\n    const badge = (\n        <SecurityBadge\n            className=\"bdl-ClassifiedBadge\"\n            color={color}\n            icon={<IconSecurityClassification height={ICON_SIZE} width={ICON_SIZE} />}\n            message={name}\n        />\n    );\n    return (\n        <Tooltip isDisabled={isTooltipDisabled} isTabbable={false} position={tooltipPosition} text={tooltipText}>\n            {isClickable ? (\n                <PlainButton\n                    className=\"bdl-ClassifiedBadge-editButton\"\n                    data-resin-target=\"editclassification\"\n                    onClick={onClick}\n                    type=\"button\"\n                >\n                    {badge}\n                </PlainButton>\n            ) : (\n                badge\n            )}\n        </Tooltip>\n    );\n};\n\nClassifiedBadge.defaultProps = {\n    color: bdlYellow50,\n};\n\nexport default ClassifiedBadge;\n","// @flow\nconst DEFAULT_MAX_APP_COUNT = 3;\n\nconst SECURITY_CONTROLS_FORMAT: {\n    FULL: 'full',\n    SHORT: 'short',\n    SHORT_WITH_BTN: 'shortWithBtn',\n} = {\n    FULL: 'full',\n    SHORT: 'short',\n    SHORT_WITH_BTN: 'shortWithBtn',\n};\n\nconst ACCESS_POLICY_RESTRICTION: {\n    APP: 'app',\n    BOX_SIGN_REQUEST: 'boxSignRequest',\n    DOWNLOAD: 'download',\n    EXTERNAL_COLLAB: 'externalCollab',\n    FTP: 'ftp',\n    SHARED_LINK: 'sharedLink',\n    WATERMARK: 'watermark',\n} = {\n    APP: 'app',\n    BOX_SIGN_REQUEST: 'boxSignRequest',\n    DOWNLOAD: 'download',\n    EXTERNAL_COLLAB: 'externalCollab',\n    FTP: 'ftp',\n    SHARED_LINK: 'sharedLink',\n    WATERMARK: 'watermark',\n};\n\nconst DOWNLOAD_CONTROL: {\n    DESKTOP: 'desktop',\n    FTP: 'ftp',\n    MOBILE: 'mobile',\n    WEB: 'web',\n} = {\n    DESKTOP: 'desktop',\n    FTP: 'ftp',\n    MOBILE: 'mobile',\n    WEB: 'web',\n};\n\nconst LIST_ACCESS_LEVEL: {\n    BLACKLIST: 'blacklist',\n    BLOCK: 'block',\n    WHITELIST: 'whitelist',\n} = {\n    BLACKLIST: 'blacklist',\n    BLOCK: 'block',\n    WHITELIST: 'whitelist',\n};\n\nconst MANAGED_USERS_ACCESS_LEVEL: {\n    OWNERS_AND_COOWNERS: 'ownersCoOwners',\n    OWNERS_COOWNERS_AND_EDITORS: 'ownersCoOwnersEditors',\n} = {\n    OWNERS_AND_COOWNERS: 'ownersCoOwners',\n    OWNERS_COOWNERS_AND_EDITORS: 'ownersCoOwnersEditors',\n};\n\nconst SHARED_LINK_ACCESS_LEVEL: {\n    COLLAB_AND_COMPANY_ONLY: 'companyAndCollabOnly',\n    COLLAB_ONLY: 'collabOnly',\n    PUBLIC: 'public',\n} = {\n    COLLAB_AND_COMPANY_ONLY: 'companyAndCollabOnly',\n    COLLAB_ONLY: 'collabOnly',\n    PUBLIC: 'public',\n};\n\nconst APP_RESTRICTION_MESSAGE_TYPE = {\n    DEFAULT: 'default',\n    WITH_APP_LIST: 'withAppList',\n    WITH_OVERFLOWN_APP_LIST: 'withOverflownAppList',\n};\n\nconst CLASSIFICATION_COLOR_ID_0 = 0;\nconst CLASSIFICATION_COLOR_ID_1 = 1;\nconst CLASSIFICATION_COLOR_ID_2 = 2;\nconst CLASSIFICATION_COLOR_ID_3 = 3;\nconst CLASSIFICATION_COLOR_ID_4 = 4;\nconst CLASSIFICATION_COLOR_ID_5 = 5;\nconst CLASSIFICATION_COLOR_ID_6 = 6;\nconst CLASSIFICATION_COLOR_ID_7 = 7;\n\nconst DEFAULT_CLASSIFICATION_COLOR_ID = CLASSIFICATION_COLOR_ID_0;\n\nexport {\n    ACCESS_POLICY_RESTRICTION,\n    APP_RESTRICTION_MESSAGE_TYPE,\n    CLASSIFICATION_COLOR_ID_0,\n    CLASSIFICATION_COLOR_ID_1,\n    CLASSIFICATION_COLOR_ID_2,\n    CLASSIFICATION_COLOR_ID_3,\n    CLASSIFICATION_COLOR_ID_4,\n    CLASSIFICATION_COLOR_ID_5,\n    CLASSIFICATION_COLOR_ID_6,\n    CLASSIFICATION_COLOR_ID_7,\n    DEFAULT_CLASSIFICATION_COLOR_ID,\n    DEFAULT_MAX_APP_COUNT,\n    DOWNLOAD_CONTROL,\n    LIST_ACCESS_LEVEL,\n    MANAGED_USERS_ACCESS_LEVEL,\n    SECURITY_CONTROLS_FORMAT,\n    SHARED_LINK_ACCESS_LEVEL,\n};\n","// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    securityControlsLabel: {\n        defaultMessage: 'Restrictions',\n        description:\n            'Label displayed above the security restrictions on the file due to the classification label and associated policies.',\n        id: 'boxui.securityControls.securityControlsLabel',\n    },\n    // Short summary messages - 1 restriction\n    shortSharing: {\n        defaultMessage: 'Sharing restriction applies',\n        description: 'Short summary displayed for classification when a sharing restriction is applied to it',\n        id: 'boxui.securityControls.shortSharing',\n    },\n    shortDownload: {\n        defaultMessage: 'Download restrictions apply',\n        description: 'Short summary displayed for classification when a download restriction is applied to it',\n        id: 'boxui.securityControls.shortDownload',\n    },\n    shortApp: {\n        defaultMessage: 'Application restrictions apply',\n        description:\n            'Short summary displayed for classification when an application download restriction is applied to it',\n        id: 'boxui.securityControls.shortApp',\n    },\n    shortWatermarking: {\n        defaultMessage: 'Watermarking applies',\n        description: 'Short summary displayed for classification when watermarking is applied to it',\n        id: 'boxui.securityControls.shortWatermarking',\n    },\n    shortSign: {\n        defaultMessage: 'Sign restrictions apply',\n        description:\n            'Short summary displayed for items when Sign restriction is applied to them. Box Sign is a product name',\n        id: 'boxui.securityControls.shortSign',\n    },\n    // Short summary messages - 2 restrictions\n    shortSharingDownload: {\n        defaultMessage: 'Sharing and download restrictions apply',\n        description:\n            'Short summary displayed for classification when both sharing and download restrictions are applied to it',\n        id: 'boxui.securityControls.shortSharingDownload',\n    },\n    shortSharingApp: {\n        defaultMessage: 'Sharing and app restrictions apply',\n        description:\n            'Short summary displayed for classification when both sharing and app download restrictions are applied to it',\n        id: 'boxui.securityControls.shortSharingApp',\n    },\n    shortDownloadApp: {\n        defaultMessage: 'Download and app restrictions apply',\n        description:\n            'Short summary displayed for classification when both download and app download restrictions are applied to it',\n        id: 'boxui.securityControls.shortDownloadApp',\n    },\n    shortSharingSign: {\n        defaultMessage: 'Sharing and Sign restrictions apply',\n        description:\n            'Short summary displayed for items when both sharing and Sign restrictions are applied to them. Box Sign is a product name',\n        id: 'boxui.securityControls.shortSharingSign',\n    },\n    shortDownloadSign: {\n        defaultMessage: 'Download and Sign restrictions apply',\n        description:\n            'Short summary displayed for items when both download and Sign restrictions are applied to them. Box Sign is a product name',\n        id: 'boxui.securityControls.shortDownloadSign',\n    },\n    shortAppSign: {\n        defaultMessage: 'App and Sign restrictions apply',\n        description:\n            'Short summary displayed for items when both app download and Sign restrictions are applied to them. Box Sign is a product name',\n        id: 'boxui.securityControls.shortAppSign',\n    },\n    // Short summary messages - 3 restrictions\n    shortDownloadAppSign: {\n        defaultMessage: 'Download, app and Sign restrictions apply',\n        description:\n            'Short summary displayed for items when download, app download and Sign restrictions are applied to them. Box Sign is a product name',\n        id: 'boxui.securityControls.shortDownloadAppSign',\n    },\n    shortSharingAppSign: {\n        defaultMessage: 'Sharing, app and Sign restrictions apply',\n        description:\n            'Short summary displayed for items when sharing, app download and Sign restrictions are applied to them. Box Sign is a product name',\n        id: 'boxui.securityControls.shortSharingAppSign',\n    },\n    shortSharingDownloadSign: {\n        defaultMessage: 'Sharing, download and Sign restrictions apply',\n        description:\n            'Short summary displayed for items when sharing, download and Sign restrictions are applied to them. Box Sign is a product name',\n        id: 'boxui.securityControls.shortSharingDownloadSign',\n    },\n    shortSharingDownloadApp: {\n        defaultMessage: 'Sharing, download and app restrictions apply',\n        description:\n            'Short summary displayed for items when sharing, download and app download restrictions are applied to them.',\n        id: 'boxui.securityControls.shortSharingDownloadApp',\n    },\n    // Short summary messages - 4 restrictions\n    shortSharingDownloadAppSign: {\n        defaultMessage: 'Sharing, download, app and Sign restrictions apply',\n        description:\n            'Short summary displayed for items when sharing, download, app download and Sign restrictions are applied to them. Box Sign is a product name',\n        id: 'boxui.securityControls.shortSharingDownloadAppSign',\n    },\n    // Full list individual restriction bullets\n    sharingCollabOnly: {\n        defaultMessage: 'Shared links allowed for collaborators only.',\n        description: 'Bullet point that summarizes shared link restriction applied to classification',\n        id: 'boxui.securityControls.sharingCollabOnly',\n    },\n    sharingCollabAndCompanyOnly: {\n        defaultMessage: 'Shared links cannot be made publicly accessible.',\n        description: 'Bullet point that summarizes collaborators shared link restriction applied to classification',\n        id: 'boxui.securityControls.sharingCollabAndCompanyOnly',\n    },\n    watermarkingApplied: {\n        defaultMessage: 'Watermarking will be applied.',\n        description: 'Bullet point that summarizes watermarking applied to classification',\n        id: 'boxui.securityControls.watermarkingApplied',\n    },\n    externalCollabBlock: {\n        defaultMessage: 'External collaboration restricted.',\n        description:\n            'Bullet point that summarizes external collaboration blocked restriction applied to classification',\n        id: 'boxui.securityControls.externalCollabBlock',\n    },\n    externalCollabDomainList: {\n        defaultMessage: 'External collaboration limited to approved domains.',\n        description: 'Bullet point that summarizes external collaboration restriction applied to classification',\n        id: 'boxui.securityControls.externalCollabDomainList',\n    },\n    appDownloadRestricted: {\n        defaultMessage: 'Download restricted for some applications.',\n        description: 'Bullet point that summarizes application download restriction applied to classification',\n        id: 'boxui.securityControls.appDownloadRestricted',\n    },\n    appDownloadBlacklist: {\n        defaultMessage: 'Download restricted for some applications: {appNames}',\n        description: 'Bullet point that summarizes application download restriction applied to classification',\n        id: 'boxui.securityControls.appDownloadBlacklist',\n    },\n    appDownloadBlacklistOverflow: {\n        defaultMessage: 'Download restricted for some applications: {appNames} +{remainingAppCount} more',\n        description:\n            'Bullet point that summarizes application download restriction applied to classification. This variation is used when the list of applications is longer than the configured threshold',\n        id: 'boxui.securityControls.appDownloadBlacklistOverflow',\n    },\n    appDownloadWhitelist: {\n        defaultMessage: 'Only select applications are allowed: {appNames}',\n        description: 'Bullet point that summarizes application download restriction applied to classification',\n        id: 'boxui.securityControls.appDownloadWhitelist',\n    },\n    appDownloadWhitelistOverflow: {\n        defaultMessage: 'Only select applications are allowed: {appNames} +{remainingAppCount} more',\n        description:\n            'Bullet point that summarizes application download restriction applied to classification. This variation is used when the list of applications is longer than the configured threshold',\n        id: 'boxui.securityControls.appDownloadWhitelistOverflow',\n    },\n    allAppNames: {\n        defaultMessage: 'All applications: {appsList}',\n        description: 'Name list of all applications download restriction applied to classification',\n        id: 'boxui.securityControls.allAppNames',\n    },\n    // Web Download Restrictions\n    webDownloadOwners: {\n        defaultMessage: 'Download restricted on web, except Owners/Co-Owners.',\n        description:\n            'Bullet point that summarizes web download restrictions applied to classification, when restriction applies to managed users except Owners/Co-Owners',\n        id: 'boxui.securityControls.webDownloadOwners',\n    },\n    webDownloadOwnersEditors: {\n        defaultMessage: 'Download restricted on web, except Owners/Co-Owners/Editors.',\n        description:\n            'Bullet point that summarizes web download restrictions applied to classification, when restriction applies to managed users except Owners/Co-Owners/Editors',\n        id: 'boxui.securityControls.webDownloadOwnersEditors',\n    },\n    webDownloadExternalOwners: {\n        defaultMessage: 'Download restricted on web, except Owners/Co-Owners. Also restricted for external users.',\n        description:\n            'Bullet point that summarizes web download restrictions applied to classification, when restriction applies to external users and managed users except Owners/Co-Owners',\n        id: 'boxui.securityControls.webDownloadExternalOwners',\n    },\n    webDownloadExternalOwnersEditors: {\n        defaultMessage:\n            'Download restricted on web, except Owners/Co-Owners/Editors. Also restricted for external users.',\n        description:\n            'Bullet point that summarizes web download restrictions applied to classification, when restriction applies to external users and managed users except Owners/Co-Owners/Editors',\n        id: 'boxui.securityControls.webDownloadExternalOwnersEditors',\n    },\n    webDownloadExternal: {\n        defaultMessage: 'Download restricted on web for external users.',\n        description:\n            'Bullet point that summarizes web download restrictions applied to classification, when restriction applies to external users',\n        id: 'boxui.securityControls.webDownloadExternal',\n    },\n    boxSignRequestRestricted: {\n        defaultMessage: 'Sign restrictions apply.',\n        description:\n            'Bullet point that summarizes Box Sign request restrictions applied to items. Box Sign is a product name',\n        id: 'boxui.securityControls.boxSignRequestRestricted',\n    },\n    // Mobile Download Restrictions\n    mobileDownloadOwners: {\n        defaultMessage: 'Download restricted on mobile, except Owners/Co-Owners.',\n        description:\n            'Bullet point that summarizes mobile download restrictions applied to classification, when restriction applies to managed users except Owners/Co-Owners',\n        id: 'boxui.securityControls.mobileDownloadOwners',\n    },\n    mobileDownloadOwnersEditors: {\n        defaultMessage: 'Download restricted on mobile, except Owners/Co-Owners/Editors.',\n        description:\n            'Bullet point that summarizes mobile download restrictions applied to classification, when restriction applies to managed users except Owners/Co-Owners/Editors',\n        id: 'boxui.securityControls.mobileDownloadOwnersEditors',\n    },\n    mobileDownloadExternalOwners: {\n        defaultMessage: 'Download restricted on mobile, except Owners/Co-Owners. Also restricted for external users.',\n        description:\n            'Bullet point that summarizes mobile download restrictions applied to classification, when restriction applies to external users and managed users except Owners/Co-Owners',\n        id: 'boxui.securityControls.mobileDownloadExternalOwners',\n    },\n    mobileDownloadExternalOwnersEditors: {\n        defaultMessage:\n            'Download restricted on mobile, except Owners/Co-Owners/Editors. Also restricted for external users.',\n        description:\n            'Bullet point that summarizes mobile download restrictions applied to classification, when restriction applies to external users and managed users except Owners/Co-Owners/Editors',\n        id: 'boxui.securityControls.mobileDownloadExternalOwnersEditors',\n    },\n    mobileDownloadExternal: {\n        defaultMessage: 'Download restricted on mobile for external users.',\n        description:\n            'Bullet point that summarizes mobile download restrictions applied to classification, when restriction applies to external users',\n        id: 'boxui.securityControls.mobileDownloadExternal',\n    },\n    // Desktop Download Restrictions\n    desktopDownloadOwners: {\n        defaultMessage: 'Download restricted on Box Drive, except Owners/Co-Owners.',\n        description:\n            'Bullet point that summarizes desktop download restrictions applied to classification, when restriction applies to managed users except Owners/Co-Owners. Box Drive is a product name and not translated',\n        id: 'boxui.securityControls.desktopDownloadOwners',\n    },\n    desktopDownloadOwnersEditors: {\n        defaultMessage: 'Download restricted on Box Drive, except Owners/Co-Owners/Editors.',\n        description:\n            'Bullet point that summarizes desktop download restrictions applied to classification, when restriction applies to managed users except Owners/Co-Owners/Editors. Box Drive is a product name and not translated',\n        id: 'boxui.securityControls.desktopDownloadOwnersEditors',\n    },\n    desktopDownloadExternalOwners: {\n        defaultMessage:\n            'Download restricted on Box Drive, except Owners/Co-Owners. Also restricted for external users.',\n        description:\n            'Bullet point that summarizes desktop download restrictions applied to classification, when restriction applies to external users and managed users except Owners/Co-Owners. Box Drive is a product name and not translated',\n        id: 'boxui.securityControls.desktopDownloadExternalOwners',\n    },\n    desktopDownloadExternalOwnersEditors: {\n        defaultMessage:\n            'Download restricted on Box Drive, except Owners/Co-Owners/Editors. Also restricted for external users.',\n        description:\n            'Bullet point that summarizes desktop download restrictions applied to classification, when restriction applies to external users and managed users except Owners/Co-Owners/Editors. Box Drive is a product name and not translated',\n        id: 'boxui.securityControls.desktopDownloadExternalOwnersEditors',\n    },\n    desktopDownloadExternal: {\n        defaultMessage: 'Download restricted on Box Drive for external users.',\n        description:\n            'Bullet point that summarizes desktop download restrictions applied to classification, when restriction applies to external users. Box Drive is a product name and not translated',\n        id: 'boxui.securityControls.downloadExternal',\n    },\n    // Security Controls Modal\n    viewAll: {\n        defaultMessage: 'View All',\n        description: 'Button to display security controls modal',\n        id: 'boxui.securityControls.viewAll',\n    },\n    modalTitle: {\n        defaultMessage: \"View Classification for '{itemName}'\",\n        description: 'Title for modal to display classification and security controls details',\n        id: 'boxui.securityControls.modalTitle',\n    },\n    modalDescription: {\n        defaultMessage:\n            'Classification labels defined by your administrator can be used to label content and apply security policies.',\n        description: 'Description for modal to display classification and security controls details',\n        id: 'boxui.securityControls.modalDescription',\n    },\n});\n\nexport default messages;\n","// @flow\nimport messages from './messages';\nimport { APP_RESTRICTION_MESSAGE_TYPE, LIST_ACCESS_LEVEL } from '../constants';\n\nconst { BLACKLIST, WHITELIST } = LIST_ACCESS_LEVEL;\nconst { DEFAULT, WITH_APP_LIST, WITH_OVERFLOWN_APP_LIST } = APP_RESTRICTION_MESSAGE_TYPE;\n\nconst appRestrictionsMessageMap = {\n    [BLACKLIST]: {\n        [DEFAULT]: messages.appDownloadRestricted,\n        [WITH_APP_LIST]: messages.appDownloadBlacklist,\n        [WITH_OVERFLOWN_APP_LIST]: messages.appDownloadBlacklistOverflow,\n    },\n    [WHITELIST]: {\n        [DEFAULT]: messages.appDownloadRestricted,\n        [WITH_APP_LIST]: messages.appDownloadWhitelist,\n        [WITH_OVERFLOWN_APP_LIST]: messages.appDownloadWhitelistOverflow,\n    },\n};\n\nexport default appRestrictionsMessageMap;\n","// @flow\nimport messages from './messages';\nimport { DOWNLOAD_CONTROL, MANAGED_USERS_ACCESS_LEVEL } from '../constants';\n\nconst { DESKTOP, MOBILE, WEB } = DOWNLOAD_CONTROL;\nconst { OWNERS_AND_COOWNERS, OWNERS_COOWNERS_AND_EDITORS } = MANAGED_USERS_ACCESS_LEVEL;\n\nconst downloadRestrictionsMessageMap = {\n    [DESKTOP]: {\n        externalAllowed: {\n            [OWNERS_AND_COOWNERS]: messages.desktopDownloadOwners,\n            [OWNERS_COOWNERS_AND_EDITORS]: messages.desktopDownloadOwnersEditors,\n        },\n        externalRestricted: {\n            [OWNERS_AND_COOWNERS]: messages.desktopDownloadExternalOwners,\n            [OWNERS_COOWNERS_AND_EDITORS]: messages.desktopDownloadExternalOwnersEditors,\n            default: messages.desktopDownloadExternal,\n        },\n    },\n    [MOBILE]: {\n        externalAllowed: {\n            [OWNERS_AND_COOWNERS]: messages.mobileDownloadOwners,\n            [OWNERS_COOWNERS_AND_EDITORS]: messages.mobileDownloadOwnersEditors,\n        },\n        externalRestricted: {\n            [OWNERS_AND_COOWNERS]: messages.mobileDownloadExternalOwners,\n            [OWNERS_COOWNERS_AND_EDITORS]: messages.mobileDownloadExternalOwnersEditors,\n            default: messages.mobileDownloadExternal,\n        },\n    },\n    [WEB]: {\n        externalAllowed: {\n            [OWNERS_AND_COOWNERS]: messages.webDownloadOwners,\n            [OWNERS_COOWNERS_AND_EDITORS]: messages.webDownloadOwnersEditors,\n        },\n        externalRestricted: {\n            [OWNERS_AND_COOWNERS]: messages.webDownloadExternalOwners,\n            [OWNERS_COOWNERS_AND_EDITORS]: messages.webDownloadExternalOwnersEditors,\n            default: messages.webDownloadExternal,\n        },\n    },\n};\n\nexport default downloadRestrictionsMessageMap;\n","// @flow\nimport getProp from 'lodash/get';\nimport isNil from 'lodash/isNil';\n\nimport type { Controls, MessageItem } from '../flowTypes';\n\nimport appRestrictionsMessageMap from './appRestrictionsMessageMap';\nimport downloadRestrictionsMessageMap from './downloadRestrictionsMessageMap';\nimport messages from './messages';\nimport {\n    ACCESS_POLICY_RESTRICTION,\n    APP_RESTRICTION_MESSAGE_TYPE,\n    DOWNLOAD_CONTROL,\n    LIST_ACCESS_LEVEL,\n    SHARED_LINK_ACCESS_LEVEL,\n} from '../constants';\n\nconst { APP, BOX_SIGN_REQUEST, DOWNLOAD, EXTERNAL_COLLAB, SHARED_LINK, WATERMARK } = ACCESS_POLICY_RESTRICTION;\nconst { DEFAULT, WITH_APP_LIST, WITH_OVERFLOWN_APP_LIST } = APP_RESTRICTION_MESSAGE_TYPE;\nconst { DESKTOP, MOBILE, WEB } = DOWNLOAD_CONTROL;\nconst { BLOCK, WHITELIST, BLACKLIST } = LIST_ACCESS_LEVEL;\nconst { COLLAB_ONLY, COLLAB_AND_COMPANY_ONLY, PUBLIC } = SHARED_LINK_ACCESS_LEVEL;\n\nconst getShortSecurityControlsMessage = (controls: Controls): Array<MessageItem> => {\n    const items = [];\n    const { app, boxSignRequest, download, externalCollab, sharedLink, watermark } = controls;\n\n    // Shared link and external collab restrictions are grouped\n    // together as generic \"sharing\" restrictions\n    const sharing = (sharedLink && sharedLink.accessLevel !== PUBLIC) || externalCollab;\n\n    // 4 restriction combinations\n    if (sharing && download && app && boxSignRequest) {\n        items.push({ message: messages.shortSharingDownloadAppSign });\n    }\n    // 3 restriction combinations\n    else if (sharing && download && app) {\n        items.push({ message: messages.shortSharingDownloadApp });\n    } else if (download && app && boxSignRequest) {\n        items.push({ message: messages.shortDownloadAppSign });\n    } else if (sharing && app && boxSignRequest) {\n        items.push({ message: messages.shortSharingAppSign });\n    } else if (sharing && download && boxSignRequest) {\n        items.push({ message: messages.shortSharingDownloadSign });\n    }\n    // 2 restriction combinations\n    else if (sharing && boxSignRequest) {\n        items.push({ message: messages.shortSharingSign });\n    } else if (download && boxSignRequest) {\n        items.push({ message: messages.shortDownloadSign });\n    } else if (app && boxSignRequest) {\n        items.push({ message: messages.shortAppSign });\n    } else if (sharing && download) {\n        items.push({ message: messages.shortSharingDownload });\n    } else if (sharing && app) {\n        items.push({ message: messages.shortSharingApp });\n    } else if (download && app) {\n        items.push({ message: messages.shortDownloadApp });\n    }\n    // 1 restriction combinations\n    else if (boxSignRequest) {\n        items.push({ message: messages.shortSign });\n    } else if (sharing) {\n        items.push({ message: messages.shortSharing });\n    } else if (download) {\n        items.push({ message: messages.shortDownload });\n    } else if (app) {\n        items.push({ message: messages.shortApp });\n    }\n\n    if (watermark) {\n        items.push({ message: messages.shortWatermarking });\n    }\n\n    return items;\n};\n\nconst getSharedLinkMessages = (controls: Controls): Array<MessageItem> => {\n    const items = [];\n    const accessLevel = getProp(controls, `${SHARED_LINK}.accessLevel`);\n\n    switch (accessLevel) {\n        case COLLAB_ONLY:\n            items.push({ message: messages.sharingCollabOnly });\n            break;\n        case COLLAB_AND_COMPANY_ONLY:\n            items.push({ message: messages.sharingCollabAndCompanyOnly });\n            break;\n        default:\n            // no-op\n            break;\n    }\n    return items;\n};\n\nconst getWatermarkingMessages = (controls: Controls): Array<MessageItem> => {\n    const items = [];\n    const isWatermarkEnabled = getProp(controls, `${WATERMARK}.enabled`, false);\n\n    if (isWatermarkEnabled) {\n        items.push({ message: messages.watermarkingApplied });\n    }\n\n    return items;\n};\n\nconst getExternalCollabMessages = (controls: Controls): Array<MessageItem> => {\n    const items = [];\n    const accessLevel = getProp(controls, `${EXTERNAL_COLLAB}.accessLevel`);\n\n    switch (accessLevel) {\n        case BLOCK:\n            items.push({ message: messages.externalCollabBlock });\n            break;\n        case WHITELIST:\n        case BLACKLIST:\n            items.push({ message: messages.externalCollabDomainList });\n            break;\n        default:\n            // no-op\n            break;\n    }\n    return items;\n};\n\nconst getAppDownloadMessages = (controls: Controls, maxAppCount?: number): Array<MessageItem> => {\n    const items = [];\n    const accessLevel = getProp(controls, `${APP}.accessLevel`);\n\n    switch (accessLevel) {\n        case BLOCK:\n            items.push({ message: messages.appDownloadRestricted });\n            break;\n        case WHITELIST:\n        case BLACKLIST: {\n            const apps = getProp(controls, `${APP}.apps`, []);\n\n            maxAppCount = isNil(maxAppCount) ? apps.length : maxAppCount;\n            const appsToDisplay = apps.slice(0, maxAppCount);\n            const remainingAppCount = apps.slice(maxAppCount).length;\n            const appNames = appsToDisplay.map(({ displayText }) => displayText).join(', ');\n\n            if (remainingAppCount) {\n                const appsList = apps.map(({ displayText }) => displayText).join(', ');\n\n                items.push({\n                    message: {\n                        ...appRestrictionsMessageMap[accessLevel][WITH_OVERFLOWN_APP_LIST],\n                        values: { appNames, remainingAppCount },\n                    },\n                    tooltipMessage: {\n                        ...messages.allAppNames,\n                        values: { appsList },\n                    },\n                });\n            } else {\n                // Display list of apps if available, otherwise use generic\n                // app restriction copy\n                const messageType = apps.length ? WITH_APP_LIST : DEFAULT;\n\n                items.push({\n                    message: {\n                        ...appRestrictionsMessageMap[accessLevel][messageType],\n                        values: { appNames },\n                    },\n                });\n            }\n            break;\n        }\n        default:\n            // no-op\n            break;\n    }\n    return items;\n};\n\nconst getDownloadMessages = (controls: Controls): Array<MessageItem> => {\n    const items = [];\n    const { web, mobile, desktop } = getProp(controls, DOWNLOAD, {});\n\n    const downloadRestrictions = {\n        [WEB]: {\n            platform: WEB,\n            restrictions: web,\n        },\n        [MOBILE]: {\n            platform: MOBILE,\n            restrictions: mobile,\n        },\n        [DESKTOP]: {\n            platform: DESKTOP,\n            restrictions: desktop,\n        },\n    };\n\n    Object.keys(downloadRestrictions).forEach(platformKey => {\n        const { platform, restrictions } = downloadRestrictions[platformKey];\n\n        if (!restrictions) {\n            return;\n        }\n        const { restrictExternalUsers, restrictManagedUsers } = restrictions;\n\n        if (restrictManagedUsers && restrictExternalUsers) {\n            items.push({ message: downloadRestrictionsMessageMap[platform].externalRestricted[restrictManagedUsers] });\n        } else if (restrictManagedUsers) {\n            items.push({ message: downloadRestrictionsMessageMap[platform].externalAllowed[restrictManagedUsers] });\n        } else if (restrictExternalUsers) {\n            items.push({ message: downloadRestrictionsMessageMap[platform].externalRestricted.default });\n        }\n    });\n\n    return items;\n};\n\nconst getBoxSignRequestMessages = (controls: Controls): Array<MessageItem> => {\n    const isBoxSignRequestRestrictionEnabled = getProp(controls, `${BOX_SIGN_REQUEST}.enabled`, false);\n    const items = isBoxSignRequestRestrictionEnabled ? [{ message: messages.boxSignRequestRestricted }] : [];\n\n    return items;\n};\n\nconst getFullSecurityControlsMessages = (controls: Controls, maxAppCount?: number): Array<MessageItem> => {\n    const items = [\n        ...getSharedLinkMessages(controls),\n        ...getExternalCollabMessages(controls),\n        ...getDownloadMessages(controls),\n        ...getAppDownloadMessages(controls, maxAppCount),\n        ...getWatermarkingMessages(controls),\n        ...getBoxSignRequestMessages(controls),\n    ];\n    return items;\n};\n\nexport { getShortSecurityControlsMessage, getFullSecurityControlsMessages };\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { bdlBoxBlue } from '../../../styles/variables';\nimport Tooltip from '../../../components/tooltip';\nimport IconInfo from '../../../icons/general/IconInfo';\nimport type { MessageItem } from '../flowTypes';\n\nimport './SecurityControlsItem.scss';\n\ntype Props = MessageItem;\n\nconst ICON_SIZE = 13;\n\nconst SecurityControlsItem = ({ message, tooltipMessage }: Props) => {\n    return (\n        <li className=\"bdl-SecurityControlsItem\">\n            {/* $FlowFixMe */}\n            {React.isValidElement(message) ? message : <FormattedMessage {...message} />}\n            {tooltipMessage && (\n                <Tooltip\n                    className=\"bdl-SecurityControlsItem-tooltip\"\n                    text={<FormattedMessage {...tooltipMessage} />}\n                    position=\"middle-right\"\n                    isTabbable={false}\n                >\n                    <span className=\"bdl-SecurityControlsItem-tooltipIcon\">\n                        <IconInfo color={bdlBoxBlue} width={ICON_SIZE} height={ICON_SIZE} />\n                    </span>\n                </Tooltip>\n            )}\n        </li>\n    );\n};\n\nexport default SecurityControlsItem;\n","import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    add: {\n        defaultMessage: 'Add',\n        description: 'Button to add classification on an item',\n        id: 'boxui.classification.add',\n    },\n    classification: {\n        defaultMessage: 'Classification',\n        description: 'Header for classification section in sidebar',\n        id: 'boxui.classification.classification',\n    },\n    definition: {\n        defaultMessage: 'Definition',\n        description: 'Header displayed above the classification definition',\n        id: 'boxui.classification.definition',\n    },\n    edit: {\n        defaultMessage: 'Edit',\n        description: 'Button to edit classification on an item',\n        id: 'boxui.classification.edit',\n    },\n    missing: {\n        defaultMessage: 'Not classified',\n        description: 'Default message for classification in the sidebar when there is none',\n        id: 'boxui.classification.missing',\n    },\n    modifiedByLabel: {\n        defaultMessage: 'Classification Label',\n        description: 'Label displayed above details about when a classification was last modified.',\n        id: 'boxui.classification.modifiedByLabel',\n    },\n    importedBy: {\n        defaultMessage: 'Imported from {modifiedBy} on {modifiedAt}',\n        description: 'Sentence stating which user or service imported a classification and on what date.',\n        id: 'boxui.classification.importedBy',\n    },\n    modifiedBy: {\n        defaultMessage: 'Applied by {modifiedBy} on {modifiedAt}',\n        description: 'Sentence stating which user or service modified a classification and on what date.',\n        id: 'boxui.classification.modifiedBy',\n    },\n    // Classification Colors\n    classificationYellow: {\n        defaultMessage: 'Yellow',\n        description: 'Classification label color name as yellow',\n        id: 'boxui.classification.classificationYellow',\n    },\n    classificationOrange: {\n        defaultMessage: 'Orange',\n        description: 'Classification label color name as orange',\n        id: 'boxui.classification.classificationOrange',\n    },\n    classificationRed: {\n        defaultMessage: 'Red',\n        description: 'Classification label color name as red',\n        id: 'boxui.classification.classificationRed',\n    },\n    classificationPurple: {\n        defaultMessage: 'Purple',\n        description: 'Classification label color name as purple',\n        id: 'boxui.classification.classificationPurple',\n    },\n    classificationLightBlue: {\n        defaultMessage: 'Light Blue',\n        description: 'Classification label color name as light blue',\n        id: 'boxui.classification.classificationLightBlue',\n    },\n    classificationDarkBlue: {\n        defaultMessage: 'Dark Blue',\n        description: 'Classification label color name as dark blue',\n        id: 'boxui.classification.classificationDarkBlue',\n    },\n    classificationGreen: {\n        defaultMessage: 'Green',\n        description: 'Classification label color name as green',\n        id: 'boxui.classification.classificationGreen',\n    },\n    classificationGrey: {\n        defaultMessage: 'Grey',\n        description: 'Classification label color name as grey',\n        id: 'boxui.classification.classificationGrey',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Modal, ModalActions } from '../../../components/modal';\nimport commonMessages from '../../../common/messages';\nimport Button from '../../../components/button';\nimport classificationMessages from '../messages';\nimport ClassifiedBadge from '../ClassifiedBadge';\nimport Label from '../../../components/label/Label';\nimport messages from './messages';\nimport SecurityControlsItem from './SecurityControlsItem';\nimport './SecurityControlsModal.scss';\nimport type { MessageItem } from '../flowTypes';\n\ntype Props = {\n    classificationColor?: string,\n    classificationName?: string,\n    closeModal: Function,\n    definition?: string,\n    isSecurityControlsModalOpen: boolean,\n    itemName?: string,\n    modalItems: Array<MessageItem>,\n};\n\nconst SecurityControlsModal = ({\n    closeModal,\n    definition,\n    classificationColor,\n    classificationName,\n    isSecurityControlsModalOpen,\n    itemName,\n    modalItems,\n}: Props) => {\n    if (!itemName || !classificationName || !definition) {\n        return null;\n    }\n\n    const title = <FormattedMessage {...messages.modalTitle} values={{ itemName }} />;\n\n    return (\n        <Modal\n            className=\"bdl-SecurityControlsModal\"\n            title={title}\n            onRequestClose={closeModal}\n            isOpen={isSecurityControlsModalOpen}\n        >\n            <p>\n                <FormattedMessage {...messages.modalDescription} />\n            </p>\n            <ClassifiedBadge color={classificationColor} name={((classificationName: any): string)} />\n            <Label text={<FormattedMessage {...classificationMessages.definition} />}>\n                <p className=\"bdl-SecurityControlsModal-definition\">{definition}</p>\n            </Label>\n            <ul className=\"bdl-SecurityControlsModal-controlsItemList\">\n                {modalItems.map(({ message, tooltipMessage }, index) => (\n                    <SecurityControlsItem key={index} message={message} tooltipMessage={tooltipMessage} />\n                ))}\n            </ul>\n            <ModalActions>\n                <Button onClick={closeModal} type=\"button\">\n                    <FormattedMessage {...commonMessages.close} />\n                </Button>\n            </ModalActions>\n        </Modal>\n    );\n};\n\nSecurityControlsModal.defaultProps = {\n    isSecurityControlsModalOpen: false,\n    modalItems: [],\n};\n\nexport default SecurityControlsModal;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { DEFAULT_MAX_APP_COUNT, SECURITY_CONTROLS_FORMAT } from '../constants';\nimport { getShortSecurityControlsMessage, getFullSecurityControlsMessages } from './utils';\nimport messages from './messages';\nimport PlainButton from '../../../components/plain-button';\nimport Label from '../../../components/label/Label';\nimport SecurityControlsItem from './SecurityControlsItem';\nimport SecurityControlsModal from './SecurityControlsModal';\nimport type { Controls, ControlsFormat } from '../flowTypes';\n\nimport './SecurityControls.scss';\n\nconst { FULL, SHORT, SHORT_WITH_BTN } = SECURITY_CONTROLS_FORMAT;\n\ntype Props = {\n    classificationColor?: string,\n    classificationName?: string,\n    controls: Controls,\n    controlsFormat: ControlsFormat,\n    definition?: string,\n    itemName?: string,\n    maxAppCount?: number,\n    shouldRenderLabel?: boolean,\n};\n\ntype State = {\n    isSecurityControlsModalOpen: boolean,\n};\n\nclass SecurityControls extends React.Component<Props, State> {\n    static defaultProps = {\n        classificationName: '',\n        definition: '',\n        itemName: '',\n        controls: {},\n        controlsFormat: SHORT,\n        maxAppCount: DEFAULT_MAX_APP_COUNT,\n        shouldRenderLabel: false,\n    };\n\n    state = {\n        isSecurityControlsModalOpen: false,\n    };\n\n    openModal = () => this.setState({ isSecurityControlsModalOpen: true });\n\n    closeModal = () => this.setState({ isSecurityControlsModalOpen: false });\n\n    render() {\n        const {\n            classificationColor,\n            classificationName,\n            controls,\n            controlsFormat,\n            definition,\n            itemName,\n            maxAppCount,\n            shouldRenderLabel,\n        } = this.props;\n\n        let items = [];\n        let modalItems;\n\n        if (controlsFormat === FULL) {\n            items = getFullSecurityControlsMessages(controls, maxAppCount);\n        } else {\n            items = getShortSecurityControlsMessage(controls);\n\n            if (items.length && controlsFormat === SHORT_WITH_BTN) {\n                modalItems = getFullSecurityControlsMessages(controls, maxAppCount);\n            }\n        }\n\n        if (!items.length) {\n            return null;\n        }\n\n        const { isSecurityControlsModalOpen } = this.state;\n        const shouldShowSecurityControlsModal =\n            controlsFormat === SHORT_WITH_BTN && !!itemName && !!classificationName && !!definition;\n\n        let itemsList = (\n            <ul className=\"bdl-SecurityControls\">\n                {items.map(({ message, tooltipMessage }, index) => (\n                    <SecurityControlsItem key={index} message={message} tooltipMessage={tooltipMessage} />\n                ))}\n            </ul>\n        );\n\n        if (shouldRenderLabel) {\n            itemsList = <Label text={<FormattedMessage {...messages.securityControlsLabel} />}>{itemsList}</Label>;\n        }\n\n        return (\n            <>\n                {itemsList}\n                {shouldShowSecurityControlsModal && (\n                    <>\n                        <PlainButton className=\"lnk\" onClick={this.openModal} type=\"button\">\n                            <FormattedMessage {...messages.viewAll} />\n                        </PlainButton>\n                        <SecurityControlsModal\n                            classificationColor={classificationColor}\n                            classificationName={classificationName}\n                            closeModal={this.closeModal}\n                            definition={definition}\n                            itemName={itemName}\n                            isSecurityControlsModalOpen={isSecurityControlsModalOpen}\n                            modalItems={modalItems}\n                        />\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nexport type { Props as SecurityControlsProps };\nexport default SecurityControls;\n","// @flow\nimport * as React from 'react';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport { isValidDate } from '../../utils/datetime';\nimport Label from '../../components/label/Label';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport ClassifiedBadge from './ClassifiedBadge';\nimport SecurityControls from './security-controls';\nimport messages from './messages';\nimport './Classification.scss';\n\nimport type { Controls, ControlsFormat } from './flowTypes';\n\nconst STYLE_INLINE: 'inline' = 'inline';\nconst STYLE_TOOLTIP: 'tooltip' = 'tooltip';\ntype Props = {\n    className?: string,\n    color?: string,\n    controls?: Controls,\n    controlsFormat?: ControlsFormat,\n    definition?: string,\n    isImportedClassification?: boolean,\n    isLoadingControls?: boolean,\n    itemName?: string,\n    maxAppCount?: number,\n    messageStyle?: typeof STYLE_INLINE | typeof STYLE_TOOLTIP,\n    modifiedAt?: string,\n    modifiedBy?: string,\n    name?: string,\n    onClick?: (event: SyntheticEvent<HTMLButtonElement>) => void,\n};\n\nconst Classification = ({\n    className = '',\n    color,\n    controls,\n    controlsFormat,\n    definition,\n    isImportedClassification = false,\n    isLoadingControls,\n    itemName = '',\n    maxAppCount,\n    messageStyle,\n    modifiedAt,\n    modifiedBy,\n    name,\n    onClick,\n}: Props) => {\n    const isClassified = !!name;\n    const hasDefinition = !!definition;\n    const hasModifiedAt = !!modifiedAt;\n    const hasModifiedBy = !!modifiedBy;\n    const hasSecurityControls = !!controls;\n    const isTooltipMessageEnabled = isClassified && hasDefinition && messageStyle === STYLE_TOOLTIP;\n    const isInlineMessageEnabled = isClassified && hasDefinition && messageStyle === STYLE_INLINE;\n    const isNotClassifiedMessageVisible = !isClassified && messageStyle === STYLE_INLINE;\n    const isControlsIndicatorEnabled = isClassified && isLoadingControls && messageStyle === STYLE_INLINE;\n    const isSecurityControlsEnabled =\n        isClassified && !isLoadingControls && hasSecurityControls && messageStyle === STYLE_INLINE;\n    const modifiedDate = new Date(modifiedAt || 0);\n    const isModifiedMessageVisible =\n        isClassified && hasModifiedAt && isValidDate(modifiedDate) && hasModifiedBy && messageStyle === STYLE_INLINE;\n\n    const formattedModifiedAt = isModifiedMessageVisible && (\n        <FormattedDate value={modifiedDate} month=\"long\" year=\"numeric\" day=\"numeric\" />\n    );\n\n    const modifiedByMessage = isImportedClassification ? messages.importedBy : messages.modifiedBy;\n\n    return (\n        <article className={`bdl-Classification ${className}`}>\n            {isClassified && (\n                <ClassifiedBadge\n                    color={color}\n                    name={((name: any): string)}\n                    onClick={onClick}\n                    tooltipText={isTooltipMessageEnabled ? definition : undefined}\n                />\n            )}\n            {isInlineMessageEnabled && (\n                <Label text={<FormattedMessage {...messages.definition} />}>\n                    <p className=\"bdl-Classification-definition\">{definition}</p>\n                </Label>\n            )}\n            {isNotClassifiedMessageVisible && (\n                <span className=\"bdl-Classification-missingMessage\">\n                    <FormattedMessage {...messages.missing} />\n                </span>\n            )}\n            {isModifiedMessageVisible && (\n                <Label text={<FormattedMessage {...messages.modifiedByLabel} />}>\n                    <p className=\"bdl-Classification-modifiedBy\" data-testid=\"classification-modifiedby\">\n                        <FormattedMessage\n                            {...modifiedByMessage}\n                            values={{ modifiedAt: formattedModifiedAt, modifiedBy }}\n                        />\n                    </p>\n                </Label>\n            )}\n\n            {isSecurityControlsEnabled && (\n                <SecurityControls\n                    classificationColor={color}\n                    classificationName={name}\n                    controls={controls}\n                    controlsFormat={controlsFormat}\n                    definition={definition}\n                    itemName={itemName}\n                    maxAppCount={maxAppCount}\n                    shouldRenderLabel\n                />\n            )}\n            {isControlsIndicatorEnabled && <LoadingIndicator />}\n        </article>\n    );\n};\n\nexport { STYLE_INLINE, STYLE_TOOLTIP };\nexport default Classification;\n","/**\n * @flow\n * @file Classification add/edit button\n * @author Box\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport PlainButton from '../../components/plain-button/PlainButton';\n\ntype Props = {\n    className?: string,\n    isEditing: boolean,\n    onEdit: (e: SyntheticEvent<HTMLButtonElement>) => void,\n};\n\nconst EditClassificationButton = ({ className = '', isEditing, onEdit, ...rest }: Props) => {\n    const message = isEditing ? messages.edit : messages.add;\n    const interaction = isEditing ? 'editclassification' : 'addclassification';\n    return (\n        <PlainButton\n            className={`bdl-EditClassificationButton ${className}`}\n            data-resin-target={interaction}\n            onClick={onEdit}\n            type=\"button\"\n            {...rest}\n        >\n            <FormattedMessage {...message} />\n        </PlainButton>\n    );\n};\n\nexport default EditClassificationButton;\n","// @flow\nimport messages from './messages';\nimport {\n    CLASSIFICATION_COLOR_ID_0,\n    CLASSIFICATION_COLOR_ID_1,\n    CLASSIFICATION_COLOR_ID_2,\n    CLASSIFICATION_COLOR_ID_3,\n    CLASSIFICATION_COLOR_ID_4,\n    CLASSIFICATION_COLOR_ID_5,\n    CLASSIFICATION_COLOR_ID_6,\n    CLASSIFICATION_COLOR_ID_7,\n} from './constants';\nimport * as vars from '../../styles/variables';\n\nconst classificationColorsMap = {\n    [CLASSIFICATION_COLOR_ID_0]: {\n        name: messages.classificationYellow,\n        color: vars.bdlYellow50,\n        tinycon: vars.bdlYellorange,\n    },\n    [CLASSIFICATION_COLOR_ID_1]: {\n        name: messages.classificationOrange,\n        color: vars.bdlOrange50,\n        tinycon: vars.bdlOrange,\n    },\n    [CLASSIFICATION_COLOR_ID_2]: {\n        name: messages.classificationRed,\n        color: vars.bdlWatermelonRed50,\n        tinycon: vars.bdlWatermelonRed,\n    },\n    [CLASSIFICATION_COLOR_ID_3]: {\n        name: messages.classificationPurple,\n        color: vars.bdlPurpleRain50,\n        tinycon: vars.bdlPurpleRain,\n    },\n    [CLASSIFICATION_COLOR_ID_4]: {\n        name: messages.classificationLightBlue,\n        color: vars.bdlLightBlue50,\n        tinycon: vars.bdlLightBlue,\n    },\n    [CLASSIFICATION_COLOR_ID_5]: {\n        name: messages.classificationDarkBlue,\n        color: vars.bdlDarkBlue50,\n        tinycon: vars.bdlDarkBlue,\n    },\n    [CLASSIFICATION_COLOR_ID_6]: {\n        name: messages.classificationGreen,\n        color: vars.bdlGreenLight50,\n        tinycon: vars.bdlGreenLight,\n    },\n    [CLASSIFICATION_COLOR_ID_7]: {\n        name: messages.classificationGrey,\n        color: vars.bdlGray20,\n        tinycon: vars.bdlGray65,\n    },\n};\n\nexport default classificationColorsMap;\n","/**\n * @flow\n * @file Classification sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport getProp from 'lodash/get';\nimport { FormattedMessage } from 'react-intl';\n\nimport Classification, { classificationMessages, EditClassificationButton } from '../../features/classification';\nimport { INTERACTION_TARGET, SECTION_TARGETS } from '../common/interactionTargets';\nimport Collapsible from '../../components/collapsible';\nimport { FIELD_PERMISSIONS_CAN_UPLOAD } from '../../constants';\nimport type { ClassificationInfo } from './flowTypes';\nimport type { BoxItem } from '../../common/types/core';\nimport './SidebarClassification.scss';\n\ntype OnEdit = (e: SyntheticEvent<HTMLButtonElement>) => void;\ntype Props = {\n    classification?: ClassificationInfo,\n    file: BoxItem,\n    onEdit?: OnEdit,\n};\n\nconst SidebarClassification = ({ classification, file, onEdit }: Props) => {\n    const isEditable = !!onEdit && getProp(file, FIELD_PERMISSIONS_CAN_UPLOAD, false);\n    const hasClassification = !!getProp(classification, 'name');\n    if (!hasClassification && !isEditable) {\n        return null;\n    }\n    return (\n        <Collapsible\n            buttonProps={{\n                [INTERACTION_TARGET]: SECTION_TARGETS.CLASSIFICATION,\n            }}\n            className=\"bcs-SidebarClassification\"\n            headerActionItems={\n                isEditable ? (\n                    <EditClassificationButton\n                        className=\"bcs-SidebarClassification-edit\"\n                        isEditing={hasClassification}\n                        onEdit={((onEdit: any): OnEdit)}\n                    />\n                ) : null\n            }\n            title={<FormattedMessage {...classificationMessages.classification} />}\n        >\n            <Classification {...classification} messageStyle=\"inline\" />\n        </Collapsible>\n    );\n};\n\nexport default SidebarClassification;\n","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst MetricsReview56 = (props: SVGProps) => (\n    <AccessibleSVG width={56} height={56} viewBox=\"0 0 56 56\" {...props}>\n        <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n                fill={vars.bdlBoxBlue10}\n                d=\"M16 36a8 8 0 110 16 8 8 0 010-16zm32-4c2.21 0 4 1.79 4 4s-1.79 4-4 4-4-1.79-4-4 1.79-4 4-4z\"\n            />\n            <path\n                fill={vars.white}\n                fillRule=\"nonzero\"\n                d=\"M17 24a2.001 2.001 0 00-1.995 1.85L15 26v15a2 2 0 003.995.15L19 41V26a2 2 0 00-2-2z\"\n            />\n            <path\n                fill={vars.bdlBoxBlue10}\n                fillRule=\"nonzero\"\n                d=\"M29 15a2.001 2.001 0 00-1.995 1.85L27 17v24a2 2 0 003.995.15L31 41V17a2 2 0 00-2-2z\"\n            />\n            <path\n                fill={vars.white}\n                fillRule=\"nonzero\"\n                d=\"M41 33a2.001 2.001 0 00-1.995 1.85L39 35v6a2 2 0 003.995.15L43 41v-6a2 2 0 00-2-2z\"\n            />\n            <path\n                fill={vars.bdlBoxBlue}\n                fillRule=\"nonzero\"\n                d=\"M7 10a1 1 0 01.993.883L8 11v30a7 7 0 006.76 6.996L15 48h34a1 1 0 01.117 1.993L49 50H15a9 9 0 01-8.996-8.735L6 41V11a1 1 0 011-1z\"\n            />\n            <path\n                fill={vars.bdlBoxBlue}\n                fillRule=\"nonzero\"\n                d=\"M17 22c2.21 0 4 1.79 4 4v15c0 2.21-1.79 4-4 4s-4-1.79-4-4V26c0-2.21 1.79-4 4-4zm0 2a2.001 2.001 0 00-1.995 1.85L15 26v15a2 2 0 003.995.15L19 41V26a2 2 0 00-2-2zm12-11c2.21 0 4 1.79 4 4v24c0 2.21-1.79 4-4 4s-4-1.79-4-4V17c0-2.21 1.79-4 4-4zm0 2a2.001 2.001 0 00-1.995 1.85L27 17v24a2 2 0 003.995.15L31 41V17a2 2 0 00-2-2zm12 16c2.21 0 4 1.79 4 4v6c0 2.21-1.79 4-4 4s-4-1.79-4-4v-6c0-2.21 1.79-4 4-4zm0 2a2.001 2.001 0 00-1.995 1.85L39 35v6a2 2 0 003.995.15L43 41v-6a2 2 0 00-2-2z\"\n            />\n            <g fillRule=\"nonzero\">\n                <path\n                    fill={vars.bdlBoxBlue}\n                    d=\"M35.5 7a8.5 8.5 0 016.677 13.761l5.53 5.532a1 1 0 01-1.32 1.497l-.094-.083-5.532-5.53A8.5 8.5 0 1135.5 7zm0 2a6.5 6.5 0 100 13 6.5 6.5 0 000-13z\"\n                />\n                <path fill={vars.white} d=\"M35.5 9a6.5 6.5 0 110 13 6.5 6.5 0 010-13z\" />\n                <path\n                    fill={vars.bdlBoxBlue}\n                    d=\"M36.526 10.842a.499.499 0 01.632-.316 4.886 4.886 0 013.337 4.412l.005.224v.338a.5.5 0 01-.992.09l-.008-.09v-.338a3.887 3.887 0 00-2.658-3.688.499.499 0 01-.316-.632z\"\n                />\n            </g>\n        </g>\n    </AccessibleSVG>\n);\n\nexport default MetricsReview56;\n","import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    contentAnalyticsErrorText: {\n        defaultMessage: 'There was a problem loading content insights. Please try again.',\n        description: 'Text shown to users when opening the content insights flyout and there is an error',\n        id: 'be.contentInsights.contentAnalyticsErrorText',\n    },\n    contentAnalyticsPermissionError: {\n        defaultMessage: 'Oops! You no longer have access to view content insights.',\n        description: 'Message shown when the user does not have access to view content insights anymore',\n        id: 'be.contentInsights.contentAnalyticsPermissionError',\n    },\n    contentInsightsTitle: {\n        defaultMessage: 'Content Insights',\n        description: 'Title for Content Insights section in file sidebar',\n        id: 'be.contentInsights.contentInsightsTitle',\n    },\n    downloadGraphLabel: {\n        defaultMessage: 'Chart displaying the number of downloads over the selected time period',\n        description: 'Label for the chart displaying the number of downloads over the selected time period',\n        id: 'be.contentInsights.downloadGraphLabel',\n    },\n    downloadGraphType: {\n        defaultMessage: 'DOWNLOADS',\n        description: 'Title for the content insights graph card regarding number of Previews',\n        id: 'be.contentInsights.downloadGraphType',\n    },\n    trendMonth: {\n        defaultMessage: 'PAST MONTH',\n        description:\n            'Trend description for the content insights graph card regarding the count of events from the past month',\n        id: 'be.contentInsights.trendMonth',\n    },\n    trendThreeMonths: {\n        defaultMessage: 'PAST 3 MONTHS',\n        description:\n            'Trend description for the content insights graph card regarding the count of events from the past three months',\n        id: 'be.contentInsights.trendThreeMonths',\n    },\n    trendWeek: {\n        defaultMessage: 'PAST WEEK',\n        description:\n            'Trend description for the content insights graph card regarding the count of events from the past week',\n        id: 'be.contentInsights.trendWeek',\n    },\n    trendYear: {\n        defaultMessage: 'PAST YEAR',\n        description:\n            'Trend description for the content insights graph card regarding the count of events from the past year',\n        id: 'be.contentInsights.trendYear',\n    },\n    trendDown: {\n        defaultMessage: 'Trending down',\n        description: 'Label for the arrow indicator in the trend pill',\n        id: 'be.contentInsights.trendDown',\n    },\n    trendUp: {\n        defaultMessage: 'Trending up',\n        description: 'Label for the arrow indicator in the trend pill',\n        id: 'be.contentInsights.trendUp',\n    },\n    peopleGraphLabel: {\n        defaultMessage: 'Chart displaying the number of users over the selected time period',\n        description: 'Label for the chart displaying the number of users over the selected time period',\n        id: 'be.contentInsights.peopleGraphLabel',\n    },\n    peopleTitle: {\n        defaultMessage: 'PEOPLE',\n        description: 'Title used to represent how many users have interacted with the file',\n        id: 'be.contentInsights.peopleTitle',\n    },\n    previewGraphLabel: {\n        defaultMessage: 'Chart displaying the number of previews over the selected time period',\n        description: 'Label for the chart displaying the number of previews over the selected time period',\n        id: 'be.contentInsights.previewGraphLabel',\n    },\n    previewGraphType: {\n        defaultMessage: 'PREVIEWS',\n        description: 'Title for the content insights graph card regarding number of Previews',\n        id: 'be.contentInsights.previewGraphType',\n    },\n    openContentInsightsButton: {\n        defaultMessage: 'See Details',\n        description: 'Open Content Insights button which opens the Content Insights Modal',\n        id: 'be.contentInsights.openContentInsightsButton',\n    },\n});\n\nexport default messages;\n","import * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport MetricsReview56 from '../../illustration/MetricsReview56';\nimport messages from './messages';\nimport { ResponseError } from './types';\n\nimport './ContentAnalyticsErrorState.scss';\n\ninterface Props {\n    error?: ResponseError;\n}\n\nconst ContentAnalyticsErrorState = ({ error }: Props) => {\n    const renderErrorMessage = (responseError?: ResponseError) => {\n        const isPermissionError = !!responseError && responseError.status === 403;\n\n        if (isPermissionError) {\n            return (\n                <div\n                    className=\"ContentAnalyticsErrorState-text--permission\"\n                    data-testid=\"ContentAnalyticsErrorState-text--permission\"\n                >\n                    <FormattedMessage {...messages.contentAnalyticsPermissionError} />\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"ContentAnalyticsErrorState-text\" data-testid=\"ContentAnalyticsErrorState-text\">\n                <FormattedMessage {...messages.contentAnalyticsErrorText} />\n            </div>\n        );\n    };\n\n    return (\n        <div className=\"ContentAnalyticsErrorState\" data-testid=\"ContentAnalyticsErrorState\">\n            <MetricsReview56 data-testid=\"ContentAnalyticsErrorState-image\" />\n            {renderErrorMessage(error)}\n        </div>\n    );\n};\n\nexport default ContentAnalyticsErrorState;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport './Ghost.scss';\n\n// A dimension compatible with React's handling of the \"style\" prop\ntype Dimension = string | number;\n\ntype Props = {\n    /** style.borderRadius */\n    borderRadius?: Dimension;\n\n    /** classnames in addition to .bdl-Ghost */\n    className?: string;\n\n    /** style.height */\n    height?: Dimension;\n\n    /** Set to false to remove animated background effect */\n    isAnimated?: boolean;\n\n    /** inline styles merged with height/width/radius options */\n    style?: {};\n\n    /** style.width */\n    width?: Dimension;\n};\n\nconst Ghost = ({ isAnimated = true, className, height, width, borderRadius, style = {}, ...rest }: Props) => (\n    <span\n        className={classNames(className, 'bdl-Ghost', { 'bdl-Ghost--isAnimated': isAnimated })}\n        style={{ height, width, borderRadius, ...style }}\n        {...rest}\n    />\n);\n\nexport default Ghost;\n","import React from 'react';\nimport Ghost from '../../components/ghost';\n\nimport './GraphGhostState.scss';\n\nconst GRAPH_BAR_HEIGHTS = [28, 36, 54, 80, 36, 48, 28];\n\nconst GraphGhostState = () => (\n    <div className=\"GraphGhostState\">\n        {GRAPH_BAR_HEIGHTS.map((height, index) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <Ghost key={index} borderRadius={4} height={height} />\n        ))}\n    </div>\n);\n\nexport default GraphGhostState;\n","import React from 'react';\nimport Ghost from '../../components/ghost';\n\nimport GraphGhostState from './GraphGhostState';\n\nimport './GraphCardGhostState.scss';\n\nconst GraphCardGhostState = () => (\n    <div className=\"GraphCardGhostState\" data-testid=\"GraphCardGhostState\">\n        <div className=\"GraphCardGhostState-header\">\n            <Ghost borderRadius={4} height={16} width={56} />\n            <Ghost borderRadius={4} className=\"GraphCardGhostState-headlinePill\" height={20} width={96} />\n        </div>\n        <GraphGhostState />\n    </div>\n);\n\nexport default GraphCardGhostState;\n","import * as React from 'react';\n\nimport Ghost from '../../components/ghost';\n\nimport GraphCardGhostState from './GraphCardGhostState';\n\nimport './ContentInsightsSummaryGhostState.scss';\n\nconst ContentInsightsSummaryGhostState = () => (\n    <div className=\"ContentInsightsSummaryGhostState\">\n        <GraphCardGhostState />\n        <div className=\"ContentInsightsSummaryGhostState-cta\">\n            <Ghost borderRadius={6} className=\"ContentInsightsSummaryGhostState-ctaButton\" height={32} />\n        </div>\n    </div>\n);\n\nexport default ContentInsightsSummaryGhostState;\n","import React from 'react';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\n\nimport { Direction } from '../types';\n\nimport './Bar.scss';\n\nconst DEFAULT_SIZE = 50;\n\ninterface Props {\n    color?: string;\n    direction?: Direction;\n    label?: string;\n    onMouseEnter?: (arg1: { left: number; top: number }) => void;\n    onMouseLeave?: () => void;\n    size: number;\n}\n\nfunction Bar({\n    color,\n    direction = 'vertical',\n    onMouseEnter = noop,\n    onMouseLeave = noop,\n    label,\n    size = DEFAULT_SIZE,\n}: Props) {\n    const isHorizontal = direction === 'horizontal';\n    const cssProperty = direction === 'horizontal' ? 'width' : 'height';\n    const [style, setStyle] = React.useState({\n        backgroundColor: color,\n        [cssProperty]: '0%',\n    });\n\n    const adjustedSize = Math.max(0, size);\n    const barRef = React.useRef<HTMLDivElement | null>(null);\n\n    const handleMouseEnter = React.useCallback(() => {\n        const offsetPosition = { top: 0, left: 0 };\n        if (barRef?.current) {\n            const boundingClientRect = barRef.current.getBoundingClientRect();\n            offsetPosition.top = boundingClientRect.top;\n            offsetPosition.left = boundingClientRect.left + boundingClientRect.width / 2;\n        }\n        onMouseEnter(offsetPosition);\n    }, [onMouseEnter]);\n\n    React.useEffect(() => {\n        setStyle({\n            backgroundColor: color,\n            [cssProperty]: adjustedSize === 0 ? '2px' : `${adjustedSize}%`,\n        });\n    }, [adjustedSize, color, cssProperty]);\n\n    return (\n        <div\n            ref={barRef}\n            className={classNames('ca-Bar', { 'is-horizontal': isHorizontal })}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={onMouseLeave}\n            role=\"presentation\"\n        >\n            <div className=\"ca-Bar-value\" style={style} />\n            {label && <div className=\"ca-Bar-label\">{label}</div>}\n        </div>\n    );\n}\n\nexport default Bar;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport Bar from './Bar';\nimport { AccessorFunction, Direction } from '../types';\n\nimport './BarChart.scss';\n\ntype ValueAccessor = string | AccessorFunction;\n\ninterface OffsetPosition {\n    left: number;\n    top: number;\n}\ninterface Props {\n    className?: string;\n    data: Array<any>;\n    direction?: Direction;\n    hasAxisLabel?: boolean;\n    label: string;\n    labelAccessor: string;\n    onBarMouseEnter?: (arg1: { datum: any }, arg2: OffsetPosition) => void;\n    onBarMouseLeave?: (arg1: { datum: any }) => void;\n    valueAccessor: ValueAccessor;\n}\n\nfunction isFunction(valueAccessor: ValueAccessor): valueAccessor is AccessorFunction {\n    return typeof valueAccessor === 'function';\n}\n\nfunction BarChart({\n    className,\n    data = [],\n    direction = 'vertical',\n    hasAxisLabel = false,\n    label,\n    labelAccessor,\n    onBarMouseEnter,\n    onBarMouseLeave,\n    valueAccessor,\n}: Props) {\n    const isHorizontal = direction === 'horizontal';\n    const isInteractive = !!onBarMouseEnter || !!onBarMouseLeave;\n    const max = data\n        .map(datum => (isFunction(valueAccessor) ? valueAccessor(datum) : datum[valueAccessor]))\n        .reduce((previousValue, currentValue) => Math.max(previousValue, currentValue), 0);\n\n    const getSize = (datum: any) => {\n        // If max is 0 then all other values in the data array are 0 so return 0\n        // instead of allowing the following calculation to return Infinity\n        if (max === 0) {\n            return 0;\n        }\n\n        return ((isFunction(valueAccessor) ? valueAccessor(datum) : datum[valueAccessor]) / max) * 100;\n    };\n\n    const handleBarMouseEnter = onBarMouseEnter || noop;\n    const handleBarMouseLeave = onBarMouseLeave || noop;\n\n    return (\n        <div\n            aria-label={label}\n            className={classNames('ca-BarChart', className, {\n                'is-horizontal': isHorizontal,\n                'is-interactive': isInteractive,\n            })}\n            role=\"img\"\n        >\n            {data.map(datum => (\n                <Bar\n                    key={datum[labelAccessor]}\n                    direction={direction}\n                    label={hasAxisLabel ? datum[labelAccessor] : ''}\n                    onMouseEnter={(position: OffsetPosition) => handleBarMouseEnter({ datum }, position)}\n                    onMouseLeave={() => handleBarMouseLeave({ datum })}\n                    size={getSize(datum)}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default BarChart;\n","import { IntlShape } from 'react-intl';\n\nconst formatCount = (count: number, intl: IntlShape): string | string[] => {\n    const shouldAbbreviate = count >= 10000;\n    return shouldAbbreviate ? intl.formatNumber(count, { notation: 'compact' }) : intl.formatNumber(count);\n};\n\n// eslint-disable-next-line import/prefer-default-export\nexport { formatCount };\n","import React from 'react';\nimport { injectIntl, IntlShape } from 'react-intl';\nimport classNames from 'classnames';\n\nimport { formatCount } from './numberUtils';\n\ninterface Props {\n    className?: string;\n    count: number;\n    intl: IntlShape;\n    onMouseEnter?: () => void;\n    onMouseLeave?: () => void;\n}\n\nfunction CompactCount({ className, count, intl, ...rest }: Props) {\n    return (\n        <span className={classNames('CompactCount', className)} {...rest}>\n            {formatCount(count, intl)}\n        </span>\n    );\n}\n\nexport default injectIntl(CompactCount);\n","import * as React from 'react';\nimport CompactCount from './CompactCount';\n\nimport './HeaderWithCount.scss';\n\ninterface Props {\n    title: string;\n    totalCount?: number;\n}\n\nfunction isNumber(count?: number): count is number {\n    return typeof count === 'number';\n}\n\nfunction HeaderWithCount({ title, totalCount }: Props) {\n    return (\n        <div className=\"HeaderWithCount\">\n            <span className=\"HeaderWithCount-title\">{title}</span>\n            {isNumber(totalCount) ? <CompactCount className=\"HeaderWithCount-titleCount\" count={totalCount} /> : null}\n        </div>\n    );\n}\n\nexport default HeaderWithCount;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage, injectIntl, IntlShape } from 'react-intl';\n\nimport LabelPill from '../../components/label-pill';\nimport messages from './messages';\n\nimport { Period } from './types';\n\nimport './TrendPill.scss';\n\ninterface Props {\n    intl: IntlShape;\n    period: Period;\n    trend: number;\n}\n\ntype Trend = 'up' | 'down' | 'neutral';\n\nconst getTrendStatus = (trend: number): Trend => {\n    if (trend === 0) {\n        return 'neutral';\n    }\n\n    return trend > 0 ? 'up' : 'down';\n};\n\nconst getTrendByPeriod = (period: Period) => {\n    switch (period) {\n        case 'month':\n            return messages.trendMonth;\n        case 'threemonths':\n            return messages.trendThreeMonths;\n        case 'year':\n            return messages.trendYear;\n        case 'week':\n        default:\n            return messages.trendWeek;\n    }\n};\n\nfunction TrendPill({ intl, period, trend }: Props) {\n    const getTrendLabel = (value: number): string => {\n        return intl.formatMessage(value > 0 ? messages.trendUp : messages.trendDown);\n    };\n\n    const trendStatus = getTrendStatus(trend);\n    const trendLabel = getTrendLabel(trend);\n\n    return (\n        <LabelPill.Pill\n            className={classNames('TrendPill', {\n                'TrendPill--up': trendStatus === 'up',\n                'TrendPill--down': trendStatus === 'down',\n            })}\n        >\n            <>\n                {trendStatus !== 'neutral' && <span aria-label={trendLabel} className=\"TrendPill-trend\" role=\"img\" />}\n                <LabelPill.Text>\n                    <>\n                        <span className=\"TrendPill-percentage\">{intl.formatNumber(trend, { style: 'percent' })}</span>\n                        <FormattedMessage {...getTrendByPeriod(period)} />\n                    </>\n                </LabelPill.Text>\n            </>\n        </LabelPill.Pill>\n    );\n}\n\nexport default injectIntl(TrendPill);\n","const DOWNLOADS = 'DOWNLOADS';\nconst PREVIEWS = 'PREVIEWS';\nconst USERS = 'USERS';\n\nexport const METRIC = Object.freeze({\n    DOWNLOADS,\n    PREVIEWS,\n    USERS,\n});\n\nconst WEEK = 'week';\nconst MONTH = 'month';\nconst THREEMONTHS = 'threemonths';\nconst YEAR = 'year';\n\nexport const PERIOD = Object.freeze({\n    WEEK,\n    MONTH,\n    THREEMONTHS,\n    YEAR,\n});\n\nconst ONE_WEEK = 'one_week';\nconst TWO_WEEKS = 'two_weeks';\nconst ONE_MONTH = 'one_month';\nconst TWO_MONTHS = 'two_months';\nconst THREE_MONTHS = 'three_months';\nconst SIX_MONTHS = 'six_months';\nconst ONE_YEAR = 'one_year';\nconst TWO_YEARS = 'two_years';\n\nexport const PRESET_TIMES = Object.freeze({\n    ONE_WEEK,\n    TWO_WEEKS,\n    ONE_MONTH,\n    TWO_MONTHS,\n    THREE_MONTHS,\n    SIX_MONTHS,\n    ONE_YEAR,\n    TWO_YEARS,\n});\n\nexport const PRESET_TO_TIMESTAMPS_MAP = {\n    [PERIOD.WEEK]: {\n        currentPeriod: PRESET_TIMES.ONE_WEEK,\n        previousPeriod: PRESET_TIMES.TWO_WEEKS,\n    },\n    [PERIOD.MONTH]: {\n        currentPeriod: PRESET_TIMES.ONE_MONTH,\n        previousPeriod: PRESET_TIMES.TWO_MONTHS,\n    },\n    [PERIOD.THREEMONTHS]: {\n        currentPeriod: PRESET_TIMES.THREE_MONTHS,\n        previousPeriod: PRESET_TIMES.SIX_MONTHS,\n    },\n    [PERIOD.YEAR]: {\n        currentPeriod: PRESET_TIMES.ONE_YEAR,\n        previousPeriod: PRESET_TIMES.TWO_YEARS,\n    },\n} as const;\n","import * as React from 'react';\nimport isFinite from 'lodash/isFinite';\nimport isNaN from 'lodash/isNaN';\nimport { injectIntl, IntlShape } from 'react-intl';\n\nimport HeaderWithCount from './HeaderWithCount';\nimport messages from './messages';\nimport TrendPill from './TrendPill';\nimport { formatCount } from './numberUtils';\nimport { METRIC } from './constants';\nimport { GraphData, Metric, Period } from './types';\n\nimport './MetricSummary.scss';\n\ninterface Props {\n    data: GraphData;\n    intl: IntlShape;\n    metric: Metric;\n    period: Period;\n    previousPeriodCount: number;\n    totalCount?: number;\n}\n\nconst METRIC_MAP = {\n    [METRIC.PREVIEWS]: {\n        headerMessage: messages.previewGraphType,\n        getPeriodCount: (data: GraphData) => data.reduce((count, { previewsCount }) => count + previewsCount, 0),\n    },\n    [METRIC.DOWNLOADS]: {\n        getPeriodCount: (data: GraphData) => data.reduce((count, { downloadsCount }) => count + downloadsCount, 0),\n        headerMessage: messages.downloadGraphType,\n    },\n    [METRIC.USERS]: {\n        getPeriodCount: (data: GraphData) => {\n            const periodUsers = data.reduce(\n                (totalUsers, { users }) => new Set([...Array.from(totalUsers), ...Array.from(users)]),\n                new Set(),\n            );\n            return periodUsers.size;\n        },\n        headerMessage: messages.peopleTitle,\n    },\n} as const;\n\n// Limit the trend to a finite number (in case the previous period count was 0 and the calculated trend is Infinity)\nconst formatTrend = (calculatedTrend: number) => (!isFinite(calculatedTrend) ? 1 : calculatedTrend);\n\nfunction MetricSummary({ data = [], intl, metric, period, previousPeriodCount = 0, totalCount }: Props) {\n    const { getPeriodCount, headerMessage } = METRIC_MAP[metric];\n    const periodCount = getPeriodCount(data);\n    const calculatedTrend = (periodCount - previousPeriodCount) / previousPeriodCount;\n    const trend = isNaN(calculatedTrend) ? 0 : formatTrend(calculatedTrend);\n\n    return (\n        <div className=\"MetricSummary\">\n            <HeaderWithCount title={intl.formatMessage(headerMessage)} totalCount={totalCount} />\n            <div className=\"MetricSummary-period\">\n                <span className=\"MetricSummary-periodCount\">{formatCount(periodCount, intl)}</span>\n                <TrendPill period={period} trend={trend} />\n            </div>\n        </div>\n    );\n}\n\nexport default injectIntl(MetricSummary);\n","import * as React from 'react';\nimport { injectIntl, IntlShape } from 'react-intl';\n\nimport BarChart from './charts/bar/BarChart';\nimport messages from './messages';\nimport MetricSummary from './MetricSummary';\nimport { METRIC, PERIOD } from './constants';\nimport { GraphData } from './types';\n\nimport './GraphCardPreviewsSummary.scss';\n\ninterface Props {\n    graphData: GraphData;\n    intl: IntlShape;\n    previousPeriodCount: number;\n    totalCount: number;\n}\n\nfunction GraphCardPreviewsSummary({ graphData, intl, previousPeriodCount, totalCount }: Props) {\n    return (\n        <>\n            <MetricSummary\n                data={graphData}\n                metric={METRIC.PREVIEWS}\n                period={PERIOD.WEEK}\n                previousPeriodCount={previousPeriodCount}\n                totalCount={totalCount}\n            />\n            <BarChart\n                className=\"GraphCardPreviewsSummary-chart\"\n                data={graphData}\n                label={intl.formatMessage(messages.previewGraphLabel)}\n                labelAccessor=\"start\"\n                valueAccessor=\"previewsCount\"\n            />\n        </>\n    );\n}\n\nexport default injectIntl(GraphCardPreviewsSummary);\n","import * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button, { ButtonType } from '../../components/button';\n\nimport messages from './messages';\n\ninterface Props {\n    onClick: () => void;\n}\n\nconst OpenContentInsightsButton = ({ onClick }: Props) => {\n    return (\n        <Button className=\"OpenContentInsightsButton\" onClick={onClick} type={ButtonType.BUTTON}>\n            <FormattedMessage {...messages.openContentInsightsButton} />\n        </Button>\n    );\n};\n\nexport default OpenContentInsightsButton;\n","import * as React from 'react';\n\nimport ContentAnalyticsErrorState from './ContentAnalyticsErrorState';\nimport ContentInsightsSummaryGhostState from './ContentInsightsSummaryGhostState';\nimport GraphCardPreviewsSummary from './GraphCardPreviewsSummary';\nimport OpenContentInsightsButton from './OpenContentInsightsButton';\nimport { GraphData, ResponseError } from './types';\n\nimport './ContentInsightsSummary.scss';\n\ninterface Props {\n    graphData: GraphData;\n    error?: ResponseError;\n    isLoading: boolean;\n    onClick: () => void;\n    previousPeriodCount: number;\n    totalCount: number;\n}\n\nconst ContentInsightsSummary = ({ error, graphData, isLoading, previousPeriodCount, onClick, totalCount }: Props) => {\n    const renderContentAnalyticsSummary = () => {\n        if (error) {\n            return <ContentAnalyticsErrorState error={error} />;\n        }\n\n        if (isLoading) {\n            return <ContentInsightsSummaryGhostState />;\n        }\n\n        return (\n            <>\n                <GraphCardPreviewsSummary\n                    graphData={graphData}\n                    previousPeriodCount={previousPeriodCount}\n                    totalCount={totalCount}\n                />\n                <OpenContentInsightsButton onClick={onClick} />\n            </>\n        );\n    };\n\n    return <div className=\"ContentInsightsSummary\">{renderContentAnalyticsSummary()}</div>;\n};\n\nexport default ContentInsightsSummary;\n","import React from 'react';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\n\nimport ContentInsightsSummary from '../../features/content-insights/ContentInsightsSummary';\nimport { GraphData, ResponseError } from '../../features/content-insights/types';\n// @ts-ignore Module is written in Flow\nimport messages from '../common/messages';\n// @ts-ignore Module is written in Flow\nimport SidebarSection from './SidebarSection';\n// @ts-ignore Module is written in Flow\n// eslint-disable-next-line import/no-named-as-default, import/no-named-as-default-member\nimport withErrorHandling from './withErrorHandling'; // Above eslint rules disabled because typescript chokes on flow type import in withErrorHandling\n\nimport './SidebarContentInsights.scss';\n\nexport interface ContentInsights {\n    error?: ResponseError;\n    graphData: GraphData;\n    isLoading: boolean;\n    previousPeriodCount: number;\n    totalCount: number;\n}\n\nexport interface Props {\n    contentInsights?: ContentInsights;\n    onContentInsightsClick?: () => void;\n}\n\nconst defaultContentInsights = {\n    graphData: [],\n    isLoading: true,\n    previousPeriodCount: 0,\n    totalCount: 0,\n};\n\nconst SidebarContentInsights = ({ contentInsights = defaultContentInsights, onContentInsightsClick = noop }: Props) => {\n    const { error, graphData, isLoading, previousPeriodCount, totalCount } = contentInsights;\n\n    return (\n        <SidebarSection\n            className=\"bcs-SidebarContentInsights\"\n            title={<FormattedMessage {...messages.sidebarContentInsights} />}\n        >\n            <ContentInsightsSummary\n                error={error}\n                graphData={graphData}\n                isLoading={isLoading}\n                onClick={onContentInsightsClick}\n                previousPeriodCount={previousPeriodCount}\n                totalCount={totalCount}\n            />\n        </SidebarSection>\n    );\n};\n\nexport default withErrorHandling(SidebarContentInsights);\n","// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    bookmarkExpiration: {\n        defaultMessage: 'This bookmark will be deleted on {expiration}.',\n        description:\n            'Warning message in the sidebar that this bookmark will be automatically deleted on a certain date, {expiration} is the date',\n        id: 'boxui.itemDetails.bookmarkExpiration',\n    },\n    created: {\n        defaultMessage: 'Created',\n        description: 'Label for created date under item properties in the sidebar',\n        id: 'boxui.itemDetails.created',\n    },\n    deleted: {\n        defaultMessage: 'Deleted',\n        description: 'Label for deletion date under item properties in the sidebar',\n        id: 'boxui.itemDetails.deleted',\n    },\n    description: {\n        defaultMessage: 'Description',\n        description: 'Label for description under item properties in the sidebar',\n        id: 'boxui.itemDetails.description',\n    },\n    descriptionPlaceholder: {\n        defaultMessage: 'Enter a description',\n        description: 'Placeholder for textarea to enter a description under item properties in the sidebar',\n        id: 'boxui.itemDetails.descriptionPlaceholder',\n    },\n    enterpriseOwner: {\n        defaultMessage: 'Enterprise Owner',\n        description: 'Label for name of enterprise owner under item properties in the sidebar',\n        id: 'boxui.itemDetails.enterpriseOwner',\n    },\n    fileExpiration: {\n        defaultMessage: 'This file will be deleted on {expiration}.',\n        description:\n            'Warning message in the sidebar that this file will be automatically deleted on a certain date, {expiration} is the date',\n        id: 'boxui.itemDetails.fileExpiration',\n    },\n    folderExpiration: {\n        defaultMessage: 'This folder will be deleted on {expiration}.',\n        description:\n            'Warning message in the sidebar that this folder will be automatically deleted on a certain date, {expiration} is the date',\n        id: 'boxui.itemDetails.folderExpiration',\n    },\n    modified: {\n        defaultMessage: 'Modified',\n        description: 'Label for modified date under item properties in the sidebar',\n        id: 'boxui.itemDetails.modified',\n    },\n    owner: {\n        defaultMessage: 'Owner',\n        description: 'Label for name of owner under item properties in the sidebar',\n        id: 'boxui.itemDetails.owner',\n    },\n    retentionPolicyDescription: {\n        defaultMessage: 'Policy',\n        description: 'Label for description of the retention policy under item properties in the sidebar',\n        id: 'boxui.itemDetails.retentionPolicyDescription',\n    },\n    retentionPolicyExpiration: {\n        defaultMessage: 'Policy Expiration',\n        description: 'Label for the expiration date of the retention policy under item properties in the sidebar',\n        id: 'boxui.itemDetails.retentionPolicyExpiration',\n    },\n    retentionPolicyExtend: {\n        defaultMessage: 'Extend',\n        description:\n            'Button to extend the expiration date of the retention policy under item properties in the sidebar',\n        id: 'boxui.itemDetails.retentionPolicyExtend',\n    },\n    savedVersions: {\n        defaultMessage: '{versionCount, number} Saved Versions',\n        description:\n            'Text for button in the sidebar to open the version history popup, {versionCount} is the number of saved file versions',\n        id: 'boxui.itemDetails.savedVersions',\n    },\n    sharedLinkExpiration: {\n        defaultMessage: 'This shared link will be disabled on {expiration}.',\n        description:\n            'Warning message in the sidebar that this shared link will expire on a certain date, {expiration} is the date',\n        id: 'boxui.itemDetails.sharedLinkExpiration',\n    },\n    size: {\n        defaultMessage: 'Size',\n        description: 'Label for human-readable filesize under item properties in the sidebar',\n        id: 'boxui.itemDetails.size',\n    },\n    uploader: {\n        defaultMessage: 'Uploader',\n        description: 'Label for name of uploader under item properties in the sidebar',\n        id: 'boxui.itemDetails.uploader',\n    },\n    url: {\n        defaultMessage: 'URL',\n        description: 'Label for a weblink url under item properties in the sidebar',\n        id: 'boxui.itemDetails.url',\n    },\n    urlPlaceholder: {\n        defaultMessage: 'Enter a valid url',\n        description: 'Placeholder for a weblink url text area in the right sidebar',\n        id: 'boxui.itemDetails.urlPlaceholder',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nimport messages from './messages';\n\ntype Props = {\n    intl: Object,\n    onDescriptionChange: Function,\n    textAreaProps?: Object,\n    value?: string,\n};\n\ntype State = {\n    value: string,\n};\n\nclass EditableDescription extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        textAreaProps: {},\n        value: '',\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            value: props.value || '',\n        };\n    }\n\n    componentDidUpdate({ value: prevValue }: Props): void {\n        const { value } = this.props;\n        if (prevValue !== value) {\n            this.setState({ value });\n        }\n    }\n\n    handleBlur = (): void => {\n        const { value } = this.state;\n        this.props.onDescriptionChange(value);\n    };\n\n    handleChange = (event: SyntheticEvent<HTMLTextAreaElement>): void => {\n        const { value } = event.currentTarget;\n        this.setState({ value });\n    };\n\n    render() {\n        const { intl, textAreaProps } = this.props;\n        const { value } = this.state;\n\n        return (\n            <TextareaAutosize\n                {...textAreaProps}\n                className=\"description-textarea\"\n                maxLength=\"255\"\n                maxRows={6}\n                onBlur={this.handleBlur}\n                onChange={this.handleChange}\n                placeholder={intl.formatMessage(messages.descriptionPlaceholder)}\n                value={value}\n            />\n        );\n    }\n}\n\nexport { EditableDescription as EditableDescriptionBase };\nexport default injectIntl(EditableDescription);\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport TextInput from '../../components/text-input/TextInput';\nimport commonMessages from '../../common/messages';\n\nimport messages from './messages';\n\nconst VALUE_MISSING = 'valueMissing';\nconst TYPE_MISMATCH = 'typeMismatch';\n\nconst errorMap = {\n    [VALUE_MISSING]: <FormattedMessage {...commonMessages.requiredFieldError} />,\n    [TYPE_MISMATCH]: <FormattedMessage {...commonMessages.invalidURLError} />,\n};\n\ntype Props = {\n    intl: Object,\n    onValidURLChange: Function,\n    value: string,\n};\n\ntype State = {\n    error: '' | $Keys<typeof errorMap>,\n    value: string,\n};\n\nclass EditableURL extends React.Component<Props, State> {\n    state = {\n        error: '',\n        value: this.props.value,\n    };\n\n    componentDidUpdate({ value: prevValue }: Props) {\n        const { value } = this.props;\n        if (prevValue !== value) {\n            this.setState({ value });\n        }\n    }\n\n    inputEl: ?HTMLInputElement;\n\n    handleBlur = (): void => {\n        if (!this.inputEl) {\n            return;\n        }\n\n        const { valid, valueMissing } = this.inputEl.validity;\n        if (!valid) {\n            this.setState({\n                error: valueMissing ? VALUE_MISSING : TYPE_MISMATCH,\n            });\n            return;\n        }\n\n        this.props.onValidURLChange(this.state.value);\n    };\n\n    handleChange = (event: SyntheticEvent<HTMLInputElement>): void => {\n        this.setState({ value: event.currentTarget.value });\n    };\n\n    handleFocus = (): void => {\n        this.setState({ error: '' });\n    };\n\n    render() {\n        const {\n            intl: { formatMessage },\n        } = this.props;\n        const { error, value } = this.state;\n\n        return (\n            <TextInput\n                className=\"url-input\"\n                error={error ? errorMap[error] : undefined}\n                hideLabel\n                inputRef={ref => {\n                    this.inputEl = ref;\n                }}\n                isRequired\n                label={formatMessage(messages.url)}\n                onBlur={this.handleBlur}\n                onChange={this.handleChange}\n                onFocus={this.handleFocus}\n                placeholder={formatMessage(messages.urlPlaceholder)}\n                type=\"url\"\n                value={value}\n            />\n        );\n    }\n}\n\nexport { EditableURL as EditableURLBase, VALUE_MISSING, TYPE_MISMATCH };\nexport default injectIntl(EditableURL);\n","/* @flow */\nimport * as React from 'react';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button';\n\nimport messages from './messages';\n\nconst datetimeOptions = {\n    day: 'numeric',\n    month: 'short',\n    year: 'numeric',\n};\n\ntype Props = {\n    dispositionTime?: number,\n    openModal?: Function,\n    policyType?: string,\n    retentionPolicyDescription?: string,\n};\n\nconst RetentionPolicy = ({ dispositionTime, openModal, policyType, retentionPolicyDescription }: Props) => {\n    if (!retentionPolicyDescription) {\n        return null;\n    }\n\n    return (\n        <>\n            <FormattedMessage tagName=\"dt\" {...messages.retentionPolicyDescription} />\n            <dd>{retentionPolicyDescription}</dd>\n            {policyType !== 'indefinite' ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.retentionPolicyExpiration} />\n                    {dispositionTime ? (\n                        <dd>\n                            <FormattedDate value={new Date(dispositionTime)} {...datetimeOptions} />\n                            {openModal ? (\n                                <PlainButton className=\"lnk bdl-RetentionLink\" onClick={openModal}>\n                                    <FormattedMessage {...messages.retentionPolicyExtend} />\n                                </PlainButton>\n                            ) : null}\n                        </dd>\n                    ) : null}\n                </>\n            ) : null}\n        </>\n    );\n};\n\nexport default RetentionPolicy;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport processString from 'react-process-string';\n\nconst NEWLINE_REGEX = /(\\r\\n|\\n\\r|\\n|\\r)/g;\n// eslint-disable-next-line no-useless-escape\nconst URL_REGEX = /\\b(ht|f)tps?:\\/\\/[\\w\\._\\-]+(:\\d+)?(\\/[\\w\\-_\\.~\\+\\/#\\?&%=:\\[\\]@!\\$'\\(\\)\\*;,]*)?/gim;\n\nconst ReadonlyDescription = ({ value }) =>\n    processString([\n        {\n            regex: NEWLINE_REGEX,\n            // eslint-disable-next-line react/display-name\n            fn: key => <br key={key} />,\n        },\n        {\n            regex: URL_REGEX,\n            // eslint-disable-next-line react/display-name\n            fn: (key, result) => (\n                <a key={key} href={result[0]} rel=\"noopener noreferrer\" target=\"_blank\">\n                    {result[0]}\n                </a>\n            ),\n        },\n    ])(value);\n\nReadonlyDescription.propTypes = {\n    value: PropTypes.string,\n};\n\nexport default ReadonlyDescription;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport uniqueid from 'lodash/uniqueId';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport EditableDescription from './EditableDescription';\nimport EditableURL from './EditableURL';\nimport RetentionPolicy from './RetentionPolicy';\nimport ReadonlyDescription from './ReadonlyDescription';\nimport messages from './messages';\n\nimport './ItemProperties.scss';\n\nconst datetimeOptions = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n};\n\nconst ItemProperties = ({\n    createdAt,\n    description,\n    descriptionTextareaProps = {},\n    enterpriseOwner,\n    modifiedAt,\n    onDescriptionChange,\n    onValidURLChange,\n    owner,\n    retentionPolicyProps = {},\n    size,\n    trashedAt,\n    uploader,\n    url,\n}) => {\n    const descriptionId = uniqueid('description_');\n\n    return (\n        <dl className=\"item-properties\">\n            {description || onDescriptionChange ? (\n                <>\n                    <FormattedMessage {...messages.description}>\n                        {text => <dt id={descriptionId}>{text}</dt>}\n                    </FormattedMessage>\n                    <dd>\n                        {onDescriptionChange ? (\n                            <EditableDescription\n                                onDescriptionChange={onDescriptionChange}\n                                textAreaProps={{ ...descriptionTextareaProps, 'aria-labelledby': descriptionId }}\n                                value={description}\n                            />\n                        ) : (\n                            <ReadonlyDescription value={description} />\n                        )}\n                    </dd>\n                </>\n            ) : null}\n            {!!url && (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.url} />\n                    <dd>{onValidURLChange ? <EditableURL onValidURLChange={onValidURLChange} value={url} /> : url}</dd>\n                </>\n            )}\n            {owner ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.owner} />\n                    <dd>{owner}</dd>\n                </>\n            ) : null}\n            {enterpriseOwner ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.enterpriseOwner} />\n                    <dd>{enterpriseOwner}</dd>\n                </>\n            ) : null}\n            {uploader ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.uploader} />\n                    <dd>{uploader}</dd>\n                </>\n            ) : null}\n            {createdAt ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.created} />\n                    <dd>\n                        <FormattedDate value={new Date(createdAt)} {...datetimeOptions} />\n                    </dd>\n                </>\n            ) : null}\n            {modifiedAt ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.modified} />\n                    <dd>\n                        <FormattedDate value={new Date(modifiedAt)} {...datetimeOptions} />\n                    </dd>\n                </>\n            ) : null}\n            {size ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.size} />\n                    <dd>{size}</dd>\n                </>\n            ) : null}\n            {trashedAt ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.deleted} />\n                    <dd>\n                        <FormattedDate value={new Date(trashedAt)} {...datetimeOptions} />\n                    </dd>\n                </>\n            ) : null}\n            <RetentionPolicy {...retentionPolicyProps} />\n        </dl>\n    );\n};\n\nItemProperties.propTypes = {\n    /** the datetime this item was created, accepts any value that can be passed to the Date() constructor */\n    createdAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /** a description for the item */\n    description: PropTypes.string,\n    /** props for the editable description textarea */\n    descriptionTextareaProps: PropTypes.object,\n    /** the name of the item's enterprise owner if the item is owned by a different enterprise */\n    enterpriseOwner: PropTypes.string,\n    /** the datetime this item was last modified, accepts any value that can be passed to the Date() constructor */\n    modifiedAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /** function called on description textarea blur with the new value to save */\n    onDescriptionChange: PropTypes.func,\n    /** function called on url input blur with the new value to save */\n    onValidURLChange: PropTypes.func,\n    /** the name of the item's owner */\n    owner: PropTypes.string,\n    /** props for the retention policy of this item */\n    retentionPolicyProps: PropTypes.object,\n    /** use the getFileSize util to get a localized human-readable string from the number of bytes */\n    size: PropTypes.string,\n    /** the datetime this item was deleted or moved to trash, accepts any value that can be passed to the Date() constructor */\n    trashedAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /** the name of the user who uploaded this item */\n    uploader: PropTypes.string,\n    /** the URL for the item when the item is a weblink */\n    url: PropTypes.string,\n};\n\nexport default ItemProperties;\n","import filesize from 'filesize';\n\nconst defaultDigitalUnits = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nconst bcp47TagToDigitalUnits = {\n    fi: ['t', 'kt', 'Mt', 'Gt', 'Tt', 'Pt', 'Et', 'Zt', 'Yt'],\n    fr: ['o', 'Ko', 'Mo', 'Go', 'To', 'Po', 'Eo', 'Zo', 'Yo'],\n    ru: ['Б', 'КБ', 'МБ', 'ГБ', 'ТБ', 'ПБ', 'ЭБ', 'ЗБ', 'ЙБ'],\n};\n\n/**\n * Formats a file size from number of bytes to a human-readable, localized string.\n * @param {number} size Number of bytes\n * @param {string} [locale] Optional locale, defaults to 'en'\n * @returns {string} The size as a localized string\n */\nconst getFileSize = (size, locale = 'en') => {\n    const settings = { round: 1, locale };\n\n    const localizedUnits = bcp47TagToDigitalUnits[locale];\n    if (localizedUnits) {\n        // map default units to localized units, ex. { B: Б, KB: КБ, ... }\n        settings.symbols = defaultDigitalUnits.reduce((symbols, unit, index) => {\n            symbols[unit] = localizedUnits[index];\n            return symbols;\n        }, {});\n    }\n\n    return filesize(size, settings);\n};\n\nexport default getFileSize;\n","/**\n * @flow\n * @file Sidebar file properties component\n * @author Box\n */\n\nimport React from 'react';\nimport getProp from 'lodash/get';\nimport { injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport ItemProperties from '../../features/item-details/ItemProperties';\nimport LoadingIndicatorWrapper from '../../components/loading-indicator/LoadingIndicatorWrapper';\nimport getFileSize from '../../utils/getFileSize';\nimport { INTERACTION_TARGET, DETAILS_TARGETS } from '../common/interactionTargets';\nimport withErrorHandling from './withErrorHandling';\nimport type { ClassificationInfo } from './flowTypes';\nimport type { BoxItem } from '../../common/types/core';\nimport { PLACEHOLDER_USER } from '../../constants';\n\ntype Props = {\n    classification?: ClassificationInfo,\n    file: BoxItem,\n    hasClassification: boolean,\n    hasRetentionPolicy: boolean,\n    isLoading: boolean,\n    onDescriptionChange: Function,\n    onRetentionPolicyExtendClick?: Function,\n    retentionPolicy?: Object,\n} & InjectIntlProvidedProps;\n\nconst SidebarFileProperties = ({\n    file,\n    onDescriptionChange,\n    hasRetentionPolicy,\n    retentionPolicy,\n    onRetentionPolicyExtendClick,\n    isLoading,\n    intl,\n}: Props) => (\n    <LoadingIndicatorWrapper isLoading={isLoading}>\n        <ItemProperties\n            createdAt={file.content_created_at}\n            description={file.description}\n            descriptionTextareaProps={{\n                [INTERACTION_TARGET]: DETAILS_TARGETS.DESCRIPTION,\n            }}\n            modifiedAt={file.content_modified_at}\n            onDescriptionChange={getProp(file, 'permissions.can_rename') ? onDescriptionChange : undefined}\n            owner={getProp(file, 'owned_by.name')}\n            retentionPolicyProps={\n                hasRetentionPolicy\n                    ? {\n                          ...retentionPolicy,\n                          openModal: onRetentionPolicyExtendClick,\n                      }\n                    : {}\n            }\n            size={getFileSize(file.size, intl.locale)}\n            // use uploader_display_name if uploaded anonymously\n            uploader={\n                getProp(file, 'created_by.id') === PLACEHOLDER_USER.id\n                    ? getProp(file, 'uploader_display_name')\n                    : getProp(file, 'created_by.name')\n            }\n        />\n    </LoadingIndicatorWrapper>\n);\n\nexport { SidebarFileProperties as SidebarFilePropertiesComponent };\nexport default injectIntl(withErrorHandling(SidebarFileProperties));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport InlineNotice from '../../components/inline-notice';\n\nimport messages from './messages';\n\nconst SharedLinkExpirationNotice = ({ expiration }) => (\n    <InlineNotice>\n        <FormattedMessage {...messages.sharedLinkExpiration} values={{ expiration }} />\n    </InlineNotice>\n);\n\nSharedLinkExpirationNotice.propTypes = {\n    /** a localized, human-readable string/node representing the expiration date */\n    expiration: PropTypes.node.isRequired,\n};\n\nexport default SharedLinkExpirationNotice;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport InlineNotice from '../../components/inline-notice';\n\nimport messages from './messages';\n\nconst FILE = 'file';\nconst FOLDER = 'folder';\nconst WEBLINK = 'web_link';\n\nconst ItemExpirationNotice = ({ expiration, itemType }) => {\n    let messageID = '';\n    switch (itemType) {\n        case FILE:\n            messageID = 'fileExpiration';\n            break;\n        case FOLDER:\n            messageID = 'folderExpiration';\n            break;\n        case WEBLINK:\n            messageID = 'bookmarkExpiration';\n            break;\n        // no default\n    }\n\n    return (\n        <InlineNotice>\n            <FormattedMessage {...messages[messageID]} values={{ expiration }} />\n        </InlineNotice>\n    );\n};\n\nItemExpirationNotice.propTypes = {\n    /** a localized, human-readable string/node representing the expiration date */\n    expiration: PropTypes.node.isRequired,\n    /** the type of the item */\n    itemType: PropTypes.oneOf([FILE, FOLDER, WEBLINK]).isRequired,\n};\n\nexport default ItemExpirationNotice;\n","/**\n * @flow\n * @file Function to render the date table cell\n * @author Box\n */\n\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport { isToday, isYesterday } from '../../../utils/datetime';\nimport messages from '../messages';\nimport './DateField.scss';\n\ntype Props = {\n    capitalize?: boolean,\n    date: string,\n    dateFormat?: Object,\n    omitCommas?: boolean,\n    relative?: boolean,\n} & InjectIntlProvidedProps;\n\nconst DEFAULT_DATE_FORMAT = {\n    weekday: 'short',\n    month: 'short',\n    year: 'numeric',\n    day: 'numeric',\n};\n\nconst DateField = ({\n    date,\n    dateFormat = DEFAULT_DATE_FORMAT,\n    omitCommas = false,\n    intl,\n    relative = true,\n    capitalize = false,\n}: Props) => {\n    const d = new Date(date);\n    const isTodaysDate = isToday(d);\n    const isYesterdaysDate = isYesterday(d);\n\n    if (relative && (isTodaysDate || isYesterdaysDate)) {\n        let Message = <FormattedMessage {...messages.today} />;\n        if (isYesterdaysDate) {\n            Message = <FormattedMessage {...messages.yesterday} />;\n        }\n\n        if (capitalize) {\n            return <span className=\"be-date-capitalize\">{Message}</span>;\n        }\n\n        return Message;\n    }\n\n    let formattedDate = intl.formatDate(d, dateFormat);\n    formattedDate = omitCommas ? formattedDate.replace(/,/g, '') : formattedDate;\n    return formattedDate;\n};\n\nexport default injectIntl(DateField);\n","/**\n * @flow\n * @file Preview details sidebar notices component\n * @author Box\n */\n\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport SharedLinkExpirationNotice from '../../features/item-details/SharedLinkExpirationNotice';\nimport ItemExpirationNotice from '../../features/item-details/ItemExpirationNotice';\nimport { addTime } from '../../utils/datetime';\n\nimport DateField from '../common/date';\n\nimport type { BoxItem } from '../../common/types/core';\n\nconst ONE_MINUTE_IN_MS = 60000;\n\nconst NOTICE_DATE_FORMAT = {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric',\n};\n\ntype Props = {\n    file: BoxItem,\n};\n\nconst SidebarNotices = ({ file }: Props) => {\n    const itemExpiration = getProp(file, 'expires_at');\n    const sharedLinkExpiration = getProp(file, 'shared_link.unshared_at');\n\n    if (!itemExpiration && !sharedLinkExpiration) {\n        return null;\n    }\n\n    return (\n        <>\n            {!!itemExpiration && (\n                <ItemExpirationNotice\n                    expiration={\n                        <DateField\n                            // $FlowFixMe\n                            date={addTime(new Date(itemExpiration), ONE_MINUTE_IN_MS)}\n                            dateFormat={NOTICE_DATE_FORMAT}\n                            relative={false}\n                        />\n                    }\n                    itemType=\"file\"\n                />\n            )}\n            {!!sharedLinkExpiration && (\n                <SharedLinkExpirationNotice\n                    expiration={\n                        <DateField\n                            // $FlowFixMe\n                            date={addTime(new Date(sharedLinkExpiration), ONE_MINUTE_IN_MS)}\n                            dateFormat={NOTICE_DATE_FORMAT}\n                            relative={false}\n                        />\n                    }\n                />\n            )}\n        </>\n    );\n};\n\nexport default SidebarNotices;\n","// @flow\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button';\n\nimport messages from './messages';\n\ntype Props = {\n    className: string,\n    /** the number of saved versions that exist for this item, should be 2 or more */\n    onClick?: Function,\n    versionCount: number,\n};\n\nconst VersionHistoryLink = ({ className, versionCount, onClick, ...rest }: Props) => {\n    const formattedMessageComponent = <FormattedMessage {...messages.savedVersions} values={{ versionCount }} />;\n\n    // Only render it as a link if there is an onClick\n    if (onClick) {\n        return (\n            <PlainButton className={classNames('lnk', className)} onClick={onClick} {...rest}>\n                {formattedMessageComponent}\n            </PlainButton>\n        );\n    }\n\n    return <div className={className}>{formattedMessageComponent}</div>;\n};\n\nVersionHistoryLink.defaultProps = {\n    className: '',\n};\n\nexport default VersionHistoryLink;\n","/**\n * @flow\n * @file Versions sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport VersionHistoryLink from '../../features/item-details/VersionHistoryLink';\n\nimport { DETAILS_TARGETS } from '../common/interactionTargets';\nimport { isBoxNote } from '../../utils/file';\nimport type { BoxItem } from '../../common/types/core';\nimport './SidebarVersions.scss';\n\ntype Props = {\n    file: BoxItem,\n    onVersionHistoryClick?: Function,\n};\n\nconst SidebarVersions = ({ onVersionHistoryClick, file }: Props) => {\n    const { version_number } = file;\n\n    const versionNumber = parseInt(version_number, 10);\n\n    if (isBoxNote(file) || !versionNumber || versionNumber <= 1) {\n        return null;\n    }\n\n    return (\n        <VersionHistoryLink\n            className=\"bcs-SidebarVersions\"\n            data-resin-target={DETAILS_TARGETS.VERSION_HISTORY}\n            data-testid={DETAILS_TARGETS.VERSION_HISTORY}\n            onClick={onVersionHistoryClick}\n            versionCount={versionNumber}\n        />\n    );\n};\n\nexport default SidebarVersions;\n","/**\n * @flow\n * @file Details sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport API from '../../api';\nimport messages from '../common/messages';\nimport SidebarAccessStats from './SidebarAccessStats';\nimport SidebarClassification from './SidebarClassification';\n// $FlowFixMe typescript component\nimport SidebarContentInsights from './SidebarContentInsights';\nimport SidebarContent from './SidebarContent';\nimport SidebarFileProperties from './SidebarFileProperties';\nimport SidebarNotices from './SidebarNotices';\nimport SidebarSection from './SidebarSection';\nimport SidebarVersions from './SidebarVersions';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { getBadItemError } from '../../utils/error';\nimport { mark } from '../../utils/performance';\nimport { SECTION_TARGETS } from '../common/interactionTargets';\nimport { SIDEBAR_FIELDS_TO_FETCH } from '../../utils/fields';\nimport { withAPIContext } from '../common/api-context';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withLogger } from '../common/logger';\nimport {\n    HTTP_STATUS_CODE_FORBIDDEN,\n    ORIGIN_DETAILS_SIDEBAR,\n    IS_ERROR_DISPLAYED,\n    SIDEBAR_VIEW_DETAILS,\n} from '../../constants';\nimport type { Errors } from '../common/flowTypes';\nimport type { ClassificationInfo, ContentInsights, FileAccessStats } from './flowTypes';\nimport type { WithLoggerProps } from '../../common/types/logging';\nimport type { ElementsErrorCallback, ErrorContextProps, ElementsXhrError } from '../../common/types/api';\nimport type { BoxItem } from '../../common/types/core';\nimport './DetailsSidebar.scss';\n\ntype ExternalProps = {\n    classification?: ClassificationInfo,\n    contentInsights?: ContentInsights,\n    elementId: string,\n    fetchContentInsights?: () => void,\n    fileId: string,\n    hasAccessStats?: boolean,\n    hasClassification?: boolean,\n    hasContentInsights?: boolean,\n    hasNotices?: boolean,\n    hasProperties?: boolean,\n    hasRetentionPolicy?: boolean,\n    hasSidebarInitialized?: boolean,\n    hasVersions?: boolean,\n    onAccessStatsClick?: Function,\n    onClassificationClick?: (e: SyntheticEvent<HTMLButtonElement>) => void,\n    onContentInsightsClick?: () => void,\n    onRetentionPolicyExtendClick?: Function,\n    onVersionHistoryClick?: Function,\n    retentionPolicy?: Object,\n} & ErrorContextProps &\n    WithLoggerProps;\ntype Props = {\n    api: API,\n} & ExternalProps &\n    ErrorContextProps &\n    WithLoggerProps;\n\ntype State = {\n    accessStats?: FileAccessStats,\n    accessStatsError?: Errors,\n    file?: BoxItem,\n    fileError?: Errors,\n    isLoadingAccessStats: boolean,\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_DETAILS_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass DetailsSidebar extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        hasNotices: false,\n        hasProperties: false,\n        hasAccessStats: false,\n        hasClassification: false,\n        hasRetentionPolicy: false,\n        hasVersions: false,\n        onError: noop,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            isLoadingAccessStats: false,\n        };\n        const { logger } = this.props;\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n    }\n\n    componentDidMount() {\n        const { hasAccessStats, hasContentInsights, fetchContentInsights } = this.props;\n\n        this.fetchFile();\n        if (hasAccessStats) {\n            this.fetchAccessStats();\n        }\n\n        if (hasContentInsights && fetchContentInsights) {\n            fetchContentInsights();\n        }\n    }\n\n    componentDidUpdate({ hasAccessStats: prevHasAccessStats, hasContentInsights: prevHasContentInsights }: Props) {\n        const { hasAccessStats, hasContentInsights, fetchContentInsights } = this.props;\n        // Component visibility props such as hasAccessStats can sometimes be flipped after an async call\n        const hasAccessStatsChanged = prevHasAccessStats !== hasAccessStats;\n        const hasContentInsightsChanged = prevHasContentInsights !== hasContentInsights;\n\n        if (hasAccessStatsChanged) {\n            if (hasAccessStats) {\n                this.fetchAccessStats();\n            } else {\n                this.setState({\n                    isLoadingAccessStats: false,\n                    accessStats: undefined,\n                    accessStatsError: undefined,\n                });\n            }\n        }\n\n        if (hasContentInsightsChanged && hasContentInsights && fetchContentInsights) {\n            fetchContentInsights();\n        }\n    }\n\n    /**\n     * File description update callback\n     *\n     * @private\n     * @param {BoxItem} file - Updated file object\n     * @return {void}\n     */\n    descriptionChangeSuccessCallback = (file: BoxItem): void => {\n        this.setState({ file, fileError: undefined });\n    };\n\n    /**\n     * Fetches a file with the fields needed for details sidebar\n     *\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @return {void}\n     */\n    fetchFile(\n        successCallback: (file: BoxItem) => void = this.fetchFileSuccessCallback,\n        errorCallback: ElementsErrorCallback = this.fetchFileErrorCallback,\n    ): void {\n        const { api, fileId }: Props = this.props;\n        api.getFileAPI().getFile(fileId, successCallback, errorCallback, {\n            fields: SIDEBAR_FIELDS_TO_FETCH, // TODO: replace this with DETAILS_SIDEBAR_FIELDS_TO_FETCH as we do not need all the sidebar fields\n        });\n    }\n\n    /**\n     * Handles a successful file fetch\n     *\n     * @param {Object} file - the box file\n     * @return {void}\n     */\n    fetchFileSuccessCallback = (file: BoxItem) => {\n        this.setState({\n            file,\n            fileError: undefined,\n        });\n    };\n\n    /**\n     * Handles a failed file fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @param {string} code - error code\n     * @return {void}\n     */\n    fetchFileErrorCallback = (e: ElementsXhrError, code: string) => {\n        // TODO: handle the error properly (probably with maskError) once files call split out\n        this.setState({\n            file: undefined,\n        });\n\n        this.props.onError(e, code, {\n            e,\n        });\n    };\n\n    /**\n     * Handles a failed file description update\n     *\n     * @private\n     * @param {BoxItem} file - Original file object\n     * @return {void}\n     */\n    descriptionChangeErrorCallback = (file: BoxItem): void => {\n        // Reset the state back to the original description since the API call failed\n        this.setState({\n            file,\n            fileError: {\n                inlineError: {\n                    title: messages.fileDescriptionInlineErrorTitleMessage,\n                    content: messages.defaultInlineErrorContentMessage,\n                },\n            },\n        });\n    };\n\n    /**\n     * Function to update file description\n     *\n     * @private\n     * @param {string} newDescription - New file description\n     * @return {void}\n     */\n    onDescriptionChange = (newDescription: string): void => {\n        const { api }: Props = this.props;\n        const { file }: State = this.state;\n        if (!file) {\n            throw getBadItemError();\n        }\n\n        const { description }: BoxItem = file;\n        if (newDescription === description) {\n            return;\n        }\n\n        api.getFileAPI().setFileDescription(\n            file,\n            newDescription,\n            this.descriptionChangeSuccessCallback,\n            this.descriptionChangeErrorCallback,\n        );\n    };\n\n    /**\n     * Handles a failed file access stats fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @param {string} code - error code\n     * @return {void}\n     */\n    fetchAccessStatsErrorCallback = (e: ElementsXhrError, code: string) => {\n        if (!this.props.hasAccessStats) {\n            return;\n        }\n\n        const isForbidden = getProp(e, 'status') === HTTP_STATUS_CODE_FORBIDDEN;\n        let accessStatsError;\n\n        if (isForbidden) {\n            accessStatsError = {\n                error: messages.fileAccessStatsPermissionsError,\n            };\n        } else {\n            accessStatsError = {\n                maskError: {\n                    errorHeader: messages.fileAccessStatsErrorHeaderMessage,\n                    errorSubHeader: messages.defaultErrorMaskSubHeaderMessage,\n                },\n            };\n        }\n\n        this.setState({\n            isLoadingAccessStats: false,\n            accessStats: undefined,\n            accessStatsError,\n        });\n\n        this.props.onError(e, code, {\n            e,\n            [IS_ERROR_DISPLAYED]: !isForbidden,\n        });\n    };\n\n    /**\n     * File access stats fetch success callback\n     *\n     * @private\n     * @param {Object} accessStats - access stats for a file\n     * @return {void}\n     */\n    fetchAccessStatsSuccessCallback = (accessStats: FileAccessStats): void => {\n        if (!this.props.hasAccessStats) {\n            return;\n        }\n\n        this.setState({\n            accessStats,\n            accessStatsError: undefined,\n            isLoadingAccessStats: false,\n        });\n    };\n\n    /**\n     * Fetches the access stats for a file\n     *\n     * @private\n     * @return {void}\n     */\n    fetchAccessStats(): void {\n        const { api, fileId }: Props = this.props;\n        const { isLoadingAccessStats } = this.state;\n\n        if (isLoadingAccessStats) {\n            return;\n        }\n\n        this.setState({ isLoadingAccessStats: true });\n        api.getFileAccessStatsAPI(false).getFileAccessStats(\n            fileId,\n            this.fetchAccessStatsSuccessCallback,\n            this.fetchAccessStatsErrorCallback,\n        );\n    }\n\n    refresh(): void {\n        this.fetchAccessStats();\n    }\n\n    render() {\n        const {\n            classification,\n            contentInsights,\n            elementId,\n            hasProperties,\n            hasNotices,\n            hasAccessStats,\n            hasClassification,\n            hasContentInsights,\n            hasRetentionPolicy,\n            hasVersions,\n            onAccessStatsClick,\n            onVersionHistoryClick,\n            onClassificationClick,\n            onContentInsightsClick,\n            onRetentionPolicyExtendClick,\n            retentionPolicy,\n        }: Props = this.props;\n\n        const { accessStats, accessStatsError, file, fileError, isLoadingAccessStats }: State = this.state;\n\n        // TODO: Add loading indicator and handle errors once file call is split out\n        return (\n            <SidebarContent\n                className=\"bcs-details\"\n                elementId={elementId}\n                sidebarView={SIDEBAR_VIEW_DETAILS}\n                title={<FormattedMessage {...messages.sidebarDetailsTitle} />}\n            >\n                {file && hasNotices && (\n                    <div className=\"bcs-DetailsSidebar-notices\">\n                        <SidebarNotices file={file} />\n                    </div>\n                )}\n                {file && hasClassification && (\n                    <SidebarClassification classification={classification} file={file} onEdit={onClassificationClick} />\n                )}\n                {file && hasAccessStats && (\n                    <SidebarAccessStats\n                        accessStats={accessStats}\n                        file={file}\n                        onAccessStatsClick={onAccessStatsClick}\n                        {...accessStatsError}\n                    />\n                )}\n                {file && hasContentInsights && (\n                    <SidebarContentInsights\n                        contentInsights={contentInsights}\n                        onContentInsightsClick={onContentInsightsClick}\n                    />\n                )}\n                {file && hasProperties && (\n                    <SidebarSection\n                        interactionTarget={SECTION_TARGETS.FILE_PROPERTIES}\n                        title={<FormattedMessage {...messages.sidebarProperties} />}\n                    >\n                        {hasVersions && <SidebarVersions file={file} onVersionHistoryClick={onVersionHistoryClick} />}\n                        <SidebarFileProperties\n                            file={file}\n                            onDescriptionChange={this.onDescriptionChange}\n                            {...fileError}\n                            hasRetentionPolicy={hasRetentionPolicy}\n                            isLoading={isLoadingAccessStats}\n                            onRetentionPolicyExtendClick={onRetentionPolicyExtendClick}\n                            retentionPolicy={retentionPolicy}\n                        />\n                    </SidebarSection>\n                )}\n            </SidebarContent>\n        );\n    }\n}\n\nexport type DetailsSidebarProps = ExternalProps;\nexport { DetailsSidebar as DetailsSidebarComponent };\nexport default flow([withLogger(ORIGIN_DETAILS_SIDEBAR), withErrorBoundary(ORIGIN_DETAILS_SIDEBAR), withAPIContext])(\n    DetailsSidebar,\n);\n"],"sourceRoot":""}