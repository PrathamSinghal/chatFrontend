{"version":3,"sources":["../../../src/utils/datetime.js","../../../../src/components/inline-error/InlineError.js","../../../../src/components/primary-button/PrimaryButton.tsx","../../../../src/components/inline-notice/InlineNotice.js","../../../../src/components/inline-notice/index.js","../../../../../src/elements/common/selectors/version.js","../../../../src/icons/general/IconOpenWith.tsx","../../../../src/components/primary-button/index.ts","../../../../src/icons/general/IconTrash.tsx","../../../../src/components/time/messages.js","../../../../src/components/time/ReadableTime.js","../../../../src/components/inline-error/index.js","../../../../../src/elements/content-sidebar/versions/messages.js","../../../src/utils/iframe.js","../../../src/illustration/BoxDrive140.tsx","../../../../src/icons/general/IconClockPast.tsx","../../../../src/icons/general/IconDownload.tsx","../../../../src/icons/general/IconUpload.tsx","../../../../../src/elements/content-sidebar/versions/VersionsItemAction.js","../../../../../src/elements/content-sidebar/versions/VersionsItemActions.js","../../../../../src/elements/content-sidebar/versions/VersionsItemButton.js","../../../../../src/elements/content-sidebar/versions/VersionsItemBadge.js","../../../../../src/elements/content-sidebar/versions/VersionsItemRetention.js","../../../../../src/elements/content-sidebar/versions/VersionsItem.js","../../../src/utils/size.js","../../../../../src/elements/content-sidebar/versions/VersionsList.js","../../../../../src/elements/content-sidebar/versions/VersionsGroup.js","../../../../../src/elements/content-sidebar/versions/VersionsMenu.js","../../../../../src/elements/content-sidebar/versions/StaticVersionSidebar.js","../../../../../src/elements/content-sidebar/versions/VersionsSidebar.js","../../../../../src/elements/content-sidebar/versions/VersionsSidebarAPI.js","../../../../../src/elements/content-sidebar/versions/VersionsSidebarContainer.js"],"names":["MILLISECONDS_PER_DAY","MILLISECONDS_PER_MINUTE","RE_ISO8601_DATE","ISO8601_DATETIME","ISO8601_MILLISECONDS","ISO8601_TIMEZONE","ISO8601_Z_FMT","ISO8601_SHORT_FMT","ISO8601_MEDIUM_FMT","ISO8601_LONG_FMT","convertToDate","dateValue","Date","isToday","toDateString","isYesterday","getTime","isCurrentMonth","getMonth","isCurrentYear","getFullYear","formatTime","seconds","h","Math","floor","m","s","hour","toString","sec","min","addTime","timeToAdd","convertDateToUnixMidnightTime","date","getTimezoneOffset","isValidDate","isNaN","convertISOStringToUTCDate","isoString","utcDate","test","parseDate","split","dateTime","milliseconds","timeZone","substr","convertISOStringtoRFC3339String","utcTime","timezoneOffsetInMins","InlineError","props","type","PrimaryButton","children","className","rest","InlineNotice","title","classNames","getVersionAction","restored_at","trashed_at","version_promoted","action","VERSION_UPLOAD_ACTION","VERSION_DELETE_ACTION","VERSION_RESTORE_ACTION","VERSION_PROMOTE_ACTION","getVersionUser","modified_by","restored_by","trashed_by","uploader_display_name","PLACEHOLDER_USER","name","id","IconOpenWith","color","bdlGray80","height","width","viewBox","fill","fillRule","d","IconTrash","messages","defineMessages","eventTime","eventTimeToday","eventTimeYesterday","eventTimeDate","eventTimeDateShort","eventTimeWeekdayLong","nonUppercaseLocales","injectIntl","intl","timestamp","relativeThreshold","ONE_HOUR_MS","allowFutureTimestamps","alwaysShowTime","showWeekday","uppercase","shouldUppercase","includes","locale","relativeIfNewerThanTs","now","shouldShowYear","output","dateMessage","weekday","formatDate","month","day","toLocaleUpperCase","values","time","formatMessage","timeDiff","abs","formatRelativeTime","formatRelative","fileRequestDisplayName","versionsEmpty","versionsPriorWeek","versionsThisMonth","versionsToday","versionsYesterday","versionsTitle","versionCurrent","versionActionDelete","versionActionDeleteError","versionActionDisabledRetention","versionActionDownload","versionActionDownloadError","versionActionPreview","versionActionPromote","versionActionPromoteError","versionActionRestore","versionActionRestoreError","versionActionToggle","versionDeletedBy","versionFetchError","versionNotAvailable","versionLimitExceeded","versionNumberBadge","versionNumberLabel","versionPromotedBy","versionRestoredBy","versionServerError","versionUpgradeLink","versionUploadedBy","versionUserUnknown","versionMaxEntries","versionRetentionDelete","versionRetentionIndefinite","versionRetentionRemove","versionUpsell","upgradeButton","openUrlInsideIframe","url","iframe","document","querySelector","createElement","setAttribute","style","display","body","appendChild","contentDocument","write","createDownloadIframe","src","BoxDrive140","AccessibleSVG","vars","transform","cx","cy","rx","ry","IconClockPast","x","y","stroke","strokeLinecap","strokeLinejoin","IconDownload","IconUpload","VersionsItemAction","fileId","isCurrent","handleMenuClose","event","stopPropagation","handleToggleClick","VersionsItemActions","isRetained","onDelete","onDownload","onPreview","onPromote","onRestore","showDelete","showDownload","showPreview","showPromote","showRestore","constrainToScrollParent","constrainToWindow","isRightAligned","onMenuClose","onClick","IconEllipsis","text","Tooltip","position","isTabbable","isDisabled","VersionsItemButton","buttonRef","isSelected","scrollIntoView","this","setScroll","prevIsSelected","buttonClassName","getDOMRef","setButtonRef","React","intlValues","versionNumber","RETENTION_MAP","VERSION_RETENTION_DELETE_ACTION","VERSION_RETENTION_REMOVE_ACTION","VersionsItemRetention","retention","dispositionAt","disposition_at","winning_retention_policy","dispositionAction","disposition_action","retentionLength","retention_length","dispositionAtTime","VERSION_RETENTION_INDEFINITE","ReadableTime","ACTION_MAP","FILE_EXTENSIONS_OFFICE","VersionsItem","isWatermarked","version","versionCount","versionLimit","createdAt","created_at","extension","versionId","is_download_available","permissions","restoredAt","size","trashedAt","version_number","versionPromoted","can_delete","can_download","can_preview","can_upload","retentionAppliedAt","applied_at","retentionDispositionAt","retentionDispositionAtDate","versionAction","selectors","versionInteger","parseInt","versionTime","versionTimestamp","versionUserName","versionDisplayName","FILE_REQUEST_NAME","isDeleted","isDownloadable","isLimited","isRestricted","canPreview","hasActions","handleAction","handler","exp","log","parseFloat","toFixed","sizeUtil","VersionsList","currentId","versions","map","key","render","match","params","VersionsGroup","heading","VersionsMenu","memo","versionGroups","reduce","groups","currentGroup","last","groupHeading","currentDate","currentDay","getDay","currentSunday","getDate","createdAtDate","util","year","getHeading","push","groupVersions","StaticVersionsSidebar","isLoading","onUpgradeClick","parentName","setDate","toUTCString","role","to","crawlerPosition","MAX_VERSIONS","DEFAULT_FETCH_END","VersionsSidebar","error","showLimit","length","showVersions","showEmpty","showError","SidebarContent","maxVersions","VersionsSidebarAPI","api","Promise","all","fetchFile","fetchVersions","then","fetchVersionCurrent","resolve","reject","getFileAPI","getDownloadUrl","Error","getFile","fields","FILE_VERSION_FIELDS_TO_FETCH","forceFetch","getVersionsAPI","getVersions","fileResponse","versionsResponse","file_version","getVersion","currentVersionResponse","addCurrentVersion","deleteVersion","successCallback","errorCallback","promoteVersion","restoreVersion","VersionsSidebarContainer","Infinity","window","setState","findVersion","fetchVersion","handleDeleteSuccess","onVersionDelete","catch","handleActionError","fetchDownloadUrl","onVersionDownload","updateVersion","onVersionPreview","fetchData","handleFetchSuccess","handlePromoteSuccess","onVersionPromote","handleRestoreSuccess","onVersionRestore","message","data","selectedVersionId","mergeResponse","updateVersionToCurrent","version_limit","getProp","undefined","versionsWithPermissions","addPermissions","entries","total_count","sortVersions","verifyVersion","fileVersion","handleFetchError","state","find","newVersion","newVersionId","merge","newVersions","mergeVersions","history","generatePath","path","getCurrentVersionId","onVersionChange","selectedVersion","currentVersionId","onLoad","initialize","component","feature","prevFileId","prevVersionId","refresh","sort","a","b","parse","handleActionDelete","handleActionDownload","handleActionPreview","handleActionPromote","handleActionRestore","Component","noop","flow","withRouter","withAPIContext"],"mappings":"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","file":"static/js/11.a0d02a9a.chunk.js","sourcesContent":["/**\n * @flow\n * @file Date and time utilities\n * @author Box\n */\nimport isNaN from 'lodash/isNaN';\n\nconst MILLISECONDS_PER_SECOND = 1000;\n// 24 hours * 60 minutes * 60 seconds * 1000 milliseconds\nconst MILLISECONDS_PER_DAY = 24 * 60 * 60 * MILLISECONDS_PER_SECOND;\n// 60 sec * 1000\nconst MILLISECONDS_PER_MINUTE = 60 * MILLISECONDS_PER_SECOND;\n\n/**\n * RegExp matcher for acceptable ISO 8601 date formats w/ timezone (see below)\n * Capture groups structured as follows:\n * 1) the date/time portion (2018-06-13T00:00:00.000)\n * 2) the milliseconds (if matched)\n * 3) the timezone portion (e.g., Z, +03, -0400, +05:00)\n * 4) the Z format for timezone (if matched)\n * 5) the short format for timezone (if matched)\n * 6) the colon-less format for timezone (if matched)\n * 7) the colon long format for timezone (if matched)\n */\nconst RE_ISO8601_DATE = /^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?)?((Z$)|(?:[+-](?:([0-2]\\d$)|([0-2]\\d(?:00|30)$)|([0-2]\\d:(?:00|30)$))))$/;\nconst ISO8601_DATETIME: 1 = 1;\nconst ISO8601_MILLISECONDS: 2 = 2;\nconst ISO8601_TIMEZONE: 3 = 3;\nconst ISO8601_Z_FMT: 4 = 4;\nconst ISO8601_SHORT_FMT: 5 = 5;\nconst ISO8601_MEDIUM_FMT: 6 = 6;\nconst ISO8601_LONG_FMT: 7 = 7;\n\n/**\n * Helper to normalize a date value to a date object\n * @param dateValue - Date number, string, or object\n * @returns {date} the normalized date object\n */\nfunction convertToDate(dateValue: number | string | Date): Date {\n    return dateValue instanceof Date ? dateValue : new Date(dateValue);\n}\n\n/**\n * Converts an integer value in seconds to milliseconds.\n * @param {number} seconds - The value in seconds\n * @returns {number} the value in milliseconds\n */\nfunction convertToMs(seconds: number): number {\n    return seconds * MILLISECONDS_PER_SECOND;\n}\n\n/**\n * Checks whether the given date value (in unix milliseconds) is today.\n * @param {number|string|Date} dateValue - Date object or integer representing the number of milliseconds since 1/1/1970 UTC\n * @returns {boolean} whether the given value is today\n */\nfunction isToday(dateValue: number | string | Date): boolean {\n    return new Date().toDateString() === convertToDate(dateValue).toDateString();\n}\n\n/**\n * Checks whether the given date value (in unix milliseconds) is yesterday.\n * @param {number|string|Date} dateValue - Date object or integer or representing the number of milliseconds since 1/1/1970 UTC\n * @returns {boolean} whether the given value is yesterday\n */\nfunction isYesterday(dateValue: number | string | Date): boolean {\n    return isToday(convertToDate(dateValue).getTime() + MILLISECONDS_PER_DAY);\n}\n\n/**\n * Checks whether the given date value (in unix milliseconds) is tomorrow.\n * @param {number|string|Date} dateValue - Date object or integer or representing the number of milliseconds since 1/1/1970 UTC\n * @returns {boolean} whether the given value is tomorrow\n */\nfunction isTomorrow(dateValue: number | string | Date): boolean {\n    return isToday(convertToDate(dateValue).getTime() - MILLISECONDS_PER_DAY);\n}\n\n/**\n * Checks whether the given date value (in unix milliseconds) is in the current month.\n * @param {number|string|Date} dateValue - Date object or integer representing the number of milliseconds since 1/1/1970 UTC\n * @returns {boolean} whether the given value is in the current month\n */\nfunction isCurrentMonth(dateValue: number | string | Date): boolean {\n    return new Date().getMonth() === convertToDate(dateValue).getMonth();\n}\n\n/**\n * Checks whether the given date value (in unix milliseconds) is in the current year.\n * @param {number|string|Date} dateValue - Date object or integer representing the number of milliseconds since 1/1/1970 UTC\n * @returns {boolean} whether the given value is in the current year\n */\nfunction isCurrentYear(dateValue: number | string | Date): boolean {\n    return new Date().getFullYear() === convertToDate(dateValue).getFullYear();\n}\n\n/**\n * Formats a number of seconds as a time string\n *\n * @param {number} seconds - seconds\n * @return {string} a string formatted like 3:57:35\n */\nfunction formatTime(seconds: number): string {\n    const h = Math.floor(seconds / 3600);\n    const m = Math.floor((seconds % 3600) / 60);\n    const s = Math.floor((seconds % 3600) % 60);\n    const hour = h > 0 ? `${h.toString()}:` : '';\n    const sec = s < 10 ? `0${s.toString()}` : s.toString();\n    let min = m.toString();\n    if (h > 0 && m < 10) {\n        min = `0${min}`;\n    }\n    return `${hour}${min}:${sec}`;\n}\n\n/**\n * Adds time to a given dateValue\n *\n * @param {number|Date} dateValue - date or integer value to add time to\n * @param {number} timeToAdd - amount of time to add in ms\n * @return {number|Date} the modified date or integer\n */\nfunction addTime(dateValue: number | Date, timeToAdd: number): number | Date {\n    if (dateValue instanceof Date) {\n        return new Date(dateValue.getTime() + timeToAdd);\n    }\n\n    return dateValue + timeToAdd;\n}\n\n/**\n * Will convert\n *      2018-06-13T07:00:00.000Z\n * to\n *      2018-06-13T00:00:00.000Z\n *\n * This is the opposite of convertISOStringToUTCDate\n *\n * @param {Date} date\n * @return {number}\n */\nfunction convertDateToUnixMidnightTime(date: Date) {\n    // date is localized to 00:00:00 at system/browser timezone\n    const utcUnixTimeInMs = date.getTime();\n\n    // timezone an integer offset; minutes behind GMT\n    // we use the browser timezone offset instead of the user's,\n    // because the datepicker uses the browser to get the \"midnight\"\n    // time in the user's timezone with getTime()\n    const timezoneOffsetInMins = date.getTimezoneOffset();\n    const timezoneOffsetInMs = timezoneOffsetInMins * MILLISECONDS_PER_MINUTE;\n\n    // we need the unix/epoch time for midnight on the date selected\n    const unixDayMidnightTime = utcUnixTimeInMs - timezoneOffsetInMs;\n    return unixDayMidnightTime;\n}\n\n/**\n * Will check to see if a date object is not valid, according to the browser\n * JS engine.\n *\n * @param {Date} date\n * @return {boolean} whether the date value passes validation\n */\nfunction isValidDate(date: Date): boolean {\n    return !isNaN(date.getTime());\n}\n\n/**\n * Will convert ISO8601-compatible dates (with zone designators)\n *      2018-06-13T00:00:00.000-0500\n *      or\n *      2018-06-13T00:00:00.000-05\n *\n * to\n *      2018-06-13T00:00:00.000-05:00\n *\n * Equivalent formats between the two (e.g., uzing 'Z') will remain unchanged.\n * If the date format cannot be converted, it will pass along the existing value\n * @param {string} isoString\n * @return {string} converted date format, if applicable\n */\nfunction convertISOStringtoRFC3339String(isoString: string): string {\n    // test that the date format inbound is ISO8601-compatible\n    if (RE_ISO8601_DATE.test(isoString)) {\n        // if it is, parse out the timezone part if it's in a longer format\n        // use the capture groups instead of the split result for the datetime and the time zone\n        const parseDate = isoString.split(RE_ISO8601_DATE);\n        let dateTime = parseDate[ISO8601_DATETIME];\n        const milliseconds = parseDate[ISO8601_MILLISECONDS];\n        const timeZone = parseDate[ISO8601_TIMEZONE];\n\n        // add milliseconds if missing, to standardize output\n        if (!milliseconds) {\n            dateTime += '.000';\n        }\n\n        if (parseDate[ISO8601_Z_FMT]) {\n            return isoString;\n        }\n\n        if (parseDate[ISO8601_SHORT_FMT]) {\n            return `${dateTime + timeZone}:00`;\n        }\n\n        if (parseDate[ISO8601_MEDIUM_FMT]) {\n            return `${dateTime + timeZone.substr(0, 3)}:${timeZone.substr(3)}`;\n        }\n\n        if (parseDate[ISO8601_LONG_FMT]) {\n            return isoString;\n        }\n    }\n    return isoString;\n}\n\n/**\n * Will convert\n *      2018-06-13T00:00:00.000Z\n * to\n *      2018-06-13T07:00:00.000Z\n *\n * This is the opposite of convertDateToUnixMidnightTime\n *\n * @param {string} isoString - ISO string in UTC time zone\n */\nfunction convertISOStringToUTCDate(isoString: string): Date {\n    // get date in UTC midnight time\n    const utcDate = new Date(convertISOStringtoRFC3339String(isoString));\n    const utcTime = utcDate.getTime();\n\n    // get browser's timezone\n    const timezoneOffsetInMins = utcDate.getTimezoneOffset();\n    const timezoneOffsetInMs = timezoneOffsetInMins * MILLISECONDS_PER_MINUTE;\n\n    // return date in utc timezone\n    const localizedUnixTimeInMs = utcTime + timezoneOffsetInMs;\n    return new Date(localizedUnixTimeInMs);\n}\n\nexport {\n    convertToDate,\n    convertToMs,\n    convertDateToUnixMidnightTime,\n    convertISOStringToUTCDate,\n    convertISOStringtoRFC3339String,\n    isToday,\n    isTomorrow,\n    isValidDate,\n    isYesterday,\n    isCurrentMonth,\n    isCurrentYear,\n    formatTime,\n    addTime,\n};\n","// @flow\nimport * as React from 'react';\nimport InlineNotice from '../inline-notice';\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n    /** Title of the inline error. */\n    title: React.Node,\n};\n\nconst InlineError = (props: Props) => <InlineNotice {...props} type=\"error\" />;\n\nexport default InlineError;\n","import * as React from 'react';\nimport Button, { ButtonProps } from '../button/Button';\n\nconst PrimaryButton = ({ children, className = '', ...rest }: Partial<ButtonProps>) => (\n    <Button className={`btn-primary ${className}`} {...rest}>\n        {children}\n    </Button>\n);\n\nexport default PrimaryButton;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nimport type { InlineNoticeType } from '../../common/types/core';\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n    title?: React.Node,\n    type?: InlineNoticeType,\n};\n\nconst InlineNotice = ({ children, className = '', title, type = 'warning', ...rest }: Props) => (\n    <div className={classNames(className, 'inline-alert', 'inline-alert-visible', `inline-alert-${type}`)} {...rest}>\n        {title ? <strong>{title}</strong> : null}\n        <div>{children}</div>\n    </div>\n);\n\nexport default InlineNotice;\n","// @flow\nexport { default } from './InlineNotice';\n","// @flow\nimport {\n    PLACEHOLDER_USER,\n    VERSION_DELETE_ACTION,\n    VERSION_PROMOTE_ACTION,\n    VERSION_RESTORE_ACTION,\n    VERSION_UPLOAD_ACTION,\n} from '../../../constants';\nimport type { BoxItemVersion, User } from '../../../common/types/core';\n\ntype VersionAction =\n    | typeof VERSION_DELETE_ACTION\n    | typeof VERSION_PROMOTE_ACTION\n    | typeof VERSION_RESTORE_ACTION\n    | typeof VERSION_UPLOAD_ACTION;\n\nconst getVersionAction = ({ restored_at, trashed_at, version_promoted }: $Shape<BoxItemVersion>): VersionAction => {\n    let action = VERSION_UPLOAD_ACTION;\n\n    if (trashed_at) {\n        action = VERSION_DELETE_ACTION;\n    }\n\n    if (restored_at) {\n        action = VERSION_RESTORE_ACTION;\n    }\n\n    if (version_promoted) {\n        action = VERSION_PROMOTE_ACTION;\n    }\n\n    return action;\n};\n\nconst getVersionUser = ({\n    modified_by,\n    restored_by,\n    trashed_by,\n    uploader_display_name,\n}: $Shape<BoxItemVersion>): User => {\n    const { name, id, ...rest } = restored_by || trashed_by || modified_by || PLACEHOLDER_USER;\n    const isAnonymous = id === PLACEHOLDER_USER.id;\n    return { ...rest, id, name: isAnonymous && uploader_display_name ? uploader_display_name : name };\n};\n\nexport default {\n    getVersionAction,\n    getVersionUser,\n};\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\nimport { bdlGray80 } from '../../styles/variables';\n\nimport { Icon } from '../iconTypes';\n\nconst IconOpenWith = ({ className = '', color = bdlGray80, height = 16, title, width = 16 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-open-with ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 16 16\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            fill={color}\n            fillRule=\"evenodd\"\n            d=\"M12 2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2zm0 1H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1zm-1 2v6h-1V6.71l-4.65 4.64-.7-.7L9.29 6H5V5h6z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconOpenWith;\n","export { default } from './PrimaryButton';\n","import * as React from 'react';\nimport { bdlGray80 } from '../../styles/variables';\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconTrash = ({ className = '', color = bdlGray80, height = 16, title, width = 16 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-trash ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 16 16\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            fill={color}\n            fillRule=\"evenodd\"\n            d=\"M14 2l-1.8 11c-.1.6-.7 1-1.2 1H5c-.6 0-1.1-.5-1.2-1L2 2h12zm-1.2 1H3.2l1.6 9.9s.1.1.2.1h6c.06 0 .12-.036.158-.065l.042-.035L12.8 3zm-2.3 1c.3 0 .5.2.5.5s-.2.5-.5.5h-5c-.3 0-.5-.2-.5-.5s.2-.5.5-.5z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconTrash;\n","// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    eventTime: {\n        defaultMessage: '{time, date, medium}',\n        description: 'The time that an event occurred',\n        id: 'boxui.readableTime.eventTime',\n    },\n    eventTimeToday: {\n        defaultMessage: 'Today at {time, time, short}',\n        description: 'The time that an event occurred today',\n        id: 'boxui.readableTime.eventTimeToday',\n    },\n    eventTimeYesterday: {\n        defaultMessage: 'Yesterday at {time, time, short}',\n        description: 'The time that an event occurred yesterday',\n        id: 'boxui.readableTime.eventTimeYesterday',\n    },\n    eventTimeDate: {\n        defaultMessage: '{time, date, medium} at {time, time, short}',\n        description: 'The time that an event occurred at a given date with the year included',\n        id: 'boxui.readableTime.eventTimeDate',\n    },\n    eventTimeDateShort: {\n        defaultMessage: '{date} at {time, time, short}',\n        description: 'The time that an event occurred at a given date without the year included',\n        id: 'boxui.readableTime.eventTimeDateShort',\n    },\n    eventTimeWeekdayLong: {\n        defaultMessage: '{weekday}, {time, date, medium}',\n        description: 'The time that an event occurred at a given date with the weekday included',\n        id: 'boxui.readableTime.eventTimeWeekdayLong',\n    },\n});\n\nexport default messages;\n","// @flow\n\nimport { injectIntl } from 'react-intl';\n\nimport { ONE_HOUR_MS } from '../../constants';\nimport { isToday, isYesterday, isCurrentYear } from '../../utils/datetime';\n\nimport messages from './messages';\n\ntype Props = {\n    /** A boolean that will cause future timestamps (usually due to incorrect computer time) to be corrected to the isToday message */\n    allowFutureTimestamps?: boolean,\n    /** A boolean that will include the time alongside the date, if the date is shown */\n    alwaysShowTime?: boolean,\n    /** intl object */\n    intl: any,\n    /** The number of milliseconds before now that a relative (vs. absolute) time should be displayed (Default: 1 hour) */\n    relativeThreshold?: number,\n    /** A boolean that will include the weekday alongside the date, if the date is shown */\n    showWeekday?: boolean,\n    /** The timestamp which should be used to display the date */\n    timestamp: number,\n    /** Whether to generate and make locale aware an uppercase version of the string */\n    uppercase?: boolean,\n};\n\n// exclude languages that do not have a grammar for uppercase (e.g. russian)\nconst nonUppercaseLocales = ['ru'];\nconst ReadableTime = ({\n    intl,\n    timestamp,\n    relativeThreshold = ONE_HOUR_MS,\n    allowFutureTimestamps = true,\n    alwaysShowTime = false,\n    showWeekday = false,\n    uppercase = false,\n}: Props): string => {\n    const shouldUppercase = uppercase && !nonUppercaseLocales.includes(intl.locale);\n    const relativeIfNewerThanTs = Date.now() - relativeThreshold;\n    const shouldShowYear = !isCurrentYear(timestamp);\n\n    if (!allowFutureTimestamps && timestamp > Date.now()) {\n        // TODO: what is the reasoning behind this rule?\n        timestamp = relativeIfNewerThanTs; // Default to 'Today' for timestamps that would show a future date\n    }\n\n    // e.g. Oct 5, 2018\n    let dateMessage = messages.eventTime;\n    let date = null;\n    let weekday = null;\n    let output;\n    if (isToday(timestamp)) {\n        // e.g. Today at 12:30 PM\n        dateMessage = messages.eventTimeToday;\n    } else if (isYesterday(timestamp)) {\n        // e.g. Yesterday at 11:30 AM\n        dateMessage = messages.eventTimeYesterday;\n    } else if (showWeekday) {\n        // e.g. Monday, Oct 5, 2018\n        dateMessage = messages.eventTimeWeekdayLong;\n        weekday = intl.formatDate(timestamp, { weekday: 'long' });\n    } else if (shouldShowYear && alwaysShowTime) {\n        // e.g. Oct 5, 2018 at 10:30 PM\n        dateMessage = messages.eventTimeDate;\n    } else if (!shouldShowYear && alwaysShowTime) {\n        // e.g. Oct 5 at 10:30 PM\n        dateMessage = messages.eventTimeDateShort;\n        date = intl.formatDate(timestamp, { month: 'short', day: 'numeric' });\n    } else if (!shouldShowYear && !alwaysShowTime) {\n        // e.g. Oct 5\n        output = intl.formatDate(timestamp, { month: 'short', day: 'numeric' });\n        return shouldUppercase ? output.toLocaleUpperCase(intl.locale) : output;\n    }\n    const values = { time: timestamp, date, weekday };\n    output = intl.formatMessage(dateMessage, values);\n\n    // if the time stamp is within +/- the relative threshold for the current time,\n    // print the default time format\n    const timeDiff = timestamp - Date.now();\n    if (Math.abs(timeDiff) <= relativeThreshold) {\n        if (intl.formatRelativeTime) {\n            // react-intl v3\n            output = intl.formatRelativeTime(timeDiff);\n        } else {\n            // react-intl v2\n            output = intl.formatRelative(timestamp);\n        }\n    }\n\n    return shouldUppercase ? output.toLocaleUpperCase(intl.locale) : output;\n};\n\nexport { ReadableTime as ReadableTimeComponent };\nexport default injectIntl(ReadableTime);\n","// @flow\nexport { default } from './InlineError';\n","// @flow strict\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    fileRequestDisplayName: {\n        defaultMessage: 'File Request',\n        description:\n            'name of the File Request feature used to translate when a File Request is uploaded by the service',\n        id: 'be.sidebarVersions.fileRequestDisplayName',\n    },\n    versionsEmpty: {\n        id: 'be.sidebarVersions.empty',\n        description: 'Message to display when no versions are available',\n        defaultMessage: 'No prior versions are available for this file.',\n    },\n    versionsPriorWeek: {\n        id: 'be.sidebarVersions.priorWeek',\n        description: 'Header to display for group of versions created in the prior week',\n        defaultMessage: 'Last Week',\n    },\n    versionsThisMonth: {\n        id: 'be.sidebarVersions.thisMonth',\n        description: 'Header to display for group of versions created in the current month',\n        defaultMessage: 'This Month',\n    },\n    versionsToday: {\n        id: 'be.sidebarVersions.today',\n        description: 'Header to display for group of versions created yesterday',\n        defaultMessage: 'Today',\n    },\n    versionsYesterday: {\n        id: 'be.sidebarVersions.yesterday',\n        description: 'Header to display for group of versions created today',\n        defaultMessage: 'Yesterday',\n    },\n    versionsTitle: {\n        id: 'be.sidebarVersions.title',\n        description: 'Title for the preview versions sidebar',\n        defaultMessage: 'Version History',\n    },\n    versionCurrent: {\n        id: 'be.sidebarVersions.current',\n        defaultMessage: 'Current Version',\n        description: 'Label for the current version item in the version history list.',\n    },\n    versionActionDelete: {\n        id: 'be.sidebarVersions.delete',\n        defaultMessage: 'Delete',\n        description: 'Label for the version delete action.',\n    },\n    versionActionDeleteError: {\n        id: 'be.sidebarVersions.deleteError',\n        defaultMessage: 'File version could not be deleted.',\n        description: 'Error message for the version delete action.',\n    },\n    versionActionDisabledRetention: {\n        id: 'be.sidebarVersions.disabledByRetention',\n        defaultMessage: 'Disabled by retention policy',\n        description: 'Tooltip message for actions disabled by retention policy.',\n    },\n    versionActionDownload: {\n        id: 'be.sidebarVersions.download',\n        defaultMessage: 'Download',\n        description: 'Label for the version download action.',\n    },\n    versionActionDownloadError: {\n        id: 'be.sidebarVersions.downloadError',\n        defaultMessage: 'File version could not be downloaded.',\n        description: 'Error message for the version download action.',\n    },\n    versionActionPreview: {\n        id: 'be.sidebarVersions.preview',\n        defaultMessage: 'Preview',\n        description: 'Label for the version preview action.',\n    },\n    versionActionPromote: {\n        id: 'be.sidebarVersions.promote',\n        defaultMessage: 'Make Current',\n        description: 'Label for the version promote action.',\n    },\n    versionActionPromoteError: {\n        id: 'be.sidebarVersions.promoteError',\n        defaultMessage: 'File version could not be made current.',\n        description: 'Error message for the version promote action.',\n    },\n    versionActionRestore: {\n        id: 'be.sidebarVersions.restore',\n        defaultMessage: 'Restore',\n        description: 'Label for the version restore action.',\n    },\n    versionActionRestoreError: {\n        id: 'be.sidebarVersions.restoreError',\n        defaultMessage: 'File version could not be restored.',\n        description: 'Error message for the version restored action.',\n    },\n    versionActionToggle: {\n        id: 'be.sidebarVersions.toggle',\n        defaultMessage: 'Toggle Actions Menu',\n        description: 'Label for the version actions dropdown menu toggle button.',\n    },\n    versionDeletedBy: {\n        id: 'be.sidebarVersions.deletedBy',\n        defaultMessage: 'Deleted by {name}',\n        description: 'Message displayed for a deleted version. {name} is the user who performed the action.',\n    },\n    versionFetchError: {\n        id: 'be.sidebarVersions.fetchError',\n        defaultMessage: 'File versions could not be retrieved.',\n        description: 'Error message for the versions fetch call.',\n    },\n    versionNotAvailable: {\n        id: 'be.sidebarVersions.notAvailable',\n        defaultMessage:\n            'Sorry, version history is not available with your current account plan. To access versioning, select from one of our paid plans.',\n        description:\n            'Error message with upsell for the versions fetch call for users who dont have the version feature.',\n    },\n    versionLimitExceeded: {\n        id: 'be.sidebarVersions.versionLimitExceeded',\n        defaultMessage:\n            'You are limited to the last {versionLimit, number} {versionLimit, plural, one {version} other {versions}}.',\n        description: \"Text displayed if a version exceeds the user's maximum allowed version count\",\n    },\n    versionNumberBadge: {\n        id: 'be.sidebarVersions.versionNumberBadge',\n        defaultMessage: 'V{versionNumber}',\n        description: 'Text to display in the version badge.',\n    },\n    versionNumberLabel: {\n        id: 'be.sidebarVersions.versionNumberLabel',\n        defaultMessage: 'Version number {versionNumber}',\n        description: 'Label given to the version badge for screen readers.',\n    },\n    versionPromotedBy: {\n        id: 'be.sidebarVersions.promotedBy',\n        defaultMessage: 'Promoted from v{versionPromoted} by {name}',\n        description: 'Message displayed for a restored version. {name} is the user who performed the action.',\n    },\n    versionRestoredBy: {\n        id: 'be.sidebarVersions.restoredBy',\n        defaultMessage: 'Restored by {name}',\n        description: 'Message displayed for a restored version. {name} is the user who performed the action.',\n    },\n    versionServerError: {\n        id: 'be.sidebarVersions.serverError',\n        defaultMessage: 'Server Error',\n        description: 'Heading for inline error messages displayed due to a remote server issue.',\n    },\n    versionUpgradeLink: {\n        id: 'be.sidebarVersions.upgradeLink',\n        defaultMessage: 'Upgrade Now',\n        description: 'Text on the upgrade button shown when user does not have access to Version History',\n    },\n    versionUploadedBy: {\n        id: 'be.sidebarVersions.uploadedBy',\n        defaultMessage: 'Uploaded by {name}',\n        description: 'Message displayed for an uploaded version. {name} is the user who performed the action.',\n    },\n    versionUserUnknown: {\n        id: 'be.sidebarVersions.versionUserUnknown',\n        defaultMessage: 'Unknown',\n        description: 'Name displayed for unknown or deleted users.',\n    },\n    versionMaxEntries: {\n        id: 'be.sidebarVersions.versionMaxEntries',\n        defaultMessage: 'Version history is limited to the last {maxVersions} entries.',\n        description: 'Max supported entries for version history',\n    },\n    versionRetentionDelete: {\n        id: 'be.sidebarVersions.versionRetentionDelete',\n        defaultMessage: 'Will be deleted {time} by retention policy.',\n        description: 'Message describing when the version will be deleted due to an applied retention policy.',\n    },\n    versionRetentionIndefinite: {\n        id: 'be.sidebarVersions.versionRetentionIndefinite',\n        defaultMessage: 'Retained indefinitely by retention policy.',\n        description: 'Message describing that the version retention policy is indefinite and will not expire.',\n    },\n    versionRetentionRemove: {\n        id: 'be.sidebarVersions.versionRetentionRemove',\n        defaultMessage: 'Retention policy expires on {time}.',\n        description: 'Message describing when the version retention policy will expire.',\n    },\n    versionUpsell: {\n        defaultMessage:\n            'Sorry, version history is not available with your current account plan. To access versioning, select from one of our paid plans.',\n        description: 'Upgrade message shown when user does not have access to Version History',\n        id: 'be.sidebarVersions.versionUpsell',\n    },\n    upgradeButton: {\n        defaultMessage: 'Upgrade',\n        description: 'Text on the upgrade button shown when user does not have access to Version History',\n        id: 'be.sidebarVersions.upgradeButton',\n    },\n});\n\nexport default messages;\n","/**\n * @flow\n * @file Function to create iframe and downloading\n * @author Box\n */\n\n/**\n * Creates an empty iframe or uses an existing one\n * for the purposes of downloading or printing\n *\n * @private\n * @return {HTMLIFrameElement} Iframe\n */\nfunction createDownloadIframe(): HTMLIFrameElement {\n    let iframe: HTMLIFrameElement = ((document.querySelector('#boxdownloadiframe'): any): HTMLIFrameElement);\n    if (!iframe) {\n        // if no existing iframe create a new one\n        iframe = document.createElement('iframe');\n        iframe.setAttribute('id', 'boxdownloadiframe');\n        iframe.style.display = 'none';\n        if (document.body) {\n            document.body.appendChild(iframe);\n        }\n    }\n\n    // If the iframe previously failed to load contentDocument will be null\n    if (iframe.contentDocument) {\n        // Clean the iframe up\n        iframe.contentDocument.write('<head></head><body></body>');\n    }\n    return iframe;\n}\n\n/**\n * Opens url in an iframe\n * Used for downloads\n *\n * @param {string} url - URL to open\n * @return {HTMLIFrameElement}\n */\nexport default function openUrlInsideIframe(url: string): HTMLIFrameElement {\n    const iframe: HTMLIFrameElement = createDownloadIframe();\n    iframe.src = url;\n    return iframe;\n}\n","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst BoxDrive140 = (props: SVGProps) => (\n    <AccessibleSVG width={140} height={140} viewBox=\"0 0 140 140\" {...props}>\n        <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n                fill={vars.white}\n                fillRule=\"nonzero\"\n                d=\"M74.512 19.775a4 4 0 014.842-2.637l14.986 4.015.218.065c.082.027.163.057.244.09l-1.287 4.8-.058.234a7 7 0 005.008 8.34l4.8 1.287a4 4 0 01-.096.476l-1.826 6.81L108.997 30l.104-.17a4 4 0 015.173-1.396l.187.102 13.436 7.757.193.12.108.072.105.077-2.486 4.304-.116.21a7 7 0 002.463 9.223l.216.13 4.304 2.485-.102.22-.115.214-13.757 23.829-.104.17a4 4 0 01-5.173 1.396l-.187-.102-.247-.143L113 60a6 6 0 00-5.775-5.996L107 54l-8.535-.002-2.418 9.024-.056.191a4 4 0 01-4.843 2.637L67.966 59.64l-.191-.057a4 4 0 01-2.637-4.842l9.317-34.774zm-55.64 12.544l2.485 4.304.124.207a7 7 0 009.439 2.356l4.041-2.334L39.556 54H33a6 6 0 00-6 6v18.399l-.174.095a4 4 0 01-5.29-1.56l-18-31.177-.095-.175a4 4 0 011.56-5.289l13.436-7.757.2-.108c.077-.039.156-.075.235-.11zm33.557-15.28l1.286 4.801.066.232a7 7 0 008.507 4.718l4.802-1.286a4 4 0 01.154.46l1.766 6.594L63.264 54H41.626l-7.488-27.95-.047-.193a4 4 0 012.875-4.705l14.986-4.016.22-.052c.086-.018.171-.033.257-.045z\"\n            />\n            <g transform=\"translate(1 15)\">\n                <ellipse cx={69} cy={104} fill={vars.bdlBoxBlue10} rx={60} ry={7} />\n                <path\n                    fill={vars.white}\n                    fillRule=\"nonzero\"\n                    d=\"M106 39a6 6 0 016 6v54h9a6 6 0 01-6 6H23a6 6 0 01-6-6h9V45a6 6 0 016-6h74z\"\n                />\n                <path\n                    fill={vars.bdlBoxBlue}\n                    fillRule=\"nonzero\"\n                    d=\"M78.872.206L93.858 4.22a6 6 0 013.643 2.796l5.863 10.155.522.943L106.265 14a6 6 0 018.196-2.196l13.436 7.757a6 6 0 012.796 3.643l3.106 11.592a6 6 0 01-.6 4.552l-13.757 23.829A6.001 6.001 0 01112 65.743L112 99h9a6 6 0 01-6 6H23a6 6 0 01-6-6h9l-.001-33.408-.235.079a6.002 6.002 0 01-6.96-2.737l-18-31.177a6 6 0 012.197-8.196l13.436-7.757a6 6 0 014.553-.6l11.591 3.106c.16.043.316.092.47.147l-1.845-6.889a6 6 0 014.243-7.348L50.435.204a6 6 0 014.553.6l10.392 6a6 6 0 012.795 3.643l.87 3.248 2.478-9.246A6 6 0 0178.872.206zM61.765 101L19.536 101l.01.019a3.999 3.999 0 003.254 1.976l.2.005h92a3.996 3.996 0 003.34-1.797l.123-.203H76.235c-.549.614-1.347 1-2.235 1H64a2.993 2.993 0 01-2.235-1zM106 41H32a4 4 0 00-3.995 3.8L28 45v54h82V45a4 4 0 00-3.8-3.995L106 41zm0 1a3 3 0 013 3v53H29V45a3 3 0 013-3h74zm0 2H32a1 1 0 00-.993.883L31 45v51h76V45a1 1 0 00-.883-.993L106 44zm5.999 19.5l.247.142a4 4 0 005.36-1.294l.104-.17 13.757-23.829a4 4 0 00.217-.434l-4.304-2.486a7 7 0 01-2.68-9.352l.117-.21 2.486-4.304a3.999 3.999 0 00-.213-.15l-.193-.119-13.436-7.757a4 4 0 00-5.36 1.294l-.104.17L94.14 39H106a6 6 0 016 6l-.001 18.5zM17.872 17.319c-.08.034-.158.07-.235.11l-.2.107-13.436 7.757a4 4 0 00-1.56 5.289l.096.175 18 31.177a4 4 0 005.289 1.56l.174-.095V45a6 6 0 016-6h6.556l-4.595-17.148-4.041 2.334a7 7 0 01-9.439-2.356l-.124-.207-2.485-4.304zM51.43 2.039a3.999 3.999 0 00-.256.045l-.22.052-14.987 4.016a4 4 0 00-2.875 4.705l.047.194L40.626 39h21.638l5.746-21.442-1.766-6.593a4 4 0 00-.154-.46l-4.802 1.285a7 7 0 01-8.507-4.718l-.066-.232-1.286-4.8zm77.188 21.249l-2.068 3.579a5 5 0 001.645 6.718l.186.112 3.58 2.068-.04-.23-.053-.22-3.106-11.592a4 4 0 00-.144-.435zM20.024 17.043l2.065 3.58a5 5 0 006.64 1.935l.19-.104 3.582-2.067-.22-.08-.217-.065-11.592-3.106a4 4 0 00-.448-.093zm75.494-9.41l-1.071 3.993a5 5 0 003.327 6.063l.208.06 3.994 1.072-.1-.212-.107-.2-6-10.392a4 4 0 00-.251-.383zM53.578 2.33l1.069 3.993A5 5 0 0060.56 9.91l.21-.052 3.995-1.07-.192-.133-.193-.12-10.392-6a4 4 0 00-.41-.205zm48.516 18.893l-.002-.001.151-.258-4.778-1.282-.237-.068a7 7 0 01-4.822-8.033l.05-.239.059-.233 1.287-4.801-.122-.047-.122-.043-.218-.065-14.986-4.015-.2-.049c-.2-.042-.401-.07-.6-.081L77.355 2a4.005 4.005 0 00-3.7 2.395l-.076.187-.067.193-.057.191L64.335 39h27.496l10.263-17.777z\"\n                />\n                <path\n                    fill={vars.bdlBoxBlue10}\n                    fillRule=\"nonzero\"\n                    d=\"M113.987 35.357l6.062 3.5-1 1.732-6.062-3.5 1-1.732zm2-3.464l6.062 3.5-1 1.732-6.062-3.5 1-1.732zm-6.33.964l2.598 1.5-1 1.732-2.598-1.5 1-1.732zm18.96-9.57a4 4 0 01.144.436l3.106 11.591.052.22.041.231-3.58-2.068-.186-.112a5 5 0 01-1.645-6.718zm-16.96 6.106l2.598 1.5-1 1.732-2.598-1.5 1-1.732z\"\n                />\n                <path\n                    fill={vars.bdlBoxBlue}\n                    d=\"M106.791 35.822a1 1 0 01-.366-1.367l4-6.928a1 1 0 011.366-.366l12.124 7a1 1 0 01.367 1.366l-4 6.928a1 1 0 01-1.262.419l-.105-.052-12.124-7zm12.258 4.767l1-1.732-6.062-3.5-1 1.732 6.062 3.5zm-6.794-6.232l-2.598-1.5-1 1.732 2.598 1.5 1-1.732zm8.794 2.768l1-1.732-6.062-3.5-1 1.732 6.062 3.5zm-6.794-6.232l-2.598-1.5-1 1.732 2.598 1.5 1-1.732zm-86.433-3.61a1 1 0 01-.367 1.367l2 3.464a1 1 0 111 1.732l-5.196 3 .5.866.866-.5a1 1 0 011 1.732l-3.464 2a1 1 0 01-1-1.732l.866-.5-.5-.866-5.196 3a1 1 0 11-1-1.732l-2-3.464a1 1 0 11-1-1.732l12.124-7a1 1 0 011.367.366zm-2.099 2.367l-8.66 5 2 3.464 8.66-5-2-3.464zm58.765-8.992l.055.117 1.432 3.569 1.452-.837a1 1 0 011.342.325l.059.106.046.115 2.311 6.83a1 1 0 01-1.096 1.31l-.11-.023-13.523-3.624a1 1 0 01-.503-1.614l.08-.083 6.9-6.433a1 1 0 011.555.242zm-21.913 5.078a1 1 0 01-.707 1.225l-13.523 3.624a1 1 0 01-.518-1.932l13.523-3.624a1 1 0 011.225.707zm20.655-2.864l-4.515 4.21 9.976 2.672-1.32-3.905-1.393.804a1 1 0 01-1.31-.278l-.067-.107-.051-.108-1.32-3.288zm-22.028-1.544a1 1 0 01-.707 1.225l-13.523 3.623a1 1 0 01-.517-1.932l13.523-3.623a1 1 0 011.224.707zM56.303 18.5a1 1 0 01-.707 1.224l-9.66 2.589a1 1 0 01-.517-1.932l9.66-2.589a1 1 0 011.224.708zm32.47-1.147a2 2 0 11-1.035 3.863 2 2 0 011.035-3.863z\"\n                />\n                <path\n                    fill={vars.bdlBoxBlue}\n                    fillRule=\"nonzero\"\n                    d=\"M95.518 7.634l-1.071 3.992a5 5 0 003.327 6.063l.208.06 3.994 1.072-.1-.212-.107-.2-6-10.392a4 4 0 00-.251-.383z\"\n                />\n                <path\n                    fill={vars.white}\n                    fillRule=\"nonzero\"\n                    d=\"M61.765 101c.549.614 1.347 1 2.235 1h10c.888 0 1.686-.386 2.235-1h42.228l-.124.203A3.996 3.996 0 01115 103H23l-.2-.005a3.999 3.999 0 01-3.254-1.976l-.01-.019zM106 41l.2.005a4 4 0 013.795 3.789L110 45v54H28V45l.005-.2a4 4 0 013.789-3.795L32 41h74zm0 1H32a3 3 0 00-2.995 2.824L29 45v53h80V45a3 3 0 00-2.824-2.995L106 42zm0 2l.117.007a1 1 0 01.876.876L107 45v51H31V45l.007-.117a1 1 0 01.876-.876L32 44h74zm0 1H32v50h74V45z\"\n                />\n                <path fill={vars.bdlBoxBlue05} d=\"M32 45h74v50H32z\" />\n                <path\n                    fill={vars.white}\n                    fillRule=\"nonzero\"\n                    d=\"M84.709 64A7.98 7.98 0 0082 70a7.98 7.98 0 002.71 6.001L48 76l-.225-.004A6 6 0 0148 64z\"\n                />\n                <path\n                    fill={vars.bdlBoxBlue}\n                    fillRule=\"nonzero\"\n                    d=\"M90 62a8 8 0 01.25 15.996L90 78H48a8 8 0 110-16h42zm-5.291 2H48a6 6 0 00-.225 11.996L48 76l36.71.001A7.98 7.98 0 0182 70a7.98 7.98 0 012.709-6zM49 66a1 1 0 011 1v6a1 1 0 01-2 0v-6a1 1 0 011-1z\"\n                />\n                <path\n                    fill={vars.bdlBoxBlue10}\n                    d=\"M89 66a3 3 0 012.708 4.293l2 2a1 1 0 01-1.32 1.497l-.095-.083-2-1.999A3 3 0 1189 66zm0 2a1 1 0 100 2 1 1 0 000-2z\"\n                />\n            </g>\n            <path\n                fill={vars.bdlBoxBlue10}\n                fillRule=\"nonzero\"\n                d=\"M26.723 44.65l2 3.464-8.66 5-2-3.464 8.66-5zm57.507-6.778l1.32 3.288.05.108.068.107a1 1 0 001.31.278l1.392-.804 1.321 3.905-9.976-2.673 4.515-4.209zm-63.206-5.829a4 4 0 01.448.093l11.592 3.106.217.065.22.08-3.581 2.067-.19.104a5 5 0 01-6.64-1.935zm75.494-9.41a4 4 0 01.251.384l6 10.392.108.2.099.212-3.994-1.071-.208-.06a5 5 0 01-3.327-6.064zm-41.94-5.303a4 4 0 01.41.206l10.392 6 .193.119.192.134-3.994 1.07-.211.05a5 5 0 01-5.913-3.586z\"\n            />\n        </g>\n    </AccessibleSVG>\n);\n\nexport default BoxDrive140;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconClockPast = ({ className = '', color = '#444', height = 14, title, width = 16 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-clock-past ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 16 14\"\n        width={width}\n    >\n        <g fill=\"none\" fillRule=\"evenodd\" transform=\"translate(0 1)\">\n            <rect className=\"fill-color\" fill={color} height=\"5\" rx=\".5\" width=\"1\" x=\"9.66\" y=\"3\" />\n            <rect className=\"fill-color\" fill={color} height=\"1\" rx=\".5\" width=\"3\" x=\"9.66\" y=\"7\" />\n            <path\n                className=\"stroke-color\"\n                d=\"M5.66 10.62C6.697 11.48 8.032 12 9.487 12c3.314 0 6-2.686 6-6s-2.686-6-6-6c-3.313 0-6 2.686-6 6\"\n                stroke={color}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n            <path className=\"fill-color\" d=\"M6.317 5l-2.83 2.828L.66 5\" fill={color} />\n        </g>\n    </AccessibleSVG>\n);\n\nexport default IconClockPast;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\nimport { bdlGray80 } from '../../styles/variables';\n\nimport { Icon } from '../iconTypes';\n\nconst IconDownload = ({ className = '', color = bdlGray80, height = 16, title, width = 16 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-download ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 16 16\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            fill={color}\n            fillRule=\"evenodd\"\n            d=\"M14 14v1H2v-1h12zM10.996 2v4.997H14L8 13 2 6.997h3.004V2h5.992zm-.998 1H6.002v4.996h-1.59L8 11.586l3.589-3.59H9.998V3z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconDownload;\n","import * as React from 'react';\nimport { bdlGray80 } from '../../styles/variables';\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconUpload = ({ className = '', color = bdlGray80, height = 16, title, width = 16 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-upload ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 16 16\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            fill={color}\n            fillRule=\"evenodd\"\n            d=\"M14 14v1H2v-1h12zM8 1l6 6.003h-3.004V12H5.004V7.003H2L8 1zm0 1.413l-3.589 3.59h1.591v4.998h3.996V6.004h1.59L8 2.414z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconUpload;\n","/**\n * @flow strict\n * @file Versions Item Action component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { MenuItem } from '../../../components/menu';\nimport './VersionsItemAction.scss';\n\ntype Props = {\n    action: string,\n    children: React.Node,\n    fileId: string,\n    isCurrent: boolean,\n};\n\nconst VersionsItemAction = ({ action, children, fileId, isCurrent, ...rest }: Props) => (\n    <MenuItem\n        className=\"bcs-VersionsItemAction\"\n        data-resin-iscurrent={isCurrent}\n        data-resin-itemid={fileId}\n        data-resin-target={action}\n        {...rest}\n    >\n        {children}\n    </MenuItem>\n);\n\nexport default VersionsItemAction;\n","/**\n * @flow\n * @file Versions Item Actions component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport DropdownMenu from '../../../components/dropdown-menu';\nimport IconClockPast from '../../../icons/general/IconClockPast';\nimport IconDownload from '../../../icons/general/IconDownload';\nimport IconEllipsis from '../../../icons/general/IconEllipsis';\nimport IconOpenWith from '../../../icons/general/IconOpenWith';\nimport IconTrash from '../../../icons/general/IconTrash';\nimport IconUpload from '../../../icons/general/IconUpload';\nimport messages from './messages';\nimport PlainButton from '../../../components/plain-button';\nimport Tooltip from '../../../components/tooltip/Tooltip';\nimport VersionsItemAction from './VersionsItemAction';\nimport { Menu } from '../../../components/menu';\nimport './VersionsItemActions.scss';\n\ntype Props = {\n    fileId: string,\n    isCurrent?: boolean,\n    isRetained?: boolean,\n    onDelete?: () => void,\n    onDownload?: () => void,\n    onPreview?: () => void,\n    onPromote?: () => void,\n    onRestore?: () => void,\n    showDelete?: boolean,\n    showDownload?: boolean,\n    showPreview?: boolean,\n    showPromote?: boolean,\n    showRestore?: boolean,\n};\n\nconst handleMenuClose = (event: SyntheticEvent<> | MouseEvent) => {\n    event.stopPropagation();\n};\n\nconst handleToggleClick = (event: SyntheticMouseEvent<HTMLButtonElement>) => {\n    event.stopPropagation();\n};\n\nconst VersionsItemActions = ({\n    fileId,\n    isCurrent = false,\n    isRetained = false,\n    onDelete,\n    onDownload,\n    onPreview,\n    onPromote,\n    onRestore,\n    showDelete = false,\n    showDownload = false,\n    showPreview = false,\n    showPromote = false,\n    showRestore = false,\n}: Props) => {\n    if (!showDelete && !showDownload && !showPreview && !showPromote && !showRestore) {\n        return null;\n    }\n\n    return (\n        <DropdownMenu\n            className=\"bcs-VersionsItemActions\"\n            constrainToScrollParent\n            constrainToWindow\n            isRightAligned\n            onMenuClose={handleMenuClose}\n        >\n            <PlainButton\n                className=\"bcs-VersionsItemActions-toggle\"\n                data-resin-iscurrent={isCurrent}\n                data-resin-itemid={fileId}\n                data-resin-target=\"overflow\"\n                onClick={handleToggleClick}\n                type=\"button\"\n            >\n                <IconEllipsis height={4} width={14} />\n                <FormattedMessage {...messages.versionActionToggle}>\n                    {(text: string) => <span className=\"accessibility-hidden\">{text}</span>}\n                </FormattedMessage>\n            </PlainButton>\n\n            <Menu\n                className=\"bcs-VersionsItemActions-menu\"\n                data-resin-component=\"preview\" // Needed for resin events due to tether moving menu to body\n                data-resin-feature=\"versions\" // Needed for resin events due to tether moving menu to body\n            >\n                {showPreview && (\n                    <VersionsItemAction action=\"preview\" fileId={fileId} isCurrent={isCurrent} onClick={onPreview}>\n                        <IconOpenWith />\n                        <FormattedMessage {...messages.versionActionPreview} />\n                    </VersionsItemAction>\n                )}\n\n                {showDownload && (\n                    <VersionsItemAction action=\"download\" fileId={fileId} isCurrent={isCurrent} onClick={onDownload}>\n                        <IconDownload />\n                        <FormattedMessage {...messages.versionActionDownload} />\n                    </VersionsItemAction>\n                )}\n                {showPromote && (\n                    <VersionsItemAction action=\"promote\" fileId={fileId} isCurrent={isCurrent} onClick={onPromote}>\n                        <IconUpload />\n                        <FormattedMessage {...messages.versionActionPromote} />\n                    </VersionsItemAction>\n                )}\n                {showRestore && (\n                    <VersionsItemAction action=\"restore\" fileId={fileId} isCurrent={isCurrent} onClick={onRestore}>\n                        <IconClockPast height={14} width={14} />\n                        <FormattedMessage {...messages.versionActionRestore} />\n                    </VersionsItemAction>\n                )}\n                {showDelete && (\n                    <Tooltip\n                        position=\"middle-left\"\n                        text={<FormattedMessage {...messages.versionActionDisabledRetention} />}\n                        isTabbable={false}\n                        isDisabled={!isRetained}\n                    >\n                        <VersionsItemAction\n                            action=\"remove\"\n                            fileId={fileId}\n                            isCurrent={isCurrent}\n                            isDisabled={isRetained}\n                            onClick={onDelete}\n                        >\n                            <IconTrash />\n                            <FormattedMessage {...messages.versionActionDelete} />\n                        </VersionsItemAction>\n                    </Tooltip>\n                )}\n            </Menu>\n        </DropdownMenu>\n    );\n};\n\nexport default VersionsItemActions;\n","/**\n * @flow\n * @file Versions Item Button component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport PlainButton from '../../../components/plain-button';\nimport { scrollIntoView } from '../../../utils/dom';\nimport './VersionsItemButton.scss';\n\ntype Props = {\n    children: React.Node,\n    fileId: string,\n    isCurrent: boolean,\n    isDisabled: boolean,\n    isSelected: boolean,\n    onClick: (event: SyntheticMouseEvent<HTMLButtonElement>) => void,\n};\n\nclass VersionsItemButton extends React.Component<Props> {\n    static defaultProps = {\n        isCurrent: false,\n        isDisabled: false,\n        isSelected: false,\n    };\n\n    buttonRef: ?HTMLButtonElement;\n\n    componentDidMount() {\n        this.setScroll();\n    }\n\n    componentDidUpdate({ isSelected: prevIsSelected }: Props) {\n        const { isSelected } = this.props;\n\n        if (isSelected !== prevIsSelected) {\n            this.setScroll();\n        }\n    }\n\n    setButtonRef = (buttonRef: ?HTMLButtonElement): void => {\n        this.buttonRef = buttonRef;\n    };\n\n    setScroll = () => {\n        const { isSelected } = this.props;\n\n        if (this.buttonRef && isSelected) {\n            scrollIntoView(this.buttonRef);\n        }\n    };\n\n    render() {\n        const { children, fileId, isCurrent, isDisabled, isSelected, onClick } = this.props;\n        const buttonClassName = classNames('bcs-VersionsItemButton', {\n            'bcs-is-disabled': isDisabled,\n            'bcs-is-selected': isSelected && !isDisabled,\n        });\n\n        return (\n            <PlainButton\n                aria-disabled={isDisabled}\n                className={buttonClassName}\n                data-resin-iscurrent={isCurrent}\n                data-resin-itemid={fileId}\n                data-resin-target=\"select\"\n                data-testid=\"versions-item-button\"\n                getDOMRef={this.setButtonRef}\n                isDisabled={isDisabled}\n                onClick={onClick}\n                type=\"button\"\n            >\n                {children}\n            </PlainButton>\n        );\n    }\n}\n\nexport default VersionsItemButton;\n","/**\n * @flow\n * @file Versions Item Badge component\n * @author Box\n */\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport messages from './messages';\nimport './VersionsItemBadge.scss';\n\ntype Props = {\n    intl: any,\n    versionNumber: string,\n};\n\nconst VersionsItemBadge = ({ intl, versionNumber }: Props) => {\n    const intlValues = { versionNumber };\n\n    return (\n        <div aria-label={intl.formatMessage(messages.versionNumberLabel, intlValues)} className=\"bcs-VersionsItemBadge\">\n            <FormattedMessage {...messages.versionNumberBadge} values={intlValues} />\n        </div>\n    );\n};\n\nexport default injectIntl(VersionsItemBadge);\n","/**\n * @flow strict\n * @file Versions Item Retention component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ReadableTime } from '../../../components/time';\nimport {\n    VERSION_RETENTION_DELETE_ACTION,\n    VERSION_RETENTION_REMOVE_ACTION,\n    VERSION_RETENTION_INDEFINITE,\n} from '../../../constants';\nimport messages from './messages';\nimport type { BoxItemVersionRetention } from '../../../common/types/core';\n\ntype Props = {\n    retention?: BoxItemVersionRetention,\n};\n\nconst RETENTION_MAP = {\n    [VERSION_RETENTION_DELETE_ACTION]: messages.versionRetentionDelete,\n    [VERSION_RETENTION_REMOVE_ACTION]: messages.versionRetentionRemove,\n};\n\nconst VersionsItemRetention = ({ retention }: Props) => {\n    const { disposition_at: dispositionAt, winning_retention_policy: retentionPolicy } = retention || {};\n    const { disposition_action: dispositionAction, retention_length: retentionLength } = retentionPolicy || {};\n    const dispositionAtTime = dispositionAt && new Date(dispositionAt).getTime();\n\n    if (!dispositionAction) {\n        return null;\n    }\n\n    return retentionLength === VERSION_RETENTION_INDEFINITE || !dispositionAtTime ? (\n        <FormattedMessage {...messages.versionRetentionIndefinite} />\n    ) : (\n        <FormattedMessage\n            {...RETENTION_MAP[dispositionAction]}\n            values={{\n                time: <ReadableTime timestamp={dispositionAtTime} showWeekday />,\n            }}\n        />\n    );\n};\n\nexport default VersionsItemRetention;\n","/**\n * @flow\n * @file Versions Item component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from './messages';\nimport selectors from '../../common/selectors/version';\nimport sizeUtil from '../../../utils/size';\nimport VersionsItemActions from './VersionsItemActions';\nimport VersionsItemButton from './VersionsItemButton';\nimport VersionsItemBadge from './VersionsItemBadge';\nimport VersionsItemRetention from './VersionsItemRetention';\nimport { ReadableTime } from '../../../components/time';\nimport {\n    FILE_REQUEST_NAME,\n    VERSION_DELETE_ACTION,\n    VERSION_PROMOTE_ACTION,\n    VERSION_RESTORE_ACTION,\n    VERSION_UPLOAD_ACTION,\n} from '../../../constants';\nimport type { BoxItemVersion } from '../../../common/types/core';\nimport type { VersionActionCallback } from './flowTypes';\nimport './VersionsItem.scss';\n\ntype Props = {\n    fileId: string,\n    isCurrent?: boolean,\n    isSelected?: boolean,\n    isWatermarked?: boolean,\n    onDelete?: VersionActionCallback,\n    onDownload?: VersionActionCallback,\n    onPreview?: VersionActionCallback,\n    onPromote?: VersionActionCallback,\n    onRestore?: VersionActionCallback,\n    version: BoxItemVersion,\n    versionCount: number,\n    versionLimit: number,\n};\n\nconst ACTION_MAP = {\n    [VERSION_DELETE_ACTION]: messages.versionDeletedBy,\n    [VERSION_RESTORE_ACTION]: messages.versionRestoredBy,\n    [VERSION_PROMOTE_ACTION]: messages.versionPromotedBy,\n    [VERSION_UPLOAD_ACTION]: messages.versionUploadedBy,\n};\nconst FILE_EXTENSIONS_OFFICE = ['xlsb', 'xlsm', 'xlsx'];\nconst FIVE_MINUTES_MS = 5 * 60 * 1000;\n\nconst VersionsItem = ({\n    fileId,\n    isCurrent = false,\n    isSelected = false,\n    isWatermarked = false,\n    onDelete,\n    onDownload,\n    onPreview,\n    onPromote,\n    onRestore,\n    version,\n    versionCount,\n    versionLimit,\n}: Props) => {\n    const {\n        created_at: createdAt,\n        extension,\n        id: versionId,\n        is_download_available,\n        permissions = {},\n        restored_at: restoredAt,\n        retention,\n        size,\n        trashed_at: trashedAt,\n        version_number: versionNumber,\n        version_promoted: versionPromoted,\n    } = version;\n    const { can_delete, can_download, can_preview, can_upload } = permissions;\n    const { applied_at: retentionAppliedAt, disposition_at: retentionDispositionAt } = retention || {};\n    const retentionDispositionAtDate = retentionDispositionAt && new Date(retentionDispositionAt);\n\n    // Version info helpers\n    const versionAction = selectors.getVersionAction(version);\n    const versionInteger = versionNumber ? parseInt(versionNumber, 10) : 1;\n    const versionTime = restoredAt || trashedAt || createdAt;\n    const versionTimestamp = versionTime && new Date(versionTime).getTime();\n    const versionUserName = selectors.getVersionUser(version).name || (\n        <FormattedMessage {...messages.versionUserUnknown} />\n    );\n    const versionDisplayName =\n        versionUserName !== FILE_REQUEST_NAME ? (\n            versionUserName\n        ) : (\n            <FormattedMessage {...messages.fileRequestDisplayName} />\n        );\n    // Version state helpers\n    const isDeleted = versionAction === VERSION_DELETE_ACTION;\n    const isDownloadable = !!is_download_available;\n    const isLimited = versionCount - versionInteger >= versionLimit;\n    const isOffice = FILE_EXTENSIONS_OFFICE.includes(extension);\n    const isRestricted = (isOffice || isWatermarked) && !isCurrent;\n    const isRetained = !!retentionAppliedAt && (!retentionDispositionAtDate || retentionDispositionAtDate > new Date());\n\n    // Version action helpers\n    const canPreview = can_preview && !isDeleted && !isLimited && !isRestricted;\n    const showDelete = can_delete && !isDeleted && !isCurrent;\n    const showDownload = can_download && !isDeleted && isDownloadable;\n    const showPromote = can_upload && !isDeleted && !isCurrent;\n    const showRestore = can_delete && isDeleted;\n    const showPreview = canPreview && !isSelected;\n    const hasActions = showDelete || showDownload || showPreview || showPromote || showRestore;\n\n    // Version action callback helper\n    const handleAction = (handler?: VersionActionCallback) => (): void => {\n        if (handler) {\n            handler(versionId);\n        }\n    };\n\n    return (\n        <div className=\"bcs-VersionsItem\">\n            <VersionsItemButton\n                fileId={fileId}\n                isCurrent={isCurrent}\n                isDisabled={!canPreview}\n                isSelected={isSelected}\n                onClick={handleAction(onPreview)}\n            >\n                <div className=\"bcs-VersionsItem-badge\">\n                    <VersionsItemBadge versionNumber={versionNumber} />\n                </div>\n\n                <div className=\"bcs-VersionsItem-details\">\n                    {isCurrent && (\n                        <div className=\"bcs-VersionsItem-current\">\n                            <FormattedMessage {...messages.versionCurrent} />\n                        </div>\n                    )}\n\n                    <div className=\"bcs-VersionsItem-log\" data-testid=\"bcs-VersionsItem-log\" title={versionDisplayName}>\n                        <FormattedMessage\n                            {...ACTION_MAP[versionAction]}\n                            values={{ name: versionDisplayName, versionPromoted }}\n                        />\n                    </div>\n\n                    <div className=\"bcs-VersionsItem-info\">\n                        {versionTimestamp && (\n                            <time className=\"bcs-VersionsItem-date\" dateTime={versionTime}>\n                                <ReadableTime\n                                    alwaysShowTime\n                                    relativeThreshold={FIVE_MINUTES_MS}\n                                    timestamp={versionTimestamp}\n                                />\n                            </time>\n                        )}\n                        {!!size && <span className=\"bcs-VersionsItem-size\">{sizeUtil(size)}</span>}\n                    </div>\n\n                    {isRetained && (\n                        <div className=\"bcs-VersionsItem-retention\">\n                            <VersionsItemRetention retention={retention} />\n                        </div>\n                    )}\n\n                    {isLimited && hasActions && (\n                        <div className=\"bcs-VersionsItem-footer\">\n                            <FormattedMessage {...messages.versionLimitExceeded} values={{ versionLimit }} />\n                        </div>\n                    )}\n                </div>\n            </VersionsItemButton>\n\n            {!isLimited && hasActions && (\n                <VersionsItemActions\n                    fileId={fileId}\n                    isCurrent={isCurrent}\n                    isRetained={isRetained}\n                    onDelete={handleAction(onDelete)}\n                    onDownload={handleAction(onDownload)}\n                    onPreview={handleAction(onPreview)}\n                    onPromote={handleAction(onPromote)}\n                    onRestore={handleAction(onRestore)}\n                    showDelete={showDelete}\n                    showDownload={showDownload}\n                    showPreview={showPreview}\n                    showPromote={showPromote}\n                    showRestore={showRestore}\n                />\n            )}\n        </div>\n    );\n};\nexport default VersionsItem;\n","/**\n * @flow\n * @file Function to create size in words out of number\n * @author Box\n */\n\n/**\n * Gets the size in words\n *\n * @param {number} size in bytes\n * @return {string} size in words\n */\nexport default function(size?: number): string {\n    if (!size) return '0 Byte';\n    const kilo: number = 1024;\n    const decimals: number = 2;\n    const sizes: string[] = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n    const exp: number = Math.floor(Math.log(size) / Math.log(kilo));\n    return `${parseFloat((size / kilo ** exp).toFixed(decimals))} ${sizes[exp]}`;\n}\n","/**\n * @flow\n * @file Versions List component\n * @author Box\n */\n\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport VersionsItem from './VersionsItem';\nimport type { BoxItemVersion } from '../../../common/types/core';\nimport './VersionsList.scss';\n\ntype Props = {\n    currentId?: string,\n    fileId: string,\n    versionCount: number,\n    versionLimit: number,\n    versions: Array<BoxItemVersion>,\n};\n\nconst VersionsList = ({ currentId, versions, ...rest }: Props) => (\n    <ul className=\"bcs-VersionsList\">\n        {versions.map(version => (\n            <li className=\"bcs-VersionsList-item\" key={version.id}>\n                <Route\n                    render={({ match }) => (\n                        <VersionsItem\n                            isCurrent={currentId === version.id}\n                            isSelected={match.params.versionId === version.id}\n                            version={version}\n                            {...rest}\n                        />\n                    )}\n                />\n            </li>\n        ))}\n    </ul>\n);\n\nexport default VersionsList;\n","/**\n * @flow\n * @file Versions Group component\n * @author Box\n */\n\nimport React from 'react';\nimport VersionsList from './VersionsList';\nimport type { BoxItemVersion } from '../../../common/types/core';\nimport './VersionsGroup.scss';\n\ntype Props = {\n    fileId: string,\n    heading: string,\n    versionCount: number,\n    versionLimit: number,\n    versions: Array<BoxItemVersion>,\n};\n\nconst VersionsGroup = ({ heading, ...rest }: Props) => {\n    return (\n        <section className=\"bcs-VersionsGroup\">\n            <h4 className=\"bcs-VersionsGroup-heading\">{heading}</h4>\n            <VersionsList {...rest} />\n        </section>\n    );\n};\n\nexport default VersionsGroup;\n","/**\n * @flow\n * @file Versions Menu component\n * @author Box\n */\n\nimport React from 'react';\nimport last from 'lodash/last';\nimport { injectIntl } from 'react-intl';\nimport * as util from '../../../utils/datetime';\nimport messages from './messages';\nimport VersionsGroup from './VersionsGroup';\nimport type { BoxItemVersion } from '../../../common/types/core';\nimport './VersionsMenu.scss';\n\ntype Props = {\n    fileId: string,\n    intl: any,\n    versionCount: number,\n    versionLimit: number,\n    versions: Array<BoxItemVersion>,\n};\n\ntype VersionGroups = Array<{ groupHeading: string, groupVersions: Array<BoxItemVersion> }>;\n\nconst getHeading = ({ intl, version }: { intl: any, version: BoxItemVersion }): string => {\n    const { created_at: createdAt } = version;\n    const currentDate = new Date();\n    const currentDay = currentDate.getDay();\n    const currentSunday = currentDate.getDate() - currentDay;\n    const createdAtDate = util.convertToDate(createdAt);\n    let heading;\n\n    if (util.isToday(createdAtDate)) {\n        heading = intl.formatMessage(messages.versionsToday); // Today\n    } else if (util.isYesterday(createdAtDate)) {\n        heading = intl.formatMessage(messages.versionsYesterday); // Yesterday\n    } else if (!util.isCurrentYear(createdAtDate)) {\n        heading = intl.formatDate(createdAt, { year: 'numeric' }); // 2018\n    } else if (!util.isCurrentMonth(createdAtDate)) {\n        heading = intl.formatDate(createdAt, { month: 'long' }); // January\n    } else if (createdAtDate.getDate() <= currentSunday - 7) {\n        heading = intl.formatMessage(messages.versionsThisMonth); // This Month\n    } else if (createdAtDate.getDate() <= currentSunday) {\n        heading = intl.formatMessage(messages.versionsPriorWeek); // Last Week\n    } else {\n        heading = intl.formatDate(createdAt, { weekday: 'long' }); // Monday\n    }\n\n    return heading;\n};\n\nconst VersionsMenu = React.memo<Props>(({ intl, versions, ...rest }: Props) => {\n    const { id: currentId } = versions[0] || {};\n\n    // Build an ordered set of groups with headings based on the original order of the versions array\n    const versionGroups = versions.reduce((groups: VersionGroups, version: BoxItemVersion): VersionGroups => {\n        const currentGroup = last(groups);\n        const groupHeading = getHeading({ intl, version });\n\n        // Push a new group if there are no groups or if the heading has changed\n        if (!currentGroup || currentGroup.groupHeading !== groupHeading) {\n            groups.push({\n                groupHeading,\n                groupVersions: [],\n            });\n        }\n\n        // Push the sorted version to the newest group's versions collection\n        last(groups).groupVersions.push(version);\n        return groups;\n    }, []);\n\n    return (\n        <ul className=\"bcs-VersionsMenu\">\n            {versionGroups.map(({ groupHeading, groupVersions }) => (\n                <li className=\"bcs-VersionsMenu-item\" key={groupHeading}>\n                    <VersionsGroup currentId={currentId} heading={groupHeading} versions={groupVersions} {...rest} />\n                </li>\n            ))}\n        </ul>\n    );\n});\n\nexport default injectIntl(VersionsMenu);\n","/**\n * @flow\n * @file Static Versions Sidebar component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport BoxDrive140 from '../../../illustration/BoxDrive140';\n\nimport { BackButton } from '../../common/nav-button';\nimport PrimaryButton from '../../../components/primary-button';\nimport { LoadingIndicatorWrapper } from '../../../components/loading-indicator';\nimport VersionsMenu from './VersionsMenu';\n\nimport messages from './messages';\n\nimport './StaticVersionsSidebar.scss';\n\ntype Props = {\n    isLoading: boolean,\n    onUpgradeClick: () => void,\n    parentName: string,\n};\n\nconst StaticVersionsSidebar = ({ isLoading, onUpgradeClick, parentName }: Props): React.Node => {\n    const versionTimestamp = new Date();\n    versionTimestamp.setDate(versionTimestamp.getDate() - 1);\n\n    const versions = ['1', '2', '3'].map(versionNumber => {\n        return {\n            id: versionNumber,\n            version_number: versionNumber,\n            type: 'file_version',\n            permissions: {\n                can_preview: true,\n            },\n            created_at: versionTimestamp.toUTCString(),\n            modified_by: null,\n            size: 1875887,\n            trashed_at: null,\n            uploader_display_name: 'John Doe',\n        };\n    });\n\n    return (\n        <div\n            className=\"bcs-StaticVersionSidebar\"\n            role=\"tabpanel\"\n            data-resin-component=\"preview\"\n            data-resin-feature=\"versions\"\n        >\n            <div className=\"bcs-StaticVersionSidebar-header\">\n                <h3 className=\"bcs-StaticVersionSidebar-title\">\n                    <>\n                        <BackButton data-resin-target=\"back\" to={`/${parentName}`} />\n                        <FormattedMessage {...messages.versionsTitle} />\n                    </>\n                </h3>\n            </div>\n\n            <div className=\"bcs-StaticVersionSidebar-content-wrapper\">\n                <LoadingIndicatorWrapper\n                    className=\"bcs-StaticVersionSidebar-content\"\n                    crawlerPosition=\"top\"\n                    isLoading={isLoading}\n                >\n                    <VersionsMenu versions={versions} fileId=\"1\" versionCount={3} versionLimit={3} />\n                </LoadingIndicatorWrapper>\n            </div>\n\n            <div className=\"bcs-StaticVersionSidebar-upsell-wrapper\">\n                <div className=\"bcs-StaticVersionSidebar-upsell\">\n                    <BoxDrive140 className=\"bcs-StaticVersionSidebar-upsell-icon\" />\n                    <p className=\"bcs-StaticVersionSidebar-upsell-header\">\n                        <FormattedMessage {...messages.versionUpgradeLink} />\n                    </p>\n                    <p>\n                        <FormattedMessage {...messages.versionUpsell} />\n                    </p>\n                    <PrimaryButton\n                        className=\"bcs-StaticVersionSidebar-upsell-button\"\n                        data-resin-target=\"versioning_error_upgrade_cta\"\n                        onClick={onUpgradeClick}\n                        type=\"button\"\n                    >\n                        <FormattedMessage {...messages.upgradeButton} />\n                    </PrimaryButton>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default StaticVersionsSidebar;\n","/**\n * @flow\n * @file Versions Sidebar component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport type { MessageDescriptor } from 'react-intl';\nimport InlineError from '../../../components/inline-error';\nimport messages from './messages';\nimport SidebarContent from '../SidebarContent';\nimport VersionsMenu from './VersionsMenu';\nimport { BackButton } from '../../common/nav-button';\nimport { DEFAULT_FETCH_END } from '../../../constants';\nimport { LoadingIndicatorWrapper } from '../../../components/loading-indicator';\nimport type { BoxItemVersion } from '../../../common/types/core';\nimport './VersionsSidebar.scss';\n\nconst MAX_VERSIONS = DEFAULT_FETCH_END;\n\ntype Props = {\n    error?: MessageDescriptor,\n    fileId: string,\n    isLoading: boolean,\n    parentName: string,\n    versionCount: number,\n    versionLimit: number,\n    versions: Array<BoxItemVersion>,\n};\n\nconst VersionsSidebar = ({ error, isLoading, parentName, versions, ...rest }: Props) => {\n    const showLimit = versions.length >= MAX_VERSIONS;\n    const showVersions = !!versions.length;\n    const showEmpty = !isLoading && !showVersions;\n    const showError = !!error;\n\n    return (\n        <SidebarContent\n            className=\"bcs-Versions\"\n            data-resin-component=\"preview\"\n            data-resin-feature=\"versions\"\n            title={\n                <>\n                    <BackButton data-resin-target=\"back\" to={`/${parentName}`} />\n                    <FormattedMessage {...messages.versionsTitle} />\n                </>\n            }\n        >\n            <LoadingIndicatorWrapper className=\"bcs-Versions-content\" crawlerPosition=\"top\" isLoading={isLoading}>\n                {showError && (\n                    <InlineError title={<FormattedMessage {...messages.versionServerError} />}>\n                        <FormattedMessage {...error} />\n                    </InlineError>\n                )}\n\n                {showEmpty && (\n                    <div className=\"bcs-Versions-empty\">\n                        <FormattedMessage {...messages.versionsEmpty} />\n                    </div>\n                )}\n\n                {showVersions && (\n                    <div className=\"bcs-Versions-menu\">\n                        <VersionsMenu versions={versions} {...rest} />\n                    </div>\n                )}\n                {showLimit && (\n                    <div className=\"bcs-Versions-maxEntries\" data-testid=\"max-versions\">\n                        <FormattedMessage\n                            {...messages.versionMaxEntries}\n                            values={{\n                                maxVersions: MAX_VERSIONS,\n                            }}\n                        />\n                    </div>\n                )}\n            </LoadingIndicatorWrapper>\n        </SidebarContent>\n    );\n};\n\nexport default VersionsSidebar;\n","/**\n * @flow\n * @file Versions Sidebar API Helper\n * @author Box\n */\nimport API from '../../../api';\nimport { FILE_VERSION_FIELDS_TO_FETCH } from '../../../utils/fields';\nimport type { BoxItem, FileVersions, BoxItemVersion } from '../../../common/types/core';\n\nexport type fetchPayload = [BoxItem, FileVersions];\n\nexport default class VersionsSidebarAPI {\n    api: API;\n\n    fileId: string;\n\n    constructor({ api, fileId }: { api: API, fileId: string }) {\n        this.api = api;\n        this.fileId = fileId;\n    }\n\n    fetchData = (): Promise<fetchPayload> => {\n        return Promise.all([this.fetchFile(), this.fetchVersions()]).then(this.fetchVersionCurrent);\n    };\n\n    fetchDownloadUrl = (version: ?BoxItemVersion): Promise<string> => {\n        return new Promise((resolve, reject) => {\n            if (!version) {\n                return reject(new Error('Could not find requested version'));\n            }\n\n            return this.api.getFileAPI().getDownloadUrl(this.fileId, version, resolve, reject);\n        });\n    };\n\n    fetchFile = (): Promise<BoxItem> => {\n        return new Promise((resolve, reject) =>\n            this.api.getFileAPI().getFile(this.fileId, resolve, reject, {\n                fields: FILE_VERSION_FIELDS_TO_FETCH,\n                forceFetch: true,\n            }),\n        );\n    };\n\n    fetchVersions = (): Promise<FileVersions> => {\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).getVersions(this.fileId, resolve, reject),\n        );\n    };\n\n    fetchVersionCurrent = ([fileResponse, versionsResponse]: fetchPayload): Promise<fetchPayload> => {\n        const { file_version = {} } = fileResponse;\n\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).getVersion(\n                this.fileId,\n                file_version.id,\n                (currentVersionResponse: BoxItemVersion) => {\n                    resolve([\n                        fileResponse,\n                        this.api\n                            .getVersionsAPI(false)\n                            .addCurrentVersion(currentVersionResponse, versionsResponse, fileResponse),\n                    ]);\n                },\n                reject,\n            ),\n        );\n    };\n\n    fetchVersion = (versionId: string): Promise<BoxItemVersion> => {\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).getVersion(this.fileId, versionId, resolve, reject),\n        );\n    };\n\n    deleteVersion = (version: ?BoxItemVersion): Promise<null> => {\n        const { id: versionId, permissions = {} } = version || {};\n\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).deleteVersion({\n                fileId: this.fileId,\n                permissions,\n                successCallback: resolve,\n                errorCallback: reject,\n                versionId,\n            }),\n        );\n    };\n\n    promoteVersion = (version: ?BoxItemVersion): Promise<BoxItemVersion> => {\n        const { id: versionId, permissions = {} } = version || {};\n\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).promoteVersion({\n                fileId: this.fileId,\n                permissions,\n                successCallback: resolve,\n                errorCallback: reject,\n                versionId,\n            }),\n        );\n    };\n\n    restoreVersion = (version: ?BoxItemVersion): Promise<any> => {\n        const { id: versionId, permissions = {} } = version || {};\n\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).restoreVersion({\n                fileId: this.fileId,\n                permissions,\n                successCallback: resolve,\n                errorCallback: reject,\n                versionId,\n            }),\n        );\n    };\n}\n","/**\n * @flow\n * @file Versions Sidebar container\n * @author Box\n */\n\nimport React from 'react';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport merge from 'lodash/merge';\nimport noop from 'lodash/noop';\nimport { generatePath, withRouter } from 'react-router-dom';\nimport type { Match, RouterHistory } from 'react-router-dom';\nimport type { MessageDescriptor } from 'react-intl';\nimport API from '../../../api';\nimport messages from './messages';\nimport openUrlInsideIframe from '../../../utils/iframe';\nimport StaticVersionsSidebar from './StaticVersionSidebar';\nimport VersionsSidebar from './VersionsSidebar';\nimport VersionsSidebarAPI from './VersionsSidebarAPI';\nimport { withAPIContext } from '../../common/api-context';\nimport type { VersionActionCallback, VersionChangeCallback, SidebarLoadCallback } from './flowTypes';\nimport type { BoxItemVersion, BoxItem, FileVersions } from '../../../common/types/core';\n\ntype Props = {\n    api: API,\n    fileId: string,\n    hasSidebarInitialized?: boolean,\n    history: RouterHistory,\n    match: Match,\n    onLoad: SidebarLoadCallback,\n    onUpgradeClick?: () => void,\n    onVersionChange: VersionChangeCallback,\n    onVersionDelete: VersionActionCallback,\n    onVersionDownload: VersionActionCallback,\n    onVersionPreview: VersionActionCallback,\n    onVersionPromote: VersionActionCallback,\n    onVersionRestore: VersionActionCallback,\n    parentName: string,\n    versionId?: string,\n};\n\ntype State = {\n    error?: MessageDescriptor,\n    isLoading: boolean,\n    isWatermarked: boolean,\n    versionCount: number,\n    versionLimit: number,\n    versions: Array<BoxItemVersion>,\n};\n\nclass VersionsSidebarContainer extends React.Component<Props, State> {\n    static defaultProps = {\n        onLoad: noop,\n        onVersionChange: noop,\n        onVersionDelete: noop,\n        onVersionDownload: noop,\n        onVersionPreview: noop,\n        onVersionPromote: noop,\n        onVersionRestore: noop,\n        parentName: '',\n    };\n\n    api: VersionsSidebarAPI;\n\n    props: Props;\n\n    state: State = {\n        isLoading: true,\n        isWatermarked: false,\n        versionCount: Infinity,\n        versionLimit: Infinity,\n        versions: [],\n    };\n\n    window: any = window;\n\n    componentDidMount() {\n        const { onLoad } = this.props;\n        this.initialize();\n        this.fetchData().then(() => {\n            onLoad({ component: 'preview', feature: 'versions' });\n        });\n    }\n\n    componentDidUpdate({ fileId: prevFileId, versionId: prevVersionId }: Props) {\n        const { fileId, versionId } = this.props;\n\n        if (fileId !== prevFileId) {\n            this.refresh();\n        }\n\n        if (versionId !== prevVersionId) {\n            this.verifyVersion();\n        }\n    }\n\n    componentWillUnmount() {\n        // Reset the current version id since the wrapping route is no longer active\n        this.props.onVersionChange(null);\n    }\n\n    handleActionDelete = (versionId: string): Promise<void> => {\n        this.setState({ isLoading: true });\n\n        return this.api\n            .deleteVersion(this.findVersion(versionId))\n            .then(() => this.api.fetchVersion(versionId))\n            .then(this.handleDeleteSuccess)\n            .then(() => this.props.onVersionDelete(versionId))\n            .catch(() => this.handleActionError(messages.versionActionDeleteError));\n    };\n\n    handleActionDownload = (versionId: string): Promise<void> => {\n        return this.api\n            .fetchDownloadUrl(this.findVersion(versionId))\n            .then(openUrlInsideIframe)\n            .then(() => this.props.onVersionDownload(versionId))\n            .catch(() => this.handleActionError(messages.versionActionDownloadError));\n    };\n\n    handleActionPreview = (versionId: string): void => {\n        this.updateVersion(versionId);\n        this.props.onVersionPreview(versionId);\n    };\n\n    handleActionPromote = (versionId: string): Promise<void> => {\n        this.setState({ isLoading: true });\n\n        return this.api\n            .promoteVersion(this.findVersion(versionId))\n            .then(this.api.fetchData)\n            .then(this.handleFetchSuccess)\n            .then(this.handlePromoteSuccess)\n            .then(() => this.props.onVersionPromote(versionId))\n            .catch(() => this.handleActionError(messages.versionActionPromoteError));\n    };\n\n    handleActionRestore = (versionId: string): Promise<void> => {\n        this.setState({ isLoading: true });\n\n        return this.api\n            .restoreVersion(this.findVersion(versionId))\n            .then(() => this.api.fetchVersion(versionId))\n            .then(this.handleRestoreSuccess)\n            .then(() => this.props.onVersionRestore(versionId))\n            .catch(() => this.handleActionError(messages.versionActionRestoreError));\n    };\n\n    handleActionError = (message: MessageDescriptor): void => {\n        this.setState({\n            error: message,\n            isLoading: false,\n        });\n    };\n\n    handleDeleteSuccess = (data: BoxItemVersion): void => {\n        const { versionId: selectedVersionId } = this.props;\n        const { id: versionId } = data;\n\n        this.mergeResponse(data);\n\n        // Bump the user to the current version if they deleted their selected version\n        if (versionId === selectedVersionId) {\n            this.updateVersionToCurrent();\n        }\n    };\n\n    handleRestoreSuccess = (data: BoxItemVersion): void => {\n        this.mergeResponse(data);\n    };\n\n    handleFetchError = (): void => {\n        this.setState({\n            error: messages.versionFetchError,\n            isLoading: false,\n            isWatermarked: false,\n            versionCount: 0,\n            versions: [],\n        });\n    };\n\n    handleFetchSuccess = ([fileResponse, versionsResponse]): [BoxItem, FileVersions] => {\n        const { api } = this.props;\n        const { version_limit } = fileResponse;\n        const isWatermarked = getProp(fileResponse, 'watermark_info.is_watermarked', false);\n        const versionLimit = version_limit !== null && version_limit !== undefined ? version_limit : Infinity;\n        const versionsWithPermissions = api.getVersionsAPI(false).addPermissions(versionsResponse, fileResponse) || {};\n        const { entries: versions, total_count: versionCount } = versionsWithPermissions;\n\n        this.setState(\n            {\n                error: undefined,\n                isLoading: false,\n                isWatermarked,\n                versionCount,\n                versionLimit,\n                versions: this.sortVersions(versions),\n            },\n            this.verifyVersion,\n        );\n\n        return [fileResponse, versionsResponse];\n    };\n\n    handlePromoteSuccess = ([file]: [BoxItem, FileVersions]): void => {\n        const { file_version: fileVersion } = file;\n\n        if (fileVersion) {\n            this.updateVersion(fileVersion.id);\n        }\n    };\n\n    initialize = (): void => {\n        this.api = new VersionsSidebarAPI(this.props);\n    };\n\n    fetchData = (): Promise<?[BoxItem, FileVersions]> => {\n        return this.api\n            .fetchData()\n            .then(this.handleFetchSuccess)\n            .catch(this.handleFetchError);\n    };\n\n    findVersion = (versionId: ?string): ?BoxItemVersion => {\n        const { versions } = this.state;\n\n        return versions.find(version => version.id === versionId);\n    };\n\n    getCurrentVersionId = (): ?string => {\n        const { versions } = this.state;\n        return versions[0] ? versions[0].id : null;\n    };\n\n    mergeVersions = (newVersion: BoxItemVersion): Array<BoxItemVersion> => {\n        const { versions } = this.state;\n        const newVersionId = newVersion ? newVersion.id : '';\n        return versions.map(version => (version.id === newVersionId ? merge({ ...version }, newVersion) : version));\n    };\n\n    mergeResponse = (data: BoxItemVersion): void => {\n        const newVersions = this.mergeVersions(data);\n\n        this.setState({\n            error: undefined,\n            isLoading: false,\n            versions: newVersions,\n        });\n    };\n\n    refresh(): void {\n        this.initialize();\n        this.setState({ isLoading: true }, this.fetchData);\n    }\n\n    sortVersions(versions?: Array<BoxItemVersion> = []): Array<BoxItemVersion> {\n        return [...versions].sort((a, b) => Date.parse(b.created_at) - Date.parse(a.created_at));\n    }\n\n    updateVersion = (versionId?: ?string): void => {\n        const { history, match } = this.props;\n        return history.push(generatePath(match.path, { ...match.params, versionId }));\n    };\n\n    updateVersionToCurrent = (): void => {\n        this.updateVersion(this.getCurrentVersionId());\n    };\n\n    verifyVersion = () => {\n        const { onVersionChange, versionId } = this.props;\n        const selectedVersion = this.findVersion(versionId);\n\n        if (selectedVersion) {\n            onVersionChange(selectedVersion, {\n                currentVersionId: this.getCurrentVersionId(),\n                updateVersionToCurrent: this.updateVersionToCurrent,\n            });\n        } else {\n            this.updateVersionToCurrent();\n        }\n    };\n\n    render() {\n        const { fileId, parentName, onUpgradeClick } = this.props;\n\n        if (onUpgradeClick) {\n            return <StaticVersionsSidebar onUpgradeClick={onUpgradeClick} parentName={parentName} {...this.state} />;\n        }\n\n        return (\n            <VersionsSidebar\n                fileId={fileId}\n                onDelete={this.handleActionDelete}\n                onDownload={this.handleActionDownload}\n                onPreview={this.handleActionPreview}\n                onPromote={this.handleActionPromote}\n                onRestore={this.handleActionRestore}\n                parentName={parentName}\n                {...this.state}\n            />\n        );\n    }\n}\n\nexport type VersionsSidebarProps = Props;\nexport default flow([withRouter, withAPIContext])(VersionsSidebarContainer);\n"],"sourceRoot":""}