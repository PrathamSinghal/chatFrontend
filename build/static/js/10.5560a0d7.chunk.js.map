{"version":3,"sources":["../../../../../src/features/targeting/utils/useOnClickBody.js","../../../../../src/features/targeting/hocs/withTargetedClickThrough.js","../../../../src/components/guide-tooltip/messages.js","../../../../src/components/guide-tooltip/GuideTooltip.tsx","../../../../src/features/targeting/TargetedClickThroughGuideTooltip.js","../../../../../src/elements/content-sidebar/additional-tabs/AdditionalTabTooltip.js","../../../../../src/elements/content-sidebar/additional-tabs/AdditionalTabPlaceholder.js","../../../../src/icon/fill/Apps16.tsx","../../../../../src/elements/content-sidebar/additional-tabs/messages.js","../../../../../src/elements/content-sidebar/additional-tabs/AdditionalTab.js","../../../../../src/elements/content-sidebar/additional-tabs/MoreTabPlaceholder.js","../../../../../src/elements/content-sidebar/additional-tabs/AdditionalTabsLoading.js","../../../../../src/elements/content-sidebar/additional-tabs/AdditionalTabs.js","../../../../src/icons/general/IconChatRound.tsx","../../../../src/icons/general/IconDocInfo.tsx","../../../../src/icons/general/IconMagicWand.tsx","../../../../src/icons/general/IconMetadataThick.tsx","../../../../src/elements/content-sidebar/SidebarNavButton.js","../../../../src/icon/logo/BoxSign28.tsx","../../../../src/icon/fill/Sign16.tsx","../../../../src/elements/content-sidebar/SidebarNavSignButton.tsx","../../../../src/icon/fill/SignMe32.tsx","../../../../src/icon/fill/SignMeOthers32.tsx","../../../../src/elements/content-sidebar/SidebarNavSign.tsx","../../../../src/elements/content-sidebar/SidebarNavTablist.js","../../../../src/icons/general/IconHide.tsx","../../../../src/icons/general/IconShow.tsx","../../../../src/components/sidebar-toggle-button/SidebarToggleButton.js","../../../../src/elements/content-sidebar/SidebarToggle.js","../../../../src/elements/content-sidebar/SidebarNav.js","../../../../src/elements/content-sidebar/SidebarLoading.js","../../../../src/elements/content-sidebar/SidebarLoadingError.js","../../../../src/elements/content-sidebar/SidebarUtils.js","../../../../src/elements/content-sidebar/SidebarPanels.js","../../../../src/elements/content-sidebar/withSidebarAnnotations.js","../../../../src/elements/content-sidebar/Sidebar.js","../../../../../src/elements/common/current-user/withCurrentUser.tsx","../../../../src/elements/content-sidebar/ContentSidebar.js","../../../../src/elements/common/interactionTargets.js","../../../../src/components/tooltip/index.ts","../../../../src/components/menu/MenuHeader.tsx","../../../../src/components/menu/SelectMenuItem.tsx","../../../../src/components/menu/SelectMenuLinkItem.tsx","../../../../src/components/menu/SubmenuItem.tsx","../../../../../src/elements/common/api-context/APIContext.js","../../../../../src/elements/common/api-context/withAPIContext.js","../../../../src/elements/content-sidebar/SidebarSection.js","../../../../src/components/dropdown-menu/index.js","../../../../src/elements/content-sidebar/SidebarContent.js","../../../../src/elements/content-sidebar/messages.js","../../../../src/icons/general/IconEllipsis.tsx","../../../../src/components/close-button/CloseButton.tsx","../../../../src/icon/fill/Arrow16.tsx","../../../../../src/elements/common/nav-button/BackButton.js","../../../../../src/elements/common/nav-button/NavButton.js","../../../../../src/elements/content-sidebar/skills/skillUtils.js","../../../../../src/elements/common/routing/withRouterAndRef.js"],"names":["useOnClickBody","onClick","enable","useEffect","document","body","addEventListener","removeEventListener","withTargetedClickThrough","WrappedComponent","WrapperComponent","children","closeOnClickOutside","shouldTarget","useTargetingApi","rest","canShow","onComplete","onClose","onShow","handleOnComplete","shouldShow","React","showCloseButton","stopBubble","isShown","onDismiss","className","onClickCapture","onKeyPressCapture","tabIndex","displayName","name","messages","defineMessages","navigation","GuideTooltip","icon","image","primaryButtonProps","steps","secondaryButtonProps","title","text","classNames","values","currentStepIndex","totalNumSteps","theme","TooltipTheme","CALLOUT","AdditionalTabTooltip","defaultTooltipText","isFtuxVisible","ftuxTooltipData","targetingApi","Tooltip","position","TargetedClickThroughGuideTooltip","AdditionalTabPlaceholder","isLoading","classes","Apps16","props","AccessibleSVG","width","height","viewBox","fill","vars","fillRule","d","blockedByShieldAccessPolicy","BLOCKED_BY_SHEILD","AdditionalTab","isErrored","onImageLoad","setState","this","status","reason","id","iconUrl","state","src","onError","onImageError","onLoad","alt","color","bdlGray50","callbackFn","callback","isDisabled","tooltipText","getDisabledReason","PlainButton","type","callbackData","getTabIcon","MoreTabPlaceholder","IconEllipsis","bdlGray10","LOADING_TABS","AdditionalTabsLoading","map","LoadingComponent","idx","key","AdditionalTabs","tabs","hasMoreTab","find","tab","numTabs","length","numLoadedTabs","tabData","PureComponent","IconChatRound","IconDocInfo","IconMagicWand","IconMetadataThick","SidebarNavButton","ref","dataResinTarget","dataTestId","elementId","isOpen","sidebarView","tooltip","sidebarPath","path","match","isMatch","isActive","isActiveValue","isExactMatch","isExact","isTabbable","activeClassName","getDOMRef","replace","role","to","pathname","open","BoxSign28","Sign16","PlaceholderTooltip","injectIntl","blockedReason","intl","isSignDisabled","isTargeted","FtuxTooltip","label","formatMessage","boxSignSignature","boxSignRequest","buttonClassName","classnames","tooltipMessage","boxSignSecurityBlockedTooltip","boxSignWatermarkBlockedTooltip","boxSignFtuxBody","TooltipPosition","MIDDLE_LEFT","boxSignFtuxTitle","SignMe32","SignMeOthers32","SidebarNavSign","useFeatureConfig","boxSignBlockedReason","onBoxClickRequestSignature","onBoxClickSignMyself","onClickSignMyself","boxSignStatus","boxSignTargetingApi","isSignRemoveInterstitialEnabled","isResponsive","constrainToWindow","isRightAligned","SIDEBAR_NAV_TARGETS","SIGN","boxSignRequestSignature","boxSignSignMyself","withRouter","history","onNavigate","refs","tablist","child","onKeyDown","event","currentIndex","indexOf","location","nextIndex","KEYS","arrowUp","push","focus","stopPropagation","preventDefault","arrowDown","IconHide","IconShow","DIRECTION_LEFT","direction","isCollapsed","intlMessage","sidebarHide","sidebarShow","intlText","tooltipPosition","TOGGLE","additionalTabs","fileId","hasActivity","hasAdditionalTabs","hasDetails","hasMetadata","hasSkills","hasBoxSign","enabled","sidebarNavLabel","ACTIVITY","SIDEBAR_VIEW_ACTIVITY","sidebarActivityTitle","DETAILS","SIDEBAR_VIEW_DETAILS","sidebarDetailsTitle","SKILLS","SIDEBAR_VIEW_SKILLS","sidebarSkillsTitle","METADATA","SIDEBAR_VIEW_METADATA","sidebarMetadataTitle","SidebarLoading","SidebarContent","SidebarSection","LoadingIndicator","SidebarLoadingError","DefaultError","SidebarUtils","detailsSidebarProps","hasProperties","hasAccessStats","hasClassification","hasVersions","hasNotices","hasActivityFeed","canHaveDetailsSidebar","canHaveActivitySidebar","canHaveSkillsSidebar","canHaveMetadataSidebar","file","hasSkillsData","editors","metadataSidebarProps","isFeatureEnabled","Array","isArray","shouldRenderSkillsSidebar","shouldRenderMetadataSidebar","view","markName","importFn","mark","SIDEBAR_VIEW_VERSIONS","Promise","resolve","AsyncLoad","errorComponent","fallback","getTitleForView","loader","getLoaderForView","BASE_EVENT_NAME","MARK_NAME_JS_LOADING_DETAILS","ORIGIN_DETAILS_SIDEBAR","MARK_NAME_JS_LOADING_ACTIVITY","ORIGIN_ACTIVITY_SIDEBAR","MARK_NAME_JS_LOADING_SKILLS","ORIGIN_SKILLS_SIDEBAR","MARK_NAME_JS_LOADING_METADATA","ORIGIN_METADATA_SIDEBAR","MARK_NAME_JS_LOADING_VERSIONS","ORIGIN_VERSIONS_SIDEBAR","URL_TO_FEED_ITEM_TYPE","annotations","comments","tasks","LoadableDetailsSidebar","getAsyncSidebarContent","LoadableActivitySidebar","LoadableSkillsSidebar","LoadableMetadataSidebar","LoadableVersionsSidebar","SidebarPanels","isInitialized","shouldRefreshCache","activitySidebar","current","detailsSidebar","metadataSidebar","versionsSidebar","refresh","activitySidebarProps","currentUser","currentUserError","getPreview","getViewer","onAnnotationSelect","onVersionChange","onVersionHistoryClick","versionsSidebarProps","exact","render","hasSidebarInitialized","startMarkName","matchEntryType","params","activeFeedEntryType","undefined","activeFeedEntryId","parentName","sidebar","versionId","redirect","silent","flow","WithSidebarAnnotations","getAnnotationsPath","getAnnotationsMatchPath","annotationId","getProp","currentFileVersionId","fileVersionId","annotatorState","activeAnnotationFileVersionId","activeAnnotationId","defaultFileVersionId","newLocationState","api","feedAPI","getFeedAPI","getCachedItems","items","version","filter","item","FEED_ITEM_TYPE_VERSION","currentVersionId","updateVersionToCurrent","isActivity","matchPath","sidebarPanels","redirectDeeplinkedAnnotation","prevProps","prevAnnotatorState","prevFileId","prevLocation","action","annotation","prevActiveAnnotationId","prevAnnotation","prevMatch","hasActiveAnnotationChanged","isAnnotationsPath","isTransitioningToAnnotationPath","prevFileVersionId","addAnnotationReply","deleteAnnotationReply","updateAnnotationReply","updateAnnotation","deleteAnnotation","addAnnotation","updateActiveAnnotation","updateActiveVersion","meta","requestId","getBadUserError","isPending","refreshActivitySidebar","annotationReply","addPendingReply","modifyFeedItemRepliesCountBy","updateReplyItem","updateFeedItem","deleteFeedItem","replyId","annotationItem","replies","deleteReplyItem","noop","withAPIContext","withAnnotatorContext","withRouterAndRef","SIDEBAR_FORCE_KEY","SIDEBAR_FORCE_VALUE_OPEN","Sidebar","uniqueid","LocalStore","substring","split","currentVersion","file_version","fileVersionSlug","urlPrefix","getUrlPrefix","isDirty","getLocationState","setForcedByLocation","locationState","store","setItem","getItem","isForced","isLocationOpen","hasNav","isDefaultOpen","metadataEditors","isForcedSet","isForcedOpen","handleVersionHistoryClick","styleClassName","ComponentWithCurrentUser","error","code","contextInfo","console","user","shouldDestroy","getBadItemError","getUsersAPI","getUser","fetchCurrentUserSuccessCallback","fetchCurrentUserErrorCallback","e","maskError","errorHeader","currentUserErrorHeaderMessage","errorSubHeader","defaultErrorMaskSubHeaderMessage","errorCallback","fetchCurrentUser","Component","withFeatureConsumer","MARK_NAME_JS_READY","ORIGIN_CONTENT_SIDEBAR","EVENT_JS_READY","ContentSidebar","onFetchFileSuccess","fetchMetadata","apiHost","cache","clientName","language","requestInterceptor","responseInterceptor","sharedLink","sharedLinkPassword","token","API","logger","onReadyMetric","endMarkName","destroy","fetchFile","getMetadataAPI","getMetadata","fetchMetadataSuccessCallback","fetchOptions","canHaveSidebar","getFileAPI","getFile","fetchFileSuccessCallback","fields","SIDEBAR_FIELDS_TO_FETCH","sidebarRef","defaultView","initialPath","charAt","shouldRenderSidebar","Internationalize","Provider","value","initialEntries","wrappedComponentRef","DEFAULT_HOSTNAME_API","CLIENT_NAME_CONTENT_SIDEBAR","withFeatureProvider","withLogger","withErrorBoundary","SECTION_TARGETS","FILE_PROPERTIES","ACCESS_STATS","CLASSIFICATION","DETAILS_TARGETS","COMMENTS","DOWNLOADS","EDITS","PREVIEWS","VIEWS","VIEW_DETAILS","CLASSIFICATION_ADD","CLASSIFICATION_EDIT","DESCRIPTION","VERSION_HISTORY","ACTIVITY_TARGETS","ANNOTATION_OPTIONS_DELETE","ANNOTATION_OPTIONS_EDIT","ANNOTATION_OPTIONS_RESOLVE","ANNOTATION_OPTIONS_UNRESOLVE","ANNOTATION_OPTIONS","APPROVAL_FORM_ADD_TASK","APPROVAL_FORM_CANCEL","APPROVAL_FORM_POST","COMMENT_OPTIONS","COMMENT_OPTIONS_DELETE","COMMENT_OPTIONS_EDIT","INLINE_DELETE_CANCEL","INLINE_DELETE_CONFIRM","MENTION","PROFILE","TASK_APPROVE","TASK_COMPLETE","TASK_DATE_PICKER","TASK_VIEW_DETAILS","TASK_OPTIONS","TASK_OPTIONS_DELETE","TASK_OPTIONS_EDIT","TASK_REJECT","VERSION_CARD","SKILLS_TARGETS","FACES","CARD","FACE","DELETE","EDIT","EDIT_SAVE","EDIT_CANCEL","TIMELINE","KEYWORDS","SELECT","TRANSCRIPTS","COPY","EXPAND","TRANSCRIPT","EDIT_TEXT","NEXT","PREVIOUS","INTERACTION_TARGET","SelectMenuItem","MenuItem","isSelectItem","createContext","APIContext","Consumer","prevState","interactionTarget","sectionClassName","toggleVisibility","COLOR_999","actions","defaultProps","activitySidebarFilterOptionAllActivity","activitySidebarFilterOptionAllComments","activitySidebarFilterOptionOpen","activitySidebarFilterOptionResolved","activitySidebarFilterOptionTasks","tasksAddTask","taskAddTaskGeneral","taskAddTaskGeneralDescription","taskAddTaskApproval","taskAddTaskApprovalDescription","tasksCreateGeneralTaskFormTitle","tasksCreateApprovalTaskFormTitle","tasksEditApprovalTaskFormTitle","tasksEditGeneralTaskFormTitle","CloseButton","ButtonType","BUTTON","bdlGray65","Arrow16","BackButton","goBack","IconNavigateLeft","back","NavButton","component","strict","defaultPrevented","isLeftClick","isValidSkillsCard","card","fileVersion","entries","cards","some","Wrapped","WithRouterAndRef","routeProps"],"mappings":"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","file":"static/js/10.5560a0d7.chunk.js","sourcesContent":["// @flow\nimport { useEffect } from 'react';\n/**\n * onClick will be called if enable is true when document is clicked.\n * options such as capture and once are directly passed to event listener.\n * Recommend to use once\n */\nconst useOnClickBody = (onClick: () => void, enable: boolean) => {\n    useEffect(() => {\n        if (enable) {\n            if (document.body) {\n                document.body.addEventListener('click', onClick);\n            }\n            if (document.body) {\n                document.body.addEventListener('contextmenu', onClick);\n            }\n        }\n        return () => {\n            if (enable) {\n                if (document.body) {\n                    document.body.removeEventListener('click', onClick);\n                }\n                if (document.body) {\n                    document.body.removeEventListener('contextmenu', onClick);\n                }\n            }\n        };\n    }, [onClick, enable]);\n};\n\nexport default useOnClickBody;\n","// @flow\nimport * as React from 'react';\n\nimport { useOnClickBody } from '../utils';\nimport { type TargetedComponentProps } from '../types';\n\nfunction withTargetedClickThrough<Config>(\n    WrappedComponent: React.ComponentType<Config>,\n): React.ComponentType<{|\n    ...Config,\n    ...$Exact<TargetedComponentProps>,\n|}> {\n    const WrapperComponent = ({\n        children,\n        closeOnClickOutside,\n        shouldTarget,\n        useTargetingApi,\n        ...rest\n    }: {|\n        ...Config,\n        ...$Exact<TargetedComponentProps>,\n    |}) => {\n        const { canShow, onComplete, onClose, onShow } = useTargetingApi();\n\n        const handleOnComplete = () => {\n            if (shouldTarget && canShow) {\n                onComplete();\n            }\n        };\n\n        const shouldShow = shouldTarget && canShow;\n\n        useOnClickBody(onClose, !!(shouldShow && closeOnClickOutside));\n\n        React.useEffect(() => {\n            if (shouldShow) {\n                onShow();\n            }\n        }, [shouldShow, onShow]);\n\n        return (\n            <WrappedComponent showCloseButton stopBubble {...rest} isShown={shouldShow} onDismiss={onClose}>\n                <span\n                    className=\"bdl-targeted-click-through\"\n                    data-targeting=\"click-through\"\n                    data-testid=\"with-targeted-click-span\"\n                    onClickCapture={handleOnComplete}\n                    onKeyPressCapture={handleOnComplete}\n                    tabIndex={-1}\n                >\n                    {children}\n                </span>\n            </WrappedComponent>\n        );\n    };\n\n    WrapperComponent.displayName = `withTargetedClickThrough(${WrappedComponent.displayName ||\n        WrappedComponent.name ||\n        'Component'})`;\n\n    return WrapperComponent;\n}\n\nexport default withTargetedClickThrough;\n","// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    navigation: {\n        defaultMessage: '{currentStepIndex} of {totalNumSteps}',\n        description: 'Displays the navigation step index to the user of where they are in the guide. e.g. 1 of 4',\n        id: 'boxui.core.guidetooltip.navigation',\n    },\n});\n\nexport default messages;\n","import * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\n\nimport Tooltip, { TooltipTheme } from '../tooltip';\nimport Button from '../button';\n// @ts-ignore flow import\nimport messages from './messages';\n\nimport './GuideTooltip.scss';\n\ntype TooltipProps = Omit<JSX.LibraryManagedAttributes<typeof Tooltip, Tooltip['props']>, 'text' | 'theme'>;\n\ntype Props = TooltipProps & {\n    body: React.ReactNode;\n    title?: React.ReactNode;\n    /** 32px x 32px */\n    icon?: React.ReactNode;\n    /** A React component representing the image, cannot be used together with icon */\n    image?: React.ReactNode;\n    /** displays guide progress e.g. 1 of 4 */\n    steps?: [number, number];\n    primaryButtonProps?: JSX.LibraryManagedAttributes<typeof Button, Button['props']>;\n    secondaryButtonProps?: JSX.LibraryManagedAttributes<typeof Button, Button['props']>;\n};\n\nfunction GuideTooltip({\n    body,\n    children,\n    className = '',\n    icon,\n    image,\n    isShown = true,\n    primaryButtonProps,\n    steps,\n    secondaryButtonProps,\n    showCloseButton = true,\n    title,\n    ...rest\n}: Props) {\n    return (\n        <Tooltip\n            {...rest}\n            className={`bdl-GuideTooltip ${className}`}\n            isShown={isShown}\n            showCloseButton={showCloseButton}\n            text={\n                <>\n                    {icon && <div className=\"bdl-GuideTooltip-icon\">{icon}</div>}\n                    <div className=\"bdl-GuideTooltip-right\">\n                        {title && <div className=\"bdl-GuideTooltip-title\">{title}</div>}\n                        {!icon && image && <div className=\"bdl-GuideTooltip-image\">{image}</div>}\n                        <div className=\"bdl-GuideTooltip-body\">{body}</div>\n                        {(secondaryButtonProps || primaryButtonProps || steps) && (\n                            <div className=\"bdl-GuideTooltip-bottom\">\n                                {(secondaryButtonProps || primaryButtonProps) && (\n                                    <div className=\"bdl-GuideTooltip-navigation\">\n                                        {secondaryButtonProps && (\n                                            <Button\n                                                {...secondaryButtonProps}\n                                                className={classNames(\n                                                    'bdl-GuideTooltip-previousButton',\n                                                    secondaryButtonProps.className,\n                                                )}\n                                            />\n                                        )}\n                                        {primaryButtonProps && (\n                                            <Button\n                                                {...primaryButtonProps}\n                                                className={classNames(\n                                                    'bdl-GuideTooltip-nextButton',\n                                                    primaryButtonProps.className,\n                                                )}\n                                            />\n                                        )}\n                                    </div>\n                                )}\n                                {steps && (\n                                    <div className=\"bdl-GuideTooltip-steps\">\n                                        <FormattedMessage\n                                            {...messages.navigation}\n                                            values={{ currentStepIndex: steps[0], totalNumSteps: steps[1] }}\n                                        />\n                                    </div>\n                                )}\n                            </div>\n                        )}\n                    </div>\n                </>\n            }\n            theme={TooltipTheme.CALLOUT}\n        >\n            {children}\n        </Tooltip>\n    );\n}\n\nexport default GuideTooltip;\n","// @flow\nimport * as React from 'react';\nimport { withTargetedClickThrough } from './hocs';\n\nimport GuideTooltip from '../../components/guide-tooltip';\n\nexport default withTargetedClickThrough<React.ElementConfig<typeof GuideTooltip>>(GuideTooltip);\n","/**\n * @flow\n * @file Sidebar Additional Tab FTUX tooltip\n * @author Box\n */\n\nimport * as React from 'react';\nimport Tooltip from '../../common/Tooltip';\nimport TargetedClickThroughGuideTooltip from '../../../features/targeting/TargetedClickThroughGuideTooltip';\nimport type { AdditionalSidebarTabFtuxData } from '../flowTypes';\nimport './AdditionalTabTooltip.scss';\n\ntype Props = {\n    children: React.Node,\n    defaultTooltipText: ?string | React.Node,\n    ftuxTooltipData?: AdditionalSidebarTabFtuxData,\n    isFtuxVisible: boolean,\n};\n\nconst AdditionalTabTooltip = ({ children, defaultTooltipText, isFtuxVisible, ftuxTooltipData }: Props) => {\n    if (!isFtuxVisible || !ftuxTooltipData || !ftuxTooltipData.targetingApi().canShow) {\n        return (\n            <Tooltip position=\"middle-left\" text={defaultTooltipText}>\n                {children}\n            </Tooltip>\n        );\n    }\n\n    const { targetingApi, text } = ftuxTooltipData;\n\n    return (\n        <TargetedClickThroughGuideTooltip\n            className=\"bdl-AdditionalTabTooltip\"\n            body={text}\n            position=\"middle-right\"\n            shouldTarget\n            useTargetingApi={targetingApi}\n        >\n            {children}\n        </TargetedClickThroughGuideTooltip>\n    );\n};\n\nexport default AdditionalTabTooltip;\n","/**\n * @flow\n * @file Preview sidebar additional tab placeholder component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n    isLoading: boolean,\n};\n\nconst AdditionalTabPlaceholder = ({ isLoading = false }: Props) => {\n    const classes = classNames('bdl-AdditionalTabPlaceholder-icon', {\n        'bdl-AdditionalTabPlaceholder-icon--loading': isLoading,\n    });\n    return (\n        <div className=\"bdl-AdditionalTabPlaceholder\" data-testid=\"additionaltabplaceholder\">\n            <div className={classes} />\n        </div>\n    );\n};\n\nexport default AdditionalTabPlaceholder;\n","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst Apps16 = (props: SVGProps) => (\n    <AccessibleSVG width={16} height={16} viewBox=\"0 0 16 16\" {...props}>\n        <path\n            fill={vars.bdlGray50}\n            fillRule=\"evenodd\"\n            d=\"M14 11a1 1 0 011 1v2a1 1 0 01-1 1h-2a1 1 0 01-1-1v-2a1 1 0 011-1h2zm-5 0a1 1 0 011 1v2a1 1 0 01-1 1H7a1 1 0 01-1-1v-2a1 1 0 011-1h2zm-5 0a1 1 0 011 1v2a1 1 0 01-1 1H2a1 1 0 01-1-1v-2a1 1 0 011-1h2zm10-5a1 1 0 011 1v2a1 1 0 01-1 1h-2a1 1 0 01-1-1V7a1 1 0 011-1h2zM9 6a1 1 0 011 1v2a1 1 0 01-1 1H7a1 1 0 01-1-1V7a1 1 0 011-1h2zM4 6a1 1 0 011 1v2a1 1 0 01-1 1H2a1 1 0 01-1-1V7a1 1 0 011-1h2zm10-5a1 1 0 011 1v2a1 1 0 01-1 1h-2a1 1 0 01-1-1V2a1 1 0 011-1h2zM9 1a1 1 0 011 1v2a1 1 0 01-1 1H7a1 1 0 01-1-1V2a1 1 0 011-1h2zM4 1a1 1 0 011 1v2a1 1 0 01-1 1H2a1 1 0 01-1-1V2a1 1 0 011-1h2z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default Apps16;\n","/**\n * @flow\n * @file i18n messages\n * @author Box\n */\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    blockedByShieldAccessPolicy: {\n        id: 'be.additionalTab.blockedByShieldAccessPolicy',\n        defaultMessage: 'Use of this app is blocked due to a security policy.',\n        description: 'Text to display when app is disabled by applied access policy',\n    },\n});\n\nexport default messages;\n","/**\n * @flow\n * @file Sidebar Additional Tab component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport { bdlGray50 } from '../../../styles/variables';\nimport PlainButton from '../../../components/plain-button/PlainButton';\nimport AdditionalTabTooltip from './AdditionalTabTooltip';\nimport AdditionalTabPlaceholder from './AdditionalTabPlaceholder';\nimport Apps16 from '../../../icon/fill/Apps16';\nimport messages from './messages';\nimport type { AdditionalSidebarTab, AdditionalSidebarTabFtuxData } from '../flowTypes';\n\nimport './AdditionalTab.scss';\n\ntype Props = {\n    ftuxTooltipData?: AdditionalSidebarTabFtuxData,\n    isLoading: boolean,\n    onImageLoad: () => void,\n    status?: string,\n} & AdditionalSidebarTab;\n\ntype State = {\n    isErrored: boolean,\n};\n\nconst BLOCKED_BY_SHEILD = 'BLOCKED_BY_SHIELD_ACCESS_POLICY';\n\nclass AdditionalTab extends React.PureComponent<Props, State> {\n    state = {\n        isErrored: false,\n    };\n\n    onImageError = () => {\n        this.props.onImageLoad();\n        this.setState({ isErrored: true });\n    };\n\n    isDisabled() {\n        const { status } = this.props;\n        return status === BLOCKED_BY_SHEILD;\n    }\n\n    getDisabledReason() {\n        let reason = '';\n        const { status } = this.props;\n        switch (status) {\n            case BLOCKED_BY_SHEILD:\n                reason = <FormattedMessage {...messages.blockedByShieldAccessPolicy} />;\n                break;\n            default:\n            // noop\n        }\n        return reason;\n    }\n\n    getTabIcon() {\n        const { id, iconUrl, onImageLoad, title } = this.props;\n        const { isErrored } = this.state;\n\n        let TabIcon;\n\n        if (isErrored) {\n            TabIcon = <AdditionalTabPlaceholder isLoading={false} />;\n        } else if (id && id > 0) {\n            TabIcon = (\n                <img\n                    className=\"bdl-AdditionalTab-icon\"\n                    src={iconUrl}\n                    onError={this.onImageError}\n                    onLoad={onImageLoad}\n                    alt={title}\n                />\n            );\n        } else {\n            TabIcon = <Apps16 color={bdlGray50} width={20} height={20} />;\n        }\n\n        return TabIcon;\n    }\n\n    render() {\n        const {\n            callback: callbackFn,\n            id,\n            isLoading,\n            iconUrl,\n            ftuxTooltipData,\n            onImageLoad,\n            title,\n            ...rest\n        } = this.props;\n\n        const isDisabled = this.isDisabled();\n\n        const className = classNames('bdl-AdditionalTab', {\n            'bdl-is-hidden': isLoading,\n            'bdl-is-disabled': isDisabled,\n            'bdl-is-overflow': id && id < 0,\n        });\n\n        const tooltipText = isDisabled ? this.getDisabledReason() : title;\n\n        return (\n            <AdditionalTabTooltip\n                defaultTooltipText={tooltipText}\n                ftuxTooltipData={ftuxTooltipData}\n                isFtuxVisible={!isLoading}\n            >\n                <PlainButton\n                    aria-label={title}\n                    className={className}\n                    data-testid=\"additionaltab\"\n                    type=\"button\"\n                    isDisabled={isDisabled}\n                    onClick={() => callbackFn({ id, callbackData: rest })}\n                >\n                    {this.getTabIcon()}\n                </PlainButton>\n            </AdditionalTabTooltip>\n        );\n    }\n}\n\nexport default AdditionalTab;\n","/**\n * @flow\n * @file Preview sidebar more tabs loading component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { bdlGray10 } from '../../../styles/variables';\nimport IconEllipsis from '../../../icons/general/IconEllipsis';\n\nconst MoreTabPlaceholder = () => {\n    return (\n        <div className=\"bdl-AdditionalTabPlaceholder\">\n            <IconEllipsis color={bdlGray10} className=\"bdl-AdditionalTabPlaceholder-moreIcon\" />\n        </div>\n    );\n};\n\nexport default MoreTabPlaceholder;\n","/**\n * @flow\n * @file Preview sidebar additional tabs loading component\n * @author Box\n */\n\nimport * as React from 'react';\nimport AdditionalTabPlaceholder from './AdditionalTabPlaceholder';\nimport MoreTabPlaceholder from './MoreTabPlaceholder';\nimport './AdditionalTabsLoading.scss';\n\n// Loading layout for the sidebar's additional tabs\nconst LOADING_TABS = [\n    AdditionalTabPlaceholder,\n    AdditionalTabPlaceholder,\n    AdditionalTabPlaceholder,\n    AdditionalTabPlaceholder,\n    AdditionalTabPlaceholder,\n    MoreTabPlaceholder,\n];\n\nconst AdditionalTabsLoading = (): Array<React.Element<any>> => {\n    return LOADING_TABS.map((LoadingComponent, idx) => <LoadingComponent isLoading key={idx} />);\n};\n\nexport default AdditionalTabsLoading;\n","/**\n * @flow\n * @file Preview sidebar additional tabs component\n * @author Box\n */\n\nimport React, { PureComponent } from 'react';\nimport AdditionalTab from './AdditionalTab';\nimport AdditionalTabsLoading from './AdditionalTabsLoading';\nimport type { AdditionalSidebarTab } from '../flowTypes';\n\nimport './AdditionalTabs.scss';\n\ntype Props = {\n    tabs?: Array<AdditionalSidebarTab>,\n};\n\ntype State = {\n    isLoading: boolean,\n};\n\nclass AdditionalTabs extends PureComponent<Props, State> {\n    numLoadedTabs: number = 0;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = { isLoading: true };\n    }\n\n    /**\n     * Handles an individual icon image load\n     *\n     * @return {void}\n     */\n    onImageLoad = () => {\n        const { tabs } = this.props;\n\n        if (!tabs) {\n            return;\n        }\n\n        const hasMoreTab = tabs.find(tab => tab.id < 0 && !tab.iconUrl);\n        const numTabs = tabs.length - (hasMoreTab ? 1 : 0);\n\n        this.numLoadedTabs += 1;\n\n        if (this.numLoadedTabs === numTabs) {\n            this.setState({\n                isLoading: false,\n            });\n        }\n    };\n\n    render() {\n        const { tabs } = this.props;\n        const { isLoading } = this.state;\n\n        return (\n            <div className=\"bdl-AdditionalTabs\">\n                {isLoading && <AdditionalTabsLoading />}\n                {tabs &&\n                    tabs.map(tabData => (\n                        <AdditionalTab\n                            key={tabData.id}\n                            onImageLoad={this.onImageLoad}\n                            isLoading={isLoading}\n                            {...tabData}\n                        />\n                    ))}\n            </div>\n        );\n    }\n}\n\nexport default AdditionalTabs;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconChatRound = ({ className = '', color = '#999', height = 24, title, width = 24 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-chat-round ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 24 24\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M14 3h-4a8 8 0 0 0-5 14.26V21a1 1 0 0 0 .08.37 1 1 0 0 0 1.31.53L12 19h2a8 8 0 0 0 0-16zm-6 9a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm4 0a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm4 0a1 1 0 1 1 1-1 1 1 0 0 1-1 1z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconChatRound;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconDocInfo = ({ className = '', color = '#999', height = 24, title, width = 24 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-doc-info ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 24 24\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M19.41 7.41l-4.82-4.82A2 2 0 0 0 13.17 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8.83a2 2 0 0 0-.59-1.42zM13 16a1 1 0 0 1-2 0v-4a1 1 0 0 1 2 0zm-1-6a1 1 0 1 1 1-1 1 1 0 0 1-1 1z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconDocInfo;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconMagicWand = ({ className = '', color = '#999', height = 24, title, width = 24 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-magic-wand ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 24 24\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M19.91 5.84a2.85 2.85 0 0 0-4 0L3.83 17.89a2.83 2.83 0 0 0 4 4L19.91 9.83a2.84 2.84 0 0 0 0-3.99zm-1.6 2.44l-2.92 3-.86-.86 3-3a.51.51 0 0 1 .43-.18.61.61 0 0 1 .43.19l.08.1a.64.64 0 0 1-.16.75zM11.11 3.51a2.67 2.67 0 0 1 .91.86 5.39 5.39 0 0 1 .38.76l.06.14a7.6 7.6 0 0 1 .37-.76 2.71 2.71 0 0 1 .78-.84 4 4 0 0 1 .73-.4l.24-.11c-.25-.11-.5-.23-.74-.36a2.51 2.51 0 0 1-.94-.89 5.63 5.63 0 0 1-.4-.82v-.05a5.93 5.93 0 0 1-.34.72 2.73 2.73 0 0 1-.88.94 6.45 6.45 0 0 1-.74.38l-.16.06a4.3 4.3 0 0 1 .73.37zM8.48 7.61a1.9 1.9 0 0 1 .66.63 4.73 4.73 0 0 1 .28.55v.09a4.64 4.64 0 0 1 .26-.55 2.05 2.05 0 0 1 .56-.61 3.2 3.2 0 0 1 .54-.3l.22-.09a2.11 2.11 0 0 1-.52-.26 1.87 1.87 0 0 1-.68-.66 3.14 3.14 0 0 1-.29-.58c-.08.19-.16.35-.25.52a2 2 0 0 1-.68.65 3.89 3.89 0 0 1-.58.28h-.12a5.36 5.36 0 0 1 .6.33z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconMagicWand;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconMetadataThick = ({ className = '', color = '#999', height = 24, title, width = 24 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-metadata-thick ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 24 24\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M12,2A10,10,0,1,0,22,12,10,10,0,0,0,12,2Zm4.37,13.43a1,1,0,0,1-.37.07,1,1,0,0,1-.93-.63L13.9,11.94l-1,2a1,1,0,0,1-1.78,0l-1-2L8.93,14.87a1,1,0,1,1-1.86-.74l2-5a1,1,0,0,1,1.82-.08L12,11.26l1.11-2.21A1,1,0,0,1,14,8.5a1,1,0,0,1,.89.63l2,5A1,1,0,0,1,16.37,15.43Z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconMetadataThick;\n","/**\n * @flow\n * @file Preview sidebar nav button component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { Route } from 'react-router-dom';\nimport NavButton from '../common/nav-button';\nimport Tooltip from '../../components/tooltip/Tooltip';\nimport './SidebarNavButton.scss';\n\ntype Props = {\n    'data-resin-target'?: string,\n    'data-testid'?: string,\n    children: React.Node,\n    elementId?: string,\n    isOpen?: boolean,\n    sidebarView: string,\n    tooltip: React.Node,\n};\n\nconst SidebarNavButton = React.forwardRef<Props, React.Ref<any>>((props: Props, ref: React.Ref<any>) => {\n    const {\n        'data-resin-target': dataResinTarget,\n        'data-testid': dataTestId,\n        children,\n        elementId = '',\n        isOpen,\n        sidebarView,\n        tooltip,\n    } = props;\n    const sidebarPath = `/${sidebarView}`;\n\n    return (\n        <Route path={sidebarPath}>\n            {({ match }) => {\n                const isMatch = !!match;\n                const isActive = () => isMatch && !!isOpen;\n                const isActiveValue = isActive();\n                const isExactMatch = isMatch && match.isExact;\n                const id = `${elementId}${elementId === '' ? '' : '_'}${sidebarView}`;\n\n                return (\n                    <Tooltip position=\"middle-left\" text={tooltip} isTabbable={false}>\n                        <NavButton\n                            activeClassName=\"bcs-is-selected\"\n                            aria-selected={isActiveValue}\n                            aria-controls={`${id}-content`}\n                            aria-label={tooltip}\n                            className=\"bcs-NavButton\"\n                            data-resin-target={dataResinTarget}\n                            data-testid={dataTestId}\n                            getDOMRef={ref}\n                            id={id}\n                            isActive={isActive}\n                            replace={isExactMatch}\n                            role=\"tab\"\n                            tabIndex={isActiveValue ? '0' : '-1'}\n                            to={{\n                                pathname: sidebarPath,\n                                state: { open: true },\n                            }}\n                            type=\"button\"\n                        >\n                            {children}\n                        </NavButton>\n                    </Tooltip>\n                );\n            }}\n        </Route>\n    );\n});\n\nexport default SidebarNavButton;\n","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst BoxSign28 = (props: SVGProps) => (\n    <AccessibleSVG width={28} height={28} viewBox=\"0 0 28 28\" {...props}>\n        <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n                fill={vars.bdlDarkBlue}\n                d=\"M0 7.692v12.616c0 2.675.278 3.645.801 4.623a5.452 5.452 0 002.268 2.268c.978.523 1.948.801 4.623.801h12.616c2.675 0 3.645-.278 4.623-.801a5.452 5.452 0 002.268-2.268c.523-.978.801-1.948.801-4.623V7.692c0-2.675-.278-3.645-.801-4.623A5.452 5.452 0 0024.93.801C23.953.278 22.983 0 20.308 0H7.692C5.017 0 4.047.278 3.069.801A5.452 5.452 0 00.801 3.07C.278 4.047 0 5.017 0 7.692z\"\n            />\n            <path\n                fill={vars.white}\n                d=\"M21.5 21a.5.5 0 010 1h-15a.5.5 0 110-1h15zM12 6c1.936 0 3.192 2.265 2.997 4.584-.14 1.652-1.278 3.625-2.87 5.267l-.11.111.078.123c.359.54.793.863 1.282.91L13.5 17c.394 0 .73-.251 1.179-.887l.197-.295.35-.544.155-.226.142-.193C15.94 14.32 16.381 14 17 14c.674 0 1.139.39 1.468.983.077.138.139.266.203.422l.099.258.32.93.07.192.081.185.11-.03c.243-.08.508-.245.796-.507l.146-.14a1 1 0 111.414 1.414C20.867 18.547 19.961 19 19 19c-.674 0-1.138-.39-1.468-.983a3.822 3.822 0 01-.202-.422l-.1-.258-.332-.965-.44.683C15.613 18.32 14.781 19 13.5 19c-1.252 0-2.229-.576-2.948-1.558l-.09-.127-.058.043c-.916.674-1.9 1.21-2.883 1.529l-.246.075a1 1 0 11-.55-1.924c.921-.263 1.867-.797 2.738-1.475l.127-.103-.031-.1c-.36-1.175-.542-2.568-.558-4.079v-.284C9.008 8.197 10.052 6 12 6zm0 2c-.437 0-.994 1.173-1 3.003-.003.963.074 1.854.217 2.638l.038.196.165-.197c.84-1.038 1.427-2.136 1.563-3.045l.02-.179C13.114 9.111 12.499 8 12 8zm5 3a1 1 0 110 2 1 1 0 010-2z\"\n            />\n        </g>\n    </AccessibleSVG>\n);\n\nexport default BoxSign28;\n","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst Sign16 = (props: SVGProps) => (\n    <AccessibleSVG width={16} height={16} viewBox=\"0 0 16 16\" {...props}>\n        <path\n            fill={vars.bdlGray40}\n            d=\"M15.5 15a.5.5 0 110 1H.5a.5.5 0 110-1h15zM6 0c1.936 0 3.191 2.265 2.996 4.584-.138 1.652-1.277 3.625-2.87 5.267l-.11.111.078.123c.36.54.794.863 1.283.91L7.5 11c.393 0 .73-.251 1.179-.887l.197-.295.35-.544.154-.226.143-.193C9.94 8.32 10.381 8 11 8c.674 0 1.138.39 1.468.983.076.138.139.266.202.422l.1.258.319.93.071.192.081.185.11-.03c.243-.08.508-.245.796-.507l.146-.14a1 1 0 011.414 1.414C14.867 12.547 13.961 13 13 13c-.674 0-1.138-.39-1.468-.983a3.822 3.822 0 01-.202-.422l-.1-.258-.332-.965-.44.683C9.613 12.32 8.781 13 7.5 13c-1.252 0-2.23-.576-2.949-1.558l-.09-.127-.057.043c-.916.674-1.9 1.21-2.884 1.529l-.245.075a1 1 0 11-.55-1.924c.92-.263 1.867-.797 2.737-1.475l.128-.103-.032-.1c-.359-1.175-.541-2.568-.557-4.079L3 4.997C3.009 2.197 4.053 0 6 0zm0 2c-.437 0-.994 1.173-1 3.003-.003.963.073 1.854.217 2.638l.038.196.165-.197c.84-1.038 1.427-2.136 1.563-3.045l.02-.179C7.114 3.111 6.498 2 6 2zm5 3a1 1 0 110 2 1 1 0 010-2z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default Sign16;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { injectIntl, IntlShape } from 'react-intl';\nimport BoxSign28 from '../../icon/logo/BoxSign28';\nimport Sign16 from '../../icon/fill/Sign16';\nimport PlainButton, { PlainButtonProps } from '../../components/plain-button';\n// @ts-ignore Module is written in Flow\nimport TargetedClickThroughGuideTooltip from '../../features/targeting/TargetedClickThroughGuideTooltip';\nimport Tooltip, { TooltipPosition } from '../../components/tooltip';\n// @ts-ignore Module is written in Flow\nimport messages from './messages';\nimport './SidebarNavSignButton.scss';\n\nexport type Props = PlainButtonProps & {\n    blockedReason?: string;\n    intl: IntlShape;\n    status?: string;\n    targetingApi?: {\n        canShow: boolean;\n        onClose: () => void;\n        onComplete: () => void;\n        onShow: () => void;\n    };\n};\n\nexport const PlaceholderTooltip = ({ children }: { children: React.ReactNode }) => children;\n\nexport function SidebarNavSignButton({ blockedReason, intl, status, targetingApi, ...rest }: Props) {\n    const isSignDisabled = !!blockedReason;\n    const isTargeted = targetingApi && targetingApi.canShow;\n    const FtuxTooltip = !isSignDisabled && isTargeted ? TargetedClickThroughGuideTooltip : PlaceholderTooltip;\n    const label = intl.formatMessage(status === 'active' ? messages.boxSignSignature : messages.boxSignRequest);\n    const buttonClassName = classnames('bcs-SidebarNavSignButton', { 'bdl-is-disabled': isSignDisabled });\n\n    let tooltipMessage = label;\n\n    switch (blockedReason) {\n        case 'shield-download':\n        case 'shared-link':\n        case 'shield-sign':\n            tooltipMessage = intl.formatMessage(messages.boxSignSecurityBlockedTooltip);\n            break;\n        case 'watermark':\n            tooltipMessage = intl.formatMessage(messages.boxSignWatermarkBlockedTooltip);\n            break;\n        default:\n    }\n\n    return (\n        <FtuxTooltip\n            body={intl.formatMessage(messages.boxSignFtuxBody)}\n            position={TooltipPosition.MIDDLE_LEFT}\n            shouldTarget={isTargeted}\n            title={intl.formatMessage(messages.boxSignFtuxTitle)}\n            useTargetingApi={() => targetingApi}\n        >\n            <Tooltip isDisabled={isTargeted} position={TooltipPosition.MIDDLE_LEFT} text={tooltipMessage}>\n                <PlainButton\n                    aria-label={label}\n                    className={buttonClassName}\n                    data-testid=\"sign-button\"\n                    isDisabled={isSignDisabled}\n                    {...rest}\n                >\n                    <BoxSign28 className=\"bcs-SidebarNavSignButton-icon\" />\n                    <Sign16 width={20} height={20} className=\"bcs-SidebarNavSignButton-icon--grayscale\" />\n                </PlainButton>\n            </Tooltip>\n        </FtuxTooltip>\n    );\n}\n\nexport default injectIntl(SidebarNavSignButton);\n","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst SignMe32 = (props: SVGProps) => (\n    <AccessibleSVG width={32} height={32} viewBox=\"0 0 32 32\" {...props}>\n        <path\n            fill={vars.bdlGray50}\n            d=\"M16.005 15.787c.658 0 1.26-.175 1.804-.525.543-.35.978-.821 1.305-1.415.326-.594.49-1.26.49-1.995a3.896 3.896 0 00-1.8-3.332 3.296 3.296 0 00-1.8-.52 3.29 3.29 0 00-1.808.524c-.547.35-.983.816-1.31 1.397a3.825 3.825 0 00-.48 1.94c0 .73.162 1.392.485 1.986a3.817 3.817 0 001.3 1.415c.544.35 1.149.525 1.814.525zM21.43 24c.777 0 1.316-.12 1.618-.357.301-.239.452-.571.452-.998 0-.57-.176-1.162-.527-1.777-.35-.616-.854-1.193-1.51-1.731s-1.445-.976-2.368-1.313c-.923-.338-1.953-.506-3.09-.506-1.144 0-2.177.168-3.1.506-.923.337-1.712.775-2.368 1.313-.656.538-1.16 1.115-1.51 1.73-.351.616-.527 1.209-.527 1.778 0 .427.15.76.452.998.302.238.838.357 1.608.357h10.87z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default SignMe32;\n","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst SignMeOthers32 = (props: SVGProps) => (\n    <AccessibleSVG width={32} height={32} viewBox=\"0 0 32 32\" {...props}>\n        <path\n            fill={vars.bdlGray50}\n            d=\"M16 16.044c.672 0 1.287-.182 1.843-.547a3.97 3.97 0 001.33-1.468c.331-.614.497-1.298.497-2.051 0-.73-.166-1.397-.496-2.002a3.89 3.89 0 00-1.33-1.442A3.352 3.352 0 0016 8c-.672 0-1.288.18-1.848.538-.56.36-1.004.841-1.335 1.446a4.109 4.109 0 00-.495 2.003c.006.753.172 1.437.5 2.05a3.9 3.9 0 001.326 1.465 3.326 3.326 0 001.852.542zm-9.626.196c.585 0 1.122-.161 1.609-.485a3.516 3.516 0 001.165-1.299c.29-.543.435-1.143.435-1.802 0-.64-.147-1.225-.44-1.753a3.541 3.541 0 00-1.165-1.268 2.865 2.865 0 00-1.604-.476 2.9 2.9 0 00-1.617.476A3.47 3.47 0 003.59 10.91a3.545 3.545 0 00-.426 1.753c0 .664.145 1.267.435 1.806.29.54.675.97 1.157 1.29.48.321 1.02.481 1.617.481zm19.252 0a2.86 2.86 0 001.613-.48c.484-.32.871-.75 1.161-1.29a3.83 3.83 0 00.443-1.807c0-.635-.144-1.22-.434-1.753-.29-.534-.68-.96-1.17-1.277a2.906 2.906 0 00-1.613-.476c-.585 0-1.122.159-1.609.476a3.49 3.49 0 00-1.165 1.268 3.582 3.582 0 00-.435 1.753c0 .659.145 1.26.435 1.802.29.543.677.976 1.161 1.3a2.841 2.841 0 001.613.484zM6.374 14.514a1.3 1.3 0 01-.765-.245 1.744 1.744 0 01-.557-.663 2.084 2.084 0 01-.209-.943c-.005-.326.061-.626.2-.899.14-.273.327-.49.561-.65a1.337 1.337 0 011.53 0c.236.16.423.376.562.646.139.27.208.568.208.894 0 .35-.07.666-.208.948a1.72 1.72 0 01-.561.667 1.307 1.307 0 01-.761.245zm19.252 0a1.3 1.3 0 01-.765-.245 1.736 1.736 0 01-.557-.667 2.112 2.112 0 01-.208-.948c0-.326.07-.624.208-.894.14-.27.325-.485.557-.645.232-.16.487-.24.765-.24s.533.08.765.24c.232.16.42.376.561.65.142.272.21.572.205.898 0 .35-.07.664-.21.943-.138.28-.324.5-.556.663a1.3 1.3 0 01-.765.245zM21.07 24c1.484 0 2.226-.534 2.226-1.602 0-.617-.177-1.241-.53-1.873-.354-.632-.854-1.215-1.5-1.749-.647-.534-1.417-.964-2.31-1.29-.892-.326-1.88-.49-2.965-.49-1.084 0-2.072.164-2.965.49-.893.326-1.662.756-2.309 1.29-.646.534-1.145 1.117-1.495 1.749-.351.632-.526 1.256-.526 1.873 0 1.068.742 1.602 2.226 1.602H21.07zM8.209 24c-.267-.16-.468-.406-.605-.739a2.149 2.149 0 01-.17-.978H2.01c-.07 0-.12-.017-.148-.05a.2.2 0 01-.044-.137c0-.427.12-.843.357-1.246.238-.404.565-.767.983-1.09.417-.324.9-.582 1.447-.774a5.266 5.266 0 012.548-.223c.276.045.54.105.796.182.255.078.481.167.678.267a3.772 3.772 0 011.261-1.299 6.842 6.842 0 00-1.1-.494 7.502 7.502 0 00-2.422-.422c-.88 0-1.706.144-2.474.431a6.76 6.76 0 00-2.03 1.18A5.576 5.576 0 00.49 20.31 4.335 4.335 0 000 22.318c0 .546.158.963.474 1.25.316.288.793.432 1.43.432H8.21zm21.878 0c.638 0 1.116-.144 1.435-.432.319-.287.478-.704.478-1.25 0-.7-.164-1.369-.491-2.007a5.576 5.576 0 00-1.37-1.704 6.76 6.76 0 00-2.03-1.179 6.995 6.995 0 00-2.474-.431 7.502 7.502 0 00-2.43.423c-.398.139-.764.303-1.1.493a3.672 3.672 0 011.26 1.3c.197-.101.425-.19.683-.268.258-.077.523-.137.795-.182a5.266 5.266 0 014 .997c.418.323.745.686.983 1.09.238.403.357.819.357 1.246a.19.19 0 01-.048.138c-.032.032-.08.049-.144.049h-5.434c.029.32-.027.646-.166.978-.139.333-.339.579-.6.739h6.296z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default SignMeOthers32;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\n// @ts-ignore Module is written in Flow\nimport { useFeatureConfig } from '../common/feature-checking';\n// @ts-ignore Module is written in Flow\nimport { SIDEBAR_NAV_TARGETS } from '../common/interactionTargets';\n\n// @ts-ignore Module is written in Flow\nimport DropdownMenu from '../../components/dropdown-menu';\nimport SidebarNavSignButton from './SidebarNavSignButton';\nimport SignMe32 from '../../icon/fill/SignMe32';\nimport SignMeOthers32 from '../../icon/fill/SignMeOthers32';\nimport { Menu, MenuItem } from '../../components/menu';\n\n// @ts-ignore Module is written in Flow\nimport messages from './messages';\n\nimport './SidebarNavSign.scss';\n\nexport function SidebarNavSign() {\n    const {\n        blockedReason: boxSignBlockedReason,\n        onClick: onBoxClickRequestSignature,\n        onClickSignMyself: onBoxClickSignMyself,\n        status: boxSignStatus,\n        targetingApi: boxSignTargetingApi,\n        isSignRemoveInterstitialEnabled,\n    } = useFeatureConfig('boxSign');\n\n    return (\n        <>\n            {isSignRemoveInterstitialEnabled ? (\n                <DropdownMenu isResponsive constrainToWindow isRightAligned>\n                    <SidebarNavSignButton\n                        blockedReason={boxSignBlockedReason}\n                        status={boxSignStatus}\n                        targetingApi={boxSignTargetingApi}\n                        data-resin-target={SIDEBAR_NAV_TARGETS.SIGN}\n                    />\n                    <Menu>\n                        <MenuItem data-testid=\"sign-request-signature-button\" onClick={onBoxClickRequestSignature}>\n                            <SignMeOthers32 width={16} height={16} className=\"bcs-SidebarNavSign-icon\" />\n                            <FormattedMessage {...messages.boxSignRequestSignature} />\n                        </MenuItem>\n                        <MenuItem data-testid=\"sign-sign-myself-button\" onClick={onBoxClickSignMyself}>\n                            <SignMe32 width={16} height={16} className=\"bcs-SidebarNavSign-icon\" />\n                            <FormattedMessage {...messages.boxSignSignMyself} />\n                        </MenuItem>\n                    </Menu>\n                </DropdownMenu>\n            ) : (\n                <SidebarNavSignButton\n                    blockedReason={boxSignBlockedReason}\n                    data-resin-target={SIDEBAR_NAV_TARGETS.SIGN}\n                    onClick={onBoxClickRequestSignature}\n                    status={boxSignStatus}\n                    targetingApi={boxSignTargetingApi}\n                />\n            )}\n        </>\n    );\n}\n\nexport default SidebarNavSign;\n","/**\n * @flow\n * @file Content Sidebar nav tablist Component\n * @author Box\n */\n\nimport * as React from 'react';\nimport type { RouterHistory } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { KEYS } from '../../constants';\nimport type { NavigateOptions } from './flowTypes';\n\ntype Props = {\n    children: React.Node,\n    elementId: string,\n    history: RouterHistory,\n    isOpen?: boolean,\n    onNavigate?: (SyntheticEvent<>, NavigateOptions) => void,\n};\n\nconst SidebarNavTablist = ({ children, history, elementId, isOpen, onNavigate }: Props) => {\n    const refs = [];\n    const tablist = React.Children.map(children, child => child && `/${child.props.sidebarView}`);\n    const handleKeyDown = (event: SyntheticKeyboardEvent<>): void => {\n        const currentIndex = tablist.indexOf(history.location.pathname);\n        const { length } = tablist;\n        let nextIndex = currentIndex;\n        switch (event.key) {\n            case KEYS.arrowUp:\n                nextIndex = (currentIndex - 1 + length) % length;\n\n                history.push(tablist[nextIndex]);\n                if (refs.length > 0) {\n                    refs[nextIndex].focus();\n                }\n\n                event.stopPropagation();\n                event.preventDefault();\n                break;\n            case KEYS.arrowDown:\n                nextIndex = (currentIndex + 1) % length;\n\n                history.push(tablist[nextIndex]);\n                if (refs.length > 0) {\n                    refs[nextIndex].focus();\n                }\n\n                event.stopPropagation();\n                event.preventDefault();\n                break;\n            default:\n                break;\n        }\n    };\n\n    return (\n        <div\n            aria-orientation=\"vertical\"\n            className=\"bcs-SidebarNav-main\"\n            role=\"tablist\"\n            tabIndex=\"0\"\n            onKeyDown={handleKeyDown}\n        >\n            {React.Children.map(children, tab => {\n                if (!tab) {\n                    return null;\n                }\n\n                return React.cloneElement(tab, {\n                    elementId,\n                    isOpen,\n                    onNavigate,\n                    ref: ref => {\n                        refs.push(ref);\n                    },\n                    ...tab.props,\n                });\n            })}\n        </div>\n    );\n};\n\nexport default withRouter(SidebarNavTablist);\n","import * as React from 'react';\n\nimport { bdlGray50 } from '../../styles/variables';\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconHide = ({ className = '', color = bdlGray50, height = 16, title, width = 16 }: Icon) => (\n    <AccessibleSVG className={`icon-hide ${className}`} title={title} width={width} height={height} viewBox=\"0 0 16 16\">\n        <path\n            d=\"M7.646 7.646L4.354 4.354a.5.5 0 0 1 0-.708l1.292-1.292a.5.5 0 0 1 .708 0l5.292 5.292a.5.5 0 0 1 0 .708l-5.292 5.292a.5.5 0 0 1-.708 0l-1.292-1.292a.5.5 0 0 1 0-.708l3.292-3.292a.5.5 0 0 0 0-.708z\"\n            fill={color}\n            fillRule=\"nonzero\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconHide;\n","import * as React from 'react';\n\nimport { bdlGray50 } from '../../styles/variables';\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconShow = ({ className = '', color = bdlGray50, height = 16, title, width = 16 }: Icon) => (\n    <AccessibleSVG className={`icon-show ${className}`} title={title} width={width} height={height} viewBox=\"0 0 16 16\">\n        <path\n            d=\"M7.354 7.646l3.292-3.292a.5.5 0 0 0 0-.708L9.354 2.354a.5.5 0 0 0-.708 0L3.354 7.646a.5.5 0 0 0 0 .708l5.292 5.292a.5.5 0 0 0 .708 0l1.292-1.292a.5.5 0 0 0 0-.708L7.354 8.354a.5.5 0 0 1 0-.708z\"\n            fill={color}\n            fillRule=\"nonzero\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconShow;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\n\nimport IconHide from '../../icons/general/IconHide';\nimport IconShow from '../../icons/general/IconShow';\nimport PlainButton from '../plain-button';\nimport Tooltip from '../tooltip';\n\nimport messages from '../../elements/common/messages';\n\nimport './SidebarToggleButton.scss';\n\nconst DIRECTION_LEFT = 'left';\nconst DIRECTION_RIGHT = 'right';\n\ntype Props = {\n    className?: string,\n    direction?: string,\n    isOpen: boolean,\n    onClick?: Function,\n} & InjectIntlProvidedProps;\n\nconst SidebarToggleButton = ({\n    className = '',\n    direction = DIRECTION_RIGHT,\n    intl,\n    isOpen,\n    onClick,\n    ...rest\n}: Props) => {\n    const isCollapsed = !isOpen ? 'collapsed' : '';\n    const intlMessage = isOpen ? messages.sidebarHide : messages.sidebarShow;\n    const intlText = intl.formatMessage(intlMessage);\n    const classes = classNames(className, 'bdl-SidebarToggleButton', {\n        'bdl-is-collapsed': isCollapsed,\n    });\n    const tooltipPosition = direction === DIRECTION_LEFT ? 'middle-right' : 'middle-left';\n\n    const renderButton = () => {\n        if (direction === DIRECTION_LEFT) {\n            return isOpen ? <IconShow height={16} width={16} /> : <IconHide height={16} width={16} />;\n        }\n        return isOpen ? <IconHide height={16} width={16} /> : <IconShow height={16} width={16} />;\n    };\n\n    return (\n        <Tooltip position={tooltipPosition} text={intlText}>\n            <PlainButton aria-label={intlText} className={classes} onClick={onClick} type=\"button\" {...rest}>\n                {renderButton()}\n            </PlainButton>\n        </Tooltip>\n    );\n};\n\nexport default injectIntl(SidebarToggleButton);\n","/**\n * @flow strict\n * @file Sidebar Toggle component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { withRouter, type RouterHistory } from 'react-router-dom';\nimport SidebarToggleButton from '../../components/sidebar-toggle-button/SidebarToggleButton';\nimport { SIDEBAR_NAV_TARGETS } from '../common/interactionTargets';\n\ntype Props = {\n    history: RouterHistory,\n    isOpen?: boolean,\n};\n\nconst SidebarToggle = ({ history, isOpen }: Props) => {\n    return (\n        <SidebarToggleButton\n            data-resin-target={SIDEBAR_NAV_TARGETS.TOGGLE}\n            data-testid=\"sidebartoggle\"\n            // $FlowFixMe\n            isOpen={isOpen}\n            onClick={event => {\n                event.preventDefault();\n                history.replace({ state: { open: !isOpen } });\n            }}\n        />\n    );\n};\n\nexport { SidebarToggle as SidebarToggleComponent };\nexport default withRouter(SidebarToggle);\n","/**\n * @flow\n * @file Preview sidebar nav component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport AdditionalTabs from './additional-tabs';\nimport IconChatRound from '../../icons/general/IconChatRound';\nimport IconDocInfo from '../../icons/general/IconDocInfo';\nimport IconMagicWand from '../../icons/general/IconMagicWand';\nimport IconMetadataThick from '../../icons/general/IconMetadataThick';\nimport SidebarNavButton from './SidebarNavButton';\nimport SidebarNavSign from './SidebarNavSign';\nimport SidebarNavTablist from './SidebarNavTablist';\nimport SidebarToggle from './SidebarToggle';\nimport messages from '../common/messages';\nimport { SIDEBAR_NAV_TARGETS } from '../common/interactionTargets';\nimport {\n    SIDEBAR_VIEW_SKILLS,\n    SIDEBAR_VIEW_ACTIVITY,\n    SIDEBAR_VIEW_DETAILS,\n    SIDEBAR_VIEW_METADATA,\n} from '../../constants';\nimport { useFeatureConfig } from '../common/feature-checking';\nimport type { NavigateOptions, AdditionalSidebarTab } from './flowTypes';\nimport './SidebarNav.scss';\n\ntype Props = {\n    additionalTabs?: Array<AdditionalSidebarTab>,\n    elementId: string,\n    fileId: string,\n    hasActivity: boolean,\n    hasAdditionalTabs: boolean,\n    hasDetails: boolean,\n    hasMetadata: boolean,\n    hasSkills: boolean,\n    isOpen?: boolean,\n    onNavigate?: (SyntheticEvent<>, NavigateOptions) => void,\n} & InjectIntlProvidedProps;\n\nconst SidebarNav = ({\n    additionalTabs,\n    elementId,\n    fileId,\n    hasActivity,\n    hasAdditionalTabs,\n    hasDetails,\n    hasMetadata,\n    hasSkills,\n    intl,\n    isOpen,\n    onNavigate,\n}: Props) => {\n    const { enabled: hasBoxSign } = useFeatureConfig('boxSign');\n\n    return (\n        <div className=\"bcs-SidebarNav\" aria-label={intl.formatMessage(messages.sidebarNavLabel)}>\n            <div className=\"bcs-SidebarNav-tabs\">\n                <SidebarNavTablist elementId={elementId} isOpen={isOpen} onNavigate={onNavigate}>\n                    {hasActivity && (\n                        <SidebarNavButton\n                            data-resin-target={SIDEBAR_NAV_TARGETS.ACTIVITY}\n                            data-testid=\"sidebaractivity\"\n                            sidebarView={SIDEBAR_VIEW_ACTIVITY}\n                            tooltip={intl.formatMessage(messages.sidebarActivityTitle)}\n                        >\n                            <IconChatRound />\n                        </SidebarNavButton>\n                    )}\n                    {hasDetails && (\n                        <SidebarNavButton\n                            data-resin-target={SIDEBAR_NAV_TARGETS.DETAILS}\n                            data-testid=\"sidebardetails\"\n                            sidebarView={SIDEBAR_VIEW_DETAILS}\n                            tooltip={intl.formatMessage(messages.sidebarDetailsTitle)}\n                        >\n                            <IconDocInfo />\n                        </SidebarNavButton>\n                    )}\n                    {hasSkills && (\n                        <SidebarNavButton\n                            data-resin-target={SIDEBAR_NAV_TARGETS.SKILLS}\n                            data-testid=\"sidebarskills\"\n                            sidebarView={SIDEBAR_VIEW_SKILLS}\n                            tooltip={intl.formatMessage(messages.sidebarSkillsTitle)}\n                        >\n                            <IconMagicWand />\n                        </SidebarNavButton>\n                    )}\n                    {hasMetadata && (\n                        <SidebarNavButton\n                            data-resin-target={SIDEBAR_NAV_TARGETS.METADATA}\n                            data-testid=\"sidebarmetadata\"\n                            sidebarView={SIDEBAR_VIEW_METADATA}\n                            tooltip={intl.formatMessage(messages.sidebarMetadataTitle)}\n                        >\n                            <IconMetadataThick />\n                        </SidebarNavButton>\n                    )}\n                </SidebarNavTablist>\n\n                {hasBoxSign && (\n                    <div className=\"bcs-SidebarNav-secondary\">\n                        <SidebarNavSign />\n                    </div>\n                )}\n\n                {hasAdditionalTabs && (\n                    <div className=\"bcs-SidebarNav-overflow\">\n                        <AdditionalTabs key={fileId} tabs={additionalTabs} />\n                    </div>\n                )}\n            </div>\n            <div className=\"bcs-SidebarNav-footer\">\n                <SidebarToggle isOpen={isOpen} />\n            </div>\n        </div>\n    );\n};\nexport default injectIntl(SidebarNav);\n","/**\n * @flow\n * @file a placeholder component which will be displayed while a code splitted sidebar chunk is being loaded asyncronously\n * @author Box\n */\nimport * as React from 'react';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport SidebarContent from './SidebarContent';\nimport SidebarSection from './SidebarSection';\nimport './SidebarLoading.scss';\n\ntype Props = {\n    title: React.Node,\n};\n\nconst SidebarLoading = ({ title }: Props) => {\n    return (\n        <SidebarContent title={title}>\n            <SidebarSection isOpen>\n                <LoadingIndicator className=\"bcs-sidebar-loading\" />\n            </SidebarSection>\n        </SidebarContent>\n    );\n};\n\nexport default SidebarLoading;\n","import * as React from 'react';\nimport DefaultError from '../common/error-boundary/DefaultError';\nimport './SidebarLoadingError.scss';\n\nconst SidebarLoadingError = () => (\n    <div className=\"bcs-loading-error\">\n        <DefaultError />\n    </div>\n);\n\nexport default SidebarLoadingError;\n","/**\n * @flow\n * @file Utility for sidebar\n * @author Box\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport AsyncLoad from '../common/async-load';\nimport messages from '../common/messages';\nimport SidebarLoading from './SidebarLoading';\nimport SidebarLoadingError from './SidebarLoadingError';\nimport { hasSkills as hasSkillsData } from './skills/skillUtils';\nimport { mark } from '../../utils/performance';\nimport {\n    SIDEBAR_VIEW_SKILLS,\n    SIDEBAR_VIEW_ACTIVITY,\n    SIDEBAR_VIEW_METADATA,\n    SIDEBAR_VIEW_DETAILS,\n    SIDEBAR_VIEW_VERSIONS,\n} from '../../constants';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\nimport type { MetadataEditor } from '../../common/types/metadata';\nimport type { BoxItem } from '../../common/types/core';\n\nclass SidebarUtils {\n    /**\n     * Determines if we can render the details sidebar.\n     * Only relies on props.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @return {Boolean} true if we should render\n     */\n    static canHaveDetailsSidebar({ detailsSidebarProps = {} }: ContentSidebarProps): boolean {\n        const { hasProperties, hasAccessStats, hasClassification, hasVersions, hasNotices } = detailsSidebarProps;\n        return !!hasProperties || !!hasAccessStats || !!hasClassification || !!hasVersions || !!hasNotices;\n    }\n\n    /**\n     * Determines if we can render the metadata sidebar.\n     * Only relies on props.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @return {Boolean} true if we should render\n     */\n    static canHaveMetadataSidebar(props: ContentSidebarProps): boolean {\n        return !!props.hasMetadata;\n    }\n\n    /**\n     * Determines if we can render the activity sidebar.\n     * Only relies on props.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @return {Boolean} true if we should render\n     */\n    static canHaveActivitySidebar(props: ContentSidebarProps): boolean {\n        return !!props.hasActivityFeed;\n    }\n\n    /**\n     * Determines if we can render the skills sidebar.\n     * Only relies on props.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @return {Boolean} true if we should render\n     */\n    static canHaveSkillsSidebar(props: ContentSidebarProps): boolean {\n        return !!props.hasSkills;\n    }\n\n    /**\n     * Determines if we can render the sidebar.\n     * Only relies on props.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @return {Boolean} true if we should have a sidebar\n     */\n    static canHaveSidebar(props: ContentSidebarProps): boolean {\n        return (\n            SidebarUtils.canHaveDetailsSidebar(props) ||\n            SidebarUtils.canHaveActivitySidebar(props) ||\n            SidebarUtils.canHaveSkillsSidebar(props) ||\n            SidebarUtils.canHaveMetadataSidebar(props)\n        );\n    }\n\n    /**\n     * Determines if we should bother rendering the skills sidebar.\n     * Relies on props and file data.\n     *\n     * @private\n     * @param {ContentSidebarProps} props - User passed in props\n     * @param {BoxItem} file - box file\n     * @return {Boolean} true if we should render\n     */\n    static shouldRenderSkillsSidebar(props: ContentSidebarProps, file?: BoxItem): boolean {\n        return !!file && SidebarUtils.canHaveSkillsSidebar(props) && hasSkillsData(file);\n    }\n\n    /**\n     * Determines if we should bother rendering the metadata sidebar.\n     * Relies on props and metadata data and feature enabled or not.\n     *\n     * @private\n     * @param {ContentSidebarProps} props - User passed in props\n     * @param {Array<MetadataEditor>} editors - metadata editors\n     * @return {Boolean} true if we should render\n     */\n    static shouldRenderMetadataSidebar(props: ContentSidebarProps, editors?: Array<MetadataEditor>): boolean {\n        const { metadataSidebarProps = {} }: ContentSidebarProps = props;\n        const { isFeatureEnabled = true }: MetadataSidebarProps = metadataSidebarProps;\n\n        return (\n            SidebarUtils.canHaveMetadataSidebar(props) &&\n            (isFeatureEnabled || (Array.isArray(editors) && editors.length > 0))\n        );\n    }\n\n    /**\n     * Determines if we should bother rendering the sidebar.\n     * Relies on props and file data.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @param {BoxItem} file - box file\n     * @param {Array<MetadataEditor>} editors - metadata editors\n     * @return {Boolean} true if we should fetch or render\n     */\n    static shouldRenderSidebar(props: ContentSidebarProps, file?: BoxItem, editors?: Array<MetadataEditor>): boolean {\n        return (\n            !!file &&\n            (SidebarUtils.canHaveDetailsSidebar(props) ||\n                SidebarUtils.shouldRenderSkillsSidebar(props, file) ||\n                SidebarUtils.canHaveActivitySidebar(props) ||\n                SidebarUtils.shouldRenderMetadataSidebar(props, editors))\n        );\n    }\n\n    /**\n     * Gets the title for a given sidebar view\n     *\n     * @param {string} view - the view name\n     * @return {React.Node} - the node to render\n     */\n    static getTitleForView(view: string): React.Node {\n        switch (view) {\n            case SIDEBAR_VIEW_SKILLS:\n                return <FormattedMessage {...messages.sidebarSkillsTitle} />;\n            case SIDEBAR_VIEW_DETAILS:\n                return <FormattedMessage {...messages.sidebarDetailsTitle} />;\n            case SIDEBAR_VIEW_METADATA:\n                return <FormattedMessage {...messages.sidebarMetadataTitle} />;\n            case SIDEBAR_VIEW_ACTIVITY:\n                return <FormattedMessage {...messages.sidebarActivityTitle} />;\n            default:\n                return null;\n        }\n    }\n\n    /**\n     * Marks and gets the loader for a given sidebar view\n     *\n     * @param {String} view - the view name\n     * @param {String} markName -  the name to be used by performance.mark\n     * @return {Function} - a function which will resolve the module to load\n     */\n    static getLoaderForView(view: string, markName: string): Promise<any> {\n        mark(markName);\n        let importFn;\n        switch (view) {\n            case SIDEBAR_VIEW_SKILLS:\n                importFn = import(/* webpackMode: \"lazy\", webpackChunkName: \"skills-sidebar\" */ './SkillsSidebar');\n                break;\n            case SIDEBAR_VIEW_DETAILS:\n                importFn = import(/* webpackMode: \"lazy\", webpackChunkName: \"details-sidebar\" */ './DetailsSidebar');\n                break;\n            case SIDEBAR_VIEW_METADATA:\n                importFn = import(/* webpackMode: \"lazy\", webpackChunkName: \"metadata-sidebar\" */ './MetadataSidebar');\n                break;\n            case SIDEBAR_VIEW_ACTIVITY:\n                importFn = import(/* webpackMode: \"lazy\", webpackChunkName: \"activity-sidebar\" */ './ActivitySidebar');\n                break;\n            case SIDEBAR_VIEW_VERSIONS:\n                importFn = import(/* webpackMode: \"lazy\", webpackChunkName: \"versions-sidebar\" */ './versions');\n                break;\n            default:\n                return Promise.resolve(null);\n        }\n\n        return importFn;\n    }\n\n    /**\n     * Gets the component which async loads a given sidebar view\n     *\n     * @param {String} view - the view name\n     * @param {String} markName -  the name to be used by performance.mark\n     * @param {Object} props - additional props\n     * @return {React.Node} - the node to render\n     */\n    static getAsyncSidebarContent(view: string, markName: string, props: Object = {}) {\n        return AsyncLoad({\n            errorComponent: SidebarLoadingError,\n            fallback: <SidebarLoading title={this.getTitleForView(view)} />,\n            loader: () => this.getLoaderForView(view, markName),\n            ...props,\n        });\n    }\n}\n\nexport default SidebarUtils;\n","/**\n * @flow\n * @file Content Sidebar Panels component\n * @author Box\n */\n\nimport * as React from 'react';\nimport flow from 'lodash/flow';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport SidebarUtils from './SidebarUtils';\nimport withSidebarAnnotations from './withSidebarAnnotations';\nimport { withAnnotatorContext } from '../common/annotator-context';\nimport { withAPIContext } from '../common/api-context';\nimport { withRouterAndRef } from '../common/routing';\nimport {\n    ORIGIN_ACTIVITY_SIDEBAR,\n    ORIGIN_DETAILS_SIDEBAR,\n    ORIGIN_METADATA_SIDEBAR,\n    ORIGIN_SKILLS_SIDEBAR,\n    ORIGIN_VERSIONS_SIDEBAR,\n    SIDEBAR_VIEW_ACTIVITY,\n    SIDEBAR_VIEW_DETAILS,\n    SIDEBAR_VIEW_METADATA,\n    SIDEBAR_VIEW_SKILLS,\n    SIDEBAR_VIEW_VERSIONS,\n} from '../../constants';\nimport type { DetailsSidebarProps } from './DetailsSidebar';\nimport type { ActivitySidebarProps } from './ActivitySidebar';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\nimport type { VersionsSidebarProps } from './versions';\nimport type { User, BoxItem } from '../../common/types/core';\nimport type { Errors } from '../common/flowTypes';\n\ntype Props = {\n    activitySidebarProps: ActivitySidebarProps,\n    currentUser?: User,\n    currentUserError?: Errors,\n    detailsSidebarProps: DetailsSidebarProps,\n    elementId: string,\n    file: BoxItem,\n    fileId: string,\n    getPreview: Function,\n    getViewer: Function,\n    hasActivity: boolean,\n    hasDetails: boolean,\n    hasMetadata: boolean,\n    hasSkills: boolean,\n    hasVersions: boolean,\n    isOpen: boolean,\n    metadataSidebarProps: MetadataSidebarProps,\n    onAnnotationSelect?: Function,\n    onVersionChange?: Function,\n    onVersionHistoryClick?: Function,\n    versionsSidebarProps: VersionsSidebarProps,\n};\n\ntype State = {\n    isInitialized: boolean,\n};\n\ntype ElementRefType = {\n    current: null | Object,\n};\n\n// TODO: place into code splitting logic\nconst BASE_EVENT_NAME = '_JS_LOADING';\nconst MARK_NAME_JS_LOADING_DETAILS = `${ORIGIN_DETAILS_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_ACTIVITY = `${ORIGIN_ACTIVITY_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_SKILLS = `${ORIGIN_SKILLS_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_METADATA = `${ORIGIN_METADATA_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_VERSIONS = `${ORIGIN_VERSIONS_SIDEBAR}${BASE_EVENT_NAME}`;\n\nconst URL_TO_FEED_ITEM_TYPE = { annotations: 'annotation', comments: 'comment', tasks: 'task' };\n\nconst LoadableDetailsSidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_DETAILS, MARK_NAME_JS_LOADING_DETAILS);\nconst LoadableActivitySidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_ACTIVITY,\n    MARK_NAME_JS_LOADING_ACTIVITY,\n);\nconst LoadableSkillsSidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_SKILLS, MARK_NAME_JS_LOADING_SKILLS);\nconst LoadableMetadataSidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_METADATA,\n    MARK_NAME_JS_LOADING_METADATA,\n);\nconst LoadableVersionsSidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_VERSIONS,\n    MARK_NAME_JS_LOADING_VERSIONS,\n);\n\nclass SidebarPanels extends React.Component<Props, State> {\n    activitySidebar: ElementRefType = React.createRef();\n\n    detailsSidebar: ElementRefType = React.createRef();\n\n    metadataSidebar: ElementRefType = React.createRef();\n\n    state: State = { isInitialized: false };\n\n    versionsSidebar: ElementRefType = React.createRef();\n\n    componentDidMount() {\n        this.setState({ isInitialized: true });\n    }\n\n    /**\n     * Refreshes the contents of the active sidebar\n     * @returns {void}\n     */\n    refresh(shouldRefreshCache: boolean = true): void {\n        const { current: activitySidebar } = this.activitySidebar;\n        const { current: detailsSidebar } = this.detailsSidebar;\n        const { current: metadataSidebar } = this.metadataSidebar;\n        const { current: versionsSidebar } = this.versionsSidebar;\n\n        if (activitySidebar) {\n            activitySidebar.refresh(shouldRefreshCache);\n        }\n\n        if (detailsSidebar) {\n            detailsSidebar.refresh();\n        }\n\n        if (metadataSidebar) {\n            metadataSidebar.refresh();\n        }\n\n        if (versionsSidebar) {\n            versionsSidebar.refresh();\n        }\n    }\n\n    render() {\n        const {\n            activitySidebarProps,\n            currentUser,\n            currentUserError,\n            detailsSidebarProps,\n            elementId,\n            file,\n            fileId,\n            getPreview,\n            getViewer,\n            hasActivity,\n            hasDetails,\n            hasMetadata,\n            hasSkills,\n            hasVersions,\n            isOpen,\n            metadataSidebarProps,\n            onAnnotationSelect,\n            onVersionChange,\n            onVersionHistoryClick,\n            versionsSidebarProps,\n        }: Props = this.props;\n\n        const { isInitialized } = this.state;\n\n        if (!isOpen || (!hasActivity && !hasDetails && !hasMetadata && !hasSkills && !hasVersions)) {\n            return null;\n        }\n\n        return (\n            <Switch>\n                {hasSkills && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_SKILLS}`}\n                        render={() => (\n                            <LoadableSkillsSidebar\n                                elementId={elementId}\n                                key={file.id}\n                                file={file}\n                                getPreview={getPreview}\n                                getViewer={getViewer}\n                                hasSidebarInitialized={isInitialized}\n                                startMarkName={MARK_NAME_JS_LOADING_SKILLS}\n                            />\n                        )}\n                    />\n                )}\n                {/* This handles both the default activity sidebar and the activity sidebar with a\n                comment or task deeplink.  */}\n                {hasActivity && (\n                    <Route\n                        exact\n                        path={[\n                            `/${SIDEBAR_VIEW_ACTIVITY}`,\n                            `/${SIDEBAR_VIEW_ACTIVITY}/:activeFeedEntryType(annotations)/:fileVersionId/:activeFeedEntryId?`,\n                            `/${SIDEBAR_VIEW_ACTIVITY}/:activeFeedEntryType(comments|tasks)/:activeFeedEntryId?`,\n                        ]}\n                        render={({ match }) => {\n                            const matchEntryType = match.params.activeFeedEntryType;\n                            const activeFeedEntryType = matchEntryType\n                                ? URL_TO_FEED_ITEM_TYPE[matchEntryType]\n                                : undefined;\n                            return (\n                                <LoadableActivitySidebar\n                                    elementId={elementId}\n                                    currentUser={currentUser}\n                                    currentUserError={currentUserError}\n                                    file={file}\n                                    hasSidebarInitialized={isInitialized}\n                                    onAnnotationSelect={onAnnotationSelect}\n                                    onVersionChange={onVersionChange}\n                                    onVersionHistoryClick={onVersionHistoryClick}\n                                    ref={this.activitySidebar}\n                                    startMarkName={MARK_NAME_JS_LOADING_ACTIVITY}\n                                    activeFeedEntryId={match.params.activeFeedEntryId}\n                                    activeFeedEntryType={match.params.activeFeedEntryId && activeFeedEntryType}\n                                    {...activitySidebarProps}\n                                />\n                            );\n                        }}\n                    />\n                )}\n                {hasDetails && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_DETAILS}`}\n                        render={() => (\n                            <LoadableDetailsSidebar\n                                elementId={elementId}\n                                fileId={fileId}\n                                hasSidebarInitialized={isInitialized}\n                                key={fileId}\n                                hasVersions={hasVersions}\n                                onVersionHistoryClick={onVersionHistoryClick}\n                                ref={this.detailsSidebar}\n                                startMarkName={MARK_NAME_JS_LOADING_DETAILS}\n                                {...detailsSidebarProps}\n                            />\n                        )}\n                    />\n                )}\n                {hasMetadata && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_METADATA}`}\n                        render={() => (\n                            <LoadableMetadataSidebar\n                                elementId={elementId}\n                                fileId={fileId}\n                                hasSidebarInitialized={isInitialized}\n                                ref={this.metadataSidebar}\n                                startMarkName={MARK_NAME_JS_LOADING_METADATA}\n                                {...metadataSidebarProps}\n                            />\n                        )}\n                    />\n                )}\n                {hasVersions && (\n                    <Route\n                        path=\"/:sidebar(activity|details)/versions/:versionId?\"\n                        render={({ match }) => (\n                            <LoadableVersionsSidebar\n                                fileId={fileId}\n                                hasSidebarInitialized={isInitialized}\n                                key={fileId}\n                                onVersionChange={onVersionChange}\n                                parentName={match.params.sidebar}\n                                ref={this.versionsSidebar}\n                                versionId={match.params.versionId}\n                                {...versionsSidebarProps}\n                            />\n                        )}\n                    />\n                )}\n                <Route\n                    render={() => {\n                        let redirect = '';\n\n                        if (hasSkills) {\n                            redirect = SIDEBAR_VIEW_SKILLS;\n                        } else if (hasActivity) {\n                            redirect = SIDEBAR_VIEW_ACTIVITY;\n                        } else if (hasDetails) {\n                            redirect = SIDEBAR_VIEW_DETAILS;\n                        } else if (hasMetadata) {\n                            redirect = SIDEBAR_VIEW_METADATA;\n                        }\n\n                        return <Redirect to={{ pathname: `/${redirect}`, state: { silent: true } }} />;\n                    }}\n                />\n            </Switch>\n        );\n    }\n}\n\nexport { SidebarPanels as SidebarPanelsComponent };\nexport default flow([withSidebarAnnotations, withAPIContext, withAnnotatorContext, withRouterAndRef])(SidebarPanels);\n","// @flow\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { matchPath, type ContextRouter } from 'react-router-dom';\nimport { FEED_ITEM_TYPE_VERSION } from '../../constants';\nimport { getBadUserError } from '../../utils/error';\nimport type { WithAnnotatorContextProps } from '../common/annotator-context';\nimport type { BoxItem, User } from '../../common/types/core';\n\ntype Props = {\n    ...ContextRouter,\n    currentUser?: User,\n    file: BoxItem,\n    fileId: string,\n    isOpen: boolean,\n    onVersionChange: Function,\n} & WithAnnotatorContextProps;\n\ntype SidebarPanelsRefType = {\n    refresh: (shouldRefreshCache?: boolean) => void,\n};\n\nexport default function withSidebarAnnotations(\n    WrappedComponent: React.ComponentType<Props>,\n): React.ComponentType<Props> {\n    class WithSidebarAnnotations extends React.Component<Props> {\n        static defaultProps = {\n            annotatorState: {},\n            getAnnotationsMatchPath: noop,\n            getAnnotationsPath: noop,\n            onVersionChange: noop,\n        };\n\n        static displayName: ?string;\n\n        props: Props;\n\n        sidebarPanels: { current: SidebarPanelsRefType | null } = React.createRef();\n\n        constructor(props) {\n            super(props);\n\n            this.redirectDeeplinkedAnnotation();\n        }\n\n        redirectDeeplinkedAnnotation = () => {\n            const { file, getAnnotationsPath, getAnnotationsMatchPath, history, location } = this.props;\n            const match = getAnnotationsMatchPath(location);\n            const annotationId = getProp(match, 'params.annotationId');\n            const currentFileVersionId = getProp(file, 'file_version.id');\n            const fileVersionId = getProp(match, 'params.fileVersionId');\n\n            if (fileVersionId && fileVersionId !== currentFileVersionId) {\n                history.replace(getAnnotationsPath(currentFileVersionId, annotationId));\n            }\n        };\n\n        componentDidUpdate(prevProps: Props) {\n            const { annotatorState, fileId, getAnnotationsMatchPath, location, onVersionChange }: Props = this.props;\n            const { annotatorState: prevAnnotatorState, fileId: prevFileId, location: prevLocation }: Props = prevProps;\n            const { action, activeAnnotationId, annotation } = annotatorState;\n            const { activeAnnotationId: prevActiveAnnotationId, annotation: prevAnnotation } = prevAnnotatorState;\n\n            const match = getAnnotationsMatchPath(location);\n            const prevMatch = getAnnotationsMatchPath(prevLocation);\n            const fileVersionId = getProp(match, 'params.fileVersionId');\n            const hasActiveAnnotationChanged = prevActiveAnnotationId !== activeAnnotationId;\n            const isAnnotationsPath = !!match;\n            const isTransitioningToAnnotationPath = activeAnnotationId && !isAnnotationsPath;\n            const prevFileVersionId = getProp(prevMatch, 'params.fileVersionId');\n\n            if (action === 'reply_create_start' || action === 'reply_create_end') {\n                this.addAnnotationReply();\n            }\n\n            if (action === 'reply_delete_start' || action === 'reply_delete_end') {\n                this.deleteAnnotationReply();\n            }\n\n            if (action === 'reply_update_start' || action === 'reply_update_end') {\n                this.updateAnnotationReply();\n            }\n\n            if (action === 'update_start' || action === 'update_end') {\n                this.updateAnnotation();\n            }\n\n            if (action === 'delete_start' || action === 'delete_end') {\n                this.deleteAnnotation();\n            }\n\n            if ((action === 'create_start' || action === 'create_end') && annotation && prevAnnotation !== annotation) {\n                this.addAnnotation();\n            }\n\n            // Active annotation id changed. If location is currently an annotation path or\n            // if location is not currently an annotation path but the active annotation id\n            // transitioned from falsy to truthy, update the location accordingly\n            if (hasActiveAnnotationChanged && (isAnnotationsPath || isTransitioningToAnnotationPath)) {\n                this.updateActiveAnnotation();\n            }\n\n            if (fileVersionId && prevFileVersionId !== fileVersionId) {\n                this.updateActiveVersion();\n            }\n\n            if (prevFileId !== fileId) {\n                // If the file id has changed, reset the current version id since the previous (possibly versioned)\n                // location is no longer active\n                onVersionChange(null);\n            }\n        }\n\n        addAnnotation() {\n            const {\n                annotatorState: { action, annotation, meta: { requestId } = {} },\n                api,\n                currentUser,\n                file,\n                fileId,\n            } = this.props;\n\n            if (!requestId) {\n                return;\n            }\n\n            // TODO: need to address in follow on -- currentUser may be undefined here but is never fetched for sure until ActivitySidebar\n            if (!currentUser) {\n                throw getBadUserError();\n            }\n\n            const feedAPI = api.getFeedAPI(false);\n            const isPending = action === 'create_start';\n            const { items: hasItems } = feedAPI.getCachedItems(fileId) || {};\n\n            // If there are existing items in the cache for this file, then patch the cache with the new annotation\n            // If there are no cache entry for feeditems, then it is assumed that it has not yet been fetched.\n            if (hasItems) {\n                feedAPI.addAnnotation(file, currentUser, annotation, requestId, isPending);\n            }\n\n            this.refreshActivitySidebar();\n        }\n\n        addAnnotationReply() {\n            const {\n                annotatorState: {\n                    action,\n                    annotation: { id: annotationId },\n                    annotationReply,\n                    meta: { requestId },\n                },\n                api,\n                currentUser,\n                file,\n            } = this.props;\n\n            if (!currentUser) {\n                throw getBadUserError();\n            }\n\n            const feedAPI = api.getFeedAPI(false);\n            feedAPI.file = file;\n\n            if (action === 'reply_create_start') {\n                feedAPI.addPendingReply(annotationId, currentUser, { ...annotationReply, id: requestId });\n            } else {\n                const { items: feedItems = [] } = feedAPI.getCachedItems(file.id) || {};\n                const annotationItem = feedItems.find(({ id }) => id === annotationId);\n\n                if (!annotationItem) {\n                    return;\n                }\n\n                feedAPI.modifyFeedItemRepliesCountBy(annotationId, 1);\n                feedAPI.updateReplyItem({ ...annotationReply, isPending: false }, annotationId, requestId);\n            }\n\n            this.refreshActivitySidebar();\n        }\n\n        deleteAnnotation() {\n            const {\n                annotatorState: { action, annotation },\n                api,\n                file,\n            } = this.props;\n\n            const feedAPI = api.getFeedAPI(false);\n            feedAPI.file = file;\n\n            if (action === 'delete_start') {\n                feedAPI.updateFeedItem({ isPending: true }, annotation.id);\n            } else {\n                feedAPI.deleteFeedItem(annotation.id);\n            }\n\n            this.refreshActivitySidebar();\n        }\n\n        deleteAnnotationReply() {\n            const {\n                annotatorState: {\n                    action,\n                    annotation: { id: annotationId },\n                    annotationReply: { id: replyId },\n                },\n                api,\n                file,\n            } = this.props;\n\n            const feedAPI = api.getFeedAPI(false);\n            feedAPI.file = file;\n\n            if (action === 'reply_delete_start') {\n                feedAPI.updateReplyItem({ isPending: true }, annotationId, replyId);\n            } else {\n                const { items: feedItems = [] } = feedAPI.getCachedItems(file.id) || {};\n                const annotationItem = feedItems.find(({ id }) => id === annotationId);\n\n                if (!annotationItem) {\n                    return;\n                }\n\n                // Check if the parent annotation has the reply currently visible and if so, remove it\n                const replyItem = annotationItem.replies.find(({ id }) => id === replyId);\n                if (replyItem) {\n                    feedAPI.deleteReplyItem(replyId, annotationId);\n                }\n\n                // Decrease the amount of replies by 1\n                feedAPI.modifyFeedItemRepliesCountBy(annotationId, -1);\n            }\n\n            this.refreshActivitySidebar();\n        }\n\n        updateAnnotation() {\n            const {\n                annotatorState: { action, annotation },\n                api,\n                file,\n            } = this.props;\n\n            const feedAPI = api.getFeedAPI(false);\n            const isPending = action === 'update_start';\n            feedAPI.file = file;\n\n            feedAPI.updateFeedItem({ ...annotation, isPending }, annotation.id);\n\n            this.refreshActivitySidebar();\n        }\n\n        updateAnnotationReply() {\n            const {\n                annotatorState: { action, annotation, annotationReply },\n                api,\n                file,\n            } = this.props;\n\n            const feedAPI = api.getFeedAPI(false);\n            const isPending = action === 'reply_update_start';\n            feedAPI.file = file;\n\n            feedAPI.updateReplyItem({ ...annotationReply, isPending }, annotation.id, annotationReply.id);\n\n            this.refreshActivitySidebar();\n        }\n\n        updateActiveAnnotation = () => {\n            const {\n                annotatorState: { activeAnnotationFileVersionId, activeAnnotationId },\n                file,\n                getAnnotationsMatchPath,\n                getAnnotationsPath,\n                history,\n                location,\n            } = this.props;\n            const match = getAnnotationsMatchPath(location);\n            const currentFileVersionId = getProp(file, 'file_version.id');\n            const defaultFileVersionId = activeAnnotationFileVersionId || currentFileVersionId;\n            const fileVersionId = getProp(match, 'params.fileVersionId', defaultFileVersionId);\n            const newLocationState = activeAnnotationId ? { open: true } : location.state;\n\n            // Update the location pathname and open state if transitioning to an active annotation id, force the sidebar open\n            history.push({\n                pathname: getAnnotationsPath(fileVersionId, activeAnnotationId),\n                state: newLocationState,\n            });\n        };\n\n        updateActiveVersion = () => {\n            const {\n                api,\n                file,\n                fileId,\n                getAnnotationsMatchPath,\n                getAnnotationsPath,\n                history,\n                location,\n                onVersionChange,\n            } = this.props;\n            const feedAPI = api.getFeedAPI(false);\n            const match = getAnnotationsMatchPath(location);\n            const currentFileVersionId = getProp(file, 'file_version.id');\n            const fileVersionId = getProp(match, 'params.fileVersionId');\n            const { items: feedItems = [] } = feedAPI.getCachedItems(fileId) || {};\n            const version = feedItems\n                .filter(item => item.type === FEED_ITEM_TYPE_VERSION)\n                .find(item => item.id === fileVersionId);\n\n            if (version) {\n                onVersionChange(version, {\n                    currentVersionId: currentFileVersionId,\n                    updateVersionToCurrent: () => history.push(getAnnotationsPath(currentFileVersionId)),\n                });\n            }\n        };\n\n        refreshActivitySidebar = () => {\n            const { isOpen, location } = this.props;\n\n            const pathname = getProp(location, 'pathname', '');\n            const isActivity = matchPath(pathname, '/activity');\n            const { current } = this.sidebarPanels;\n\n            // If the activity sidebar is currently open, then force it to refresh with the updated data\n            if (current && isActivity && isOpen) {\n                current.refresh(false);\n            }\n        };\n\n        render() {\n            return <WrappedComponent ref={this.sidebarPanels} {...this.props} />;\n        }\n    }\n\n    const displayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    WithSidebarAnnotations.displayName = `WithSidebarAnnotations(${displayName})`;\n\n    return WithSidebarAnnotations;\n}\n","/**\n * @flow\n * @file Content Sidebar Component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport uniqueid from 'lodash/uniqueId';\nimport { withRouter } from 'react-router-dom';\nimport type { Location, RouterHistory } from 'react-router-dom';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport LocalStore from '../../utils/LocalStore';\nimport SidebarNav from './SidebarNav';\nimport SidebarPanels from './SidebarPanels';\nimport SidebarUtils from './SidebarUtils';\nimport { withCurrentUser } from '../common/current-user';\nimport { withFeatureConsumer } from '../common/feature-checking';\nimport type { FeatureConfig } from '../common/feature-checking';\nimport type { ActivitySidebarProps } from './ActivitySidebar';\nimport type { DetailsSidebarProps } from './DetailsSidebar';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\nimport type { VersionsSidebarProps } from './versions';\nimport type { AdditionalSidebarTab } from './flowTypes';\nimport type { MetadataEditor } from '../../common/types/metadata';\nimport type { BoxItem, User } from '../../common/types/core';\nimport type { Errors } from '../common/flowTypes';\n\ntype Props = {\n    activitySidebarProps: ActivitySidebarProps,\n    additionalTabs?: Array<AdditionalSidebarTab>,\n    className: string,\n    currentUser?: User,\n    currentUserError?: Errors,\n    detailsSidebarProps: DetailsSidebarProps,\n    features: FeatureConfig,\n    file: BoxItem,\n    fileId: string,\n    getPreview: Function,\n    getViewer: Function,\n    hasActivityFeed: boolean,\n    hasAdditionalTabs: boolean,\n    hasMetadata: boolean,\n    hasNav: boolean,\n    hasSkills: boolean,\n    hasVersions: boolean,\n    history: RouterHistory,\n    isDefaultOpen?: boolean,\n    isLoading?: boolean,\n    location: Location,\n    metadataEditors?: Array<MetadataEditor>,\n    metadataSidebarProps: MetadataSidebarProps,\n    onAnnotationSelect?: Function,\n    onVersionChange?: Function,\n    onVersionHistoryClick?: Function,\n    versionsSidebarProps: VersionsSidebarProps,\n};\n\ntype State = {\n    isDirty: boolean,\n};\n\nexport const SIDEBAR_FORCE_KEY: 'bcs.force' = 'bcs.force';\nexport const SIDEBAR_FORCE_VALUE_CLOSED: 'closed' = 'closed';\nexport const SIDEBAR_FORCE_VALUE_OPEN: 'open' = 'open';\n\nclass Sidebar extends React.Component<Props, State> {\n    static defaultProps = {\n        annotatorState: {},\n        isDefaultOpen: true,\n        isLoading: false,\n        getAnnotationsMatchPath: noop,\n        getAnnotationsPath: noop,\n    };\n\n    id: string = uniqueid('bcs_');\n\n    props: Props;\n\n    sidebarPanels: { current: null | SidebarPanels } = React.createRef();\n\n    state: State;\n\n    store: LocalStore = new LocalStore();\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            isDirty: this.getLocationState('open') || false,\n        };\n\n        this.setForcedByLocation();\n    }\n\n    componentDidUpdate(prevProps: Props): void {\n        const { fileId, history, location }: Props = this.props;\n        const { fileId: prevFileId, location: prevLocation }: Props = prevProps;\n        const { isDirty }: State = this.state;\n\n        // User navigated to a different file without ever navigating the sidebar\n        if (!isDirty && fileId !== prevFileId && location.pathname !== '/') {\n            history.replace({ pathname: '/', state: { silent: true } });\n        }\n\n        // User navigated or toggled the sidebar intentionally, internally or externally\n        if (location !== prevLocation && !this.getLocationState('silent')) {\n            this.setForcedByLocation();\n            this.setState({ isDirty: true });\n        }\n    }\n\n    getUrlPrefix = (pathname: string) => {\n        const basePath = pathname.substring(1).split('/')[0];\n        return basePath;\n    };\n\n    /**\n     * Handle version history click\n     *\n     * @param {SyntheticEvent} event - The event\n     * @return {void}\n     */\n    handleVersionHistoryClick = (event: SyntheticEvent<>): void => {\n        const { file, history } = this.props;\n        const { file_version: currentVersion } = file;\n        const fileVersionSlug = currentVersion ? `/${currentVersion.id}` : '';\n\n        const urlPrefix = this.getUrlPrefix(history.location.pathname);\n\n        if (event.preventDefault) {\n            event.preventDefault();\n        }\n\n        history.push(`/${urlPrefix}/versions${fileVersionSlug}`);\n    };\n\n    /**\n     * Getter for location state properties.\n     *\n     * NOTE: Each location on the history stack has its own optional state object that is wholly separate from\n     * this component's internal state. Values on the location state object can persist even between refreshes\n     * when using certain history contexts, such as BrowserHistory.\n     *\n     * @param key - Optionally get a specific key value from state\n     * @returns {any} - The location state or state key value\n     */\n    getLocationState(key?: string): any {\n        const { location } = this.props;\n        const { state: locationState = {} } = location;\n        return getProp(locationState, key);\n    }\n\n    /**\n     * Getter/setter for sidebar forced state\n     *\n     * @param isOpen - Optionally set the sidebar to open/closed\n     * @returns {string|null} - The sidebar open/closed state\n     */\n    isForced(isOpen?: boolean): ?(typeof SIDEBAR_FORCE_VALUE_CLOSED | typeof SIDEBAR_FORCE_VALUE_OPEN) {\n        if (isOpen !== undefined) {\n            this.store.setItem(SIDEBAR_FORCE_KEY, isOpen ? SIDEBAR_FORCE_VALUE_OPEN : SIDEBAR_FORCE_VALUE_CLOSED);\n        }\n\n        return this.store.getItem(SIDEBAR_FORCE_KEY);\n    }\n\n    /**\n     * Getter for whether the sidebar has been forced open\n     * @returns {boolean} - True if the sidebar has been forced open\n     */\n    isForcedOpen(): boolean {\n        return this.isForced() === SIDEBAR_FORCE_VALUE_OPEN;\n    }\n\n    /**\n     * Getter for whether the sidebar has been forced open/closed previously\n     * @returns {boolean} - True if the sidebar has been forced open/closed previously\n     */\n    isForcedSet(): boolean {\n        return this.isForced() !== null;\n    }\n\n    /**\n     * Refreshes the sidebar panel\n     * @returns {void}\n     */\n    refresh(shouldRefreshCache: boolean = true): void {\n        const { current: sidebarPanels } = this.sidebarPanels;\n\n        if (sidebarPanels) {\n            sidebarPanels.refresh(shouldRefreshCache);\n        }\n    }\n\n    /**\n     * Helper to set the local store open state based on the location open state, if defined\n     */\n    setForcedByLocation(): void {\n        const isLocationOpen: ?boolean = this.getLocationState('open');\n\n        if (isLocationOpen !== undefined && isLocationOpen !== null) {\n            this.isForced(isLocationOpen);\n        }\n    }\n\n    render() {\n        const {\n            activitySidebarProps,\n            additionalTabs,\n            className,\n            currentUser,\n            currentUserError,\n            detailsSidebarProps,\n            file,\n            fileId,\n            getPreview,\n            getViewer,\n            hasAdditionalTabs,\n            hasNav,\n            hasVersions,\n            isDefaultOpen,\n            isLoading,\n            metadataEditors,\n            metadataSidebarProps,\n            onAnnotationSelect,\n            onVersionChange,\n            versionsSidebarProps,\n        }: Props = this.props;\n        const isOpen = this.isForcedSet() ? this.isForcedOpen() : !!isDefaultOpen;\n        const hasActivity = SidebarUtils.canHaveActivitySidebar(this.props);\n        const hasDetails = SidebarUtils.canHaveDetailsSidebar(this.props);\n        const hasMetadata = SidebarUtils.shouldRenderMetadataSidebar(this.props, metadataEditors);\n        const hasSkills = SidebarUtils.shouldRenderSkillsSidebar(this.props, file);\n        const onVersionHistoryClick = hasVersions ? this.handleVersionHistoryClick : this.props.onVersionHistoryClick;\n        const styleClassName = classNames('be bcs', className, {\n            'bcs-is-open': isOpen,\n        });\n\n        return (\n            <aside id={this.id} className={styleClassName} data-testid=\"preview-sidebar\">\n                {isLoading ? (\n                    <div className=\"bcs-loading\">\n                        <LoadingIndicator />\n                    </div>\n                ) : (\n                    <>\n                        {hasNav && (\n                            <SidebarNav\n                                additionalTabs={additionalTabs}\n                                elementId={this.id}\n                                fileId={fileId}\n                                hasActivity={hasActivity}\n                                hasAdditionalTabs={hasAdditionalTabs}\n                                hasDetails={hasDetails}\n                                hasMetadata={hasMetadata}\n                                hasSkills={hasSkills}\n                                isOpen={isOpen}\n                            />\n                        )}\n                        <SidebarPanels\n                            activitySidebarProps={activitySidebarProps}\n                            currentUser={currentUser}\n                            currentUserError={currentUserError}\n                            elementId={this.id}\n                            detailsSidebarProps={detailsSidebarProps}\n                            file={file}\n                            fileId={fileId}\n                            getPreview={getPreview}\n                            getViewer={getViewer}\n                            hasActivity={hasActivity}\n                            hasDetails={hasDetails}\n                            hasMetadata={hasMetadata}\n                            hasSkills={hasSkills}\n                            hasVersions={hasVersions}\n                            isOpen={isOpen}\n                            key={file.id}\n                            metadataSidebarProps={metadataSidebarProps}\n                            onAnnotationSelect={onAnnotationSelect}\n                            onVersionChange={onVersionChange}\n                            onVersionHistoryClick={onVersionHistoryClick}\n                            ref={this.sidebarPanels}\n                            versionsSidebarProps={versionsSidebarProps}\n                        />\n                    </>\n                )}\n            </aside>\n        );\n    }\n}\n\nexport { Sidebar as SidebarComponent };\nexport default flow([withCurrentUser, withFeatureConsumer, withRouter])(Sidebar);\n","import React from 'react';\n// @ts-ignore: no ts definition\nimport messages from '../messages';\n// @ts-ignore: no ts definition\nimport { withAPIContext } from '../api-context';\n// @ts-ignore: no ts definition\nimport { getBadItemError } from '../../../utils/error';\n// @ts-ignore: no ts definition\n// eslint-disable-next-line import/named\nimport { ElementsXhrError, ErrorContextProps } from '../../../common/types/api';\n// @ts-ignore: no ts definition\n// eslint-disable-next-line import/named\nimport { Errors } from '../flowTypes';\n// @ts-ignore: no ts definition\n// eslint-disable-next-line import/named\nimport { User } from '../../../common/types/core';\n\nexport type WithCurrentUserProps = {\n    currentUser?: User;\n    currentUserError?: Errors;\n} & ErrorContextProps;\n\nexport type ComponentWithCurrentUser = {\n    errorCallback: (error: ElementsXhrError, code: string, contextInfo: Object) => void;\n    fetchCurrentUser: (user?: User, shouldDestroy?: boolean) => void;\n    fetchCurrentUserErrorCallback: (e: ElementsXhrError, code: string) => Errors;\n    fetchCurrentUserSuccessCallback: (currentUser: User) => void;\n};\n\nexport type CurrentUserState = {\n    currentUser?: User;\n    currentUserError?: Errors;\n};\n\nexport type WithCurrentUserComponent<P> = React.ComponentClass<P & WithCurrentUserProps>;\n\nexport default function withCurrentUser<P extends object>(\n    WrappedComponent: React.ComponentType<P & WithCurrentUserProps>,\n): WithCurrentUserComponent<P> {\n    class ComponentWithCurrentUser extends React.Component<P & WithCurrentUserProps, CurrentUserState> {\n        static displayName: string;\n\n        constructor(props: P & WithCurrentUserProps) {\n            super(props);\n            const { currentUser } = props;\n            this.state = { currentUser };\n        }\n\n        componentDidMount() {\n            const { currentUser } = this.state;\n            this.fetchCurrentUser(currentUser);\n        }\n\n        /**\n         * Network error callback\n         *\n         * @private\n         * @param {Error} error - Error object\n         * @param {Error} code - the code for the error\n         * @param {Object} contextInfo - the context info for the error\n         * @return {void}\n         */\n        errorCallback = (error: ElementsXhrError, code: string, contextInfo: Object = {}): void => {\n            // eslint-disable-next-line no-console\n            console.error(error);\n            this.props.onError(error, code, contextInfo);\n        };\n\n        /**\n         * Fetches a Users info\n         *\n         * @private\n         * @param {User} [user] - Box User. If missing, gets user that the current token was generated for.\n         * @param {boolean} shouldDestroy\n         * @return {void}\n         */\n        fetchCurrentUser = (user?: User, shouldDestroy = false): void => {\n            const { api, file } = this.props;\n\n            if (!file) {\n                throw getBadItemError();\n            }\n\n            if (typeof user === 'undefined') {\n                api.getUsersAPI(shouldDestroy).getUser(\n                    file.id,\n                    this.fetchCurrentUserSuccessCallback,\n                    this.fetchCurrentUserErrorCallback,\n                );\n            } else {\n                this.setState({ currentUser: user, currentUserError: undefined });\n            }\n        };\n\n        /**\n         * User fetch success callback\n         *\n         * @private\n         * @param {Object} currentUser - User info object\n         * @return {void}\n         */\n        fetchCurrentUserSuccessCallback = (currentUser: User): void => {\n            this.setState({ currentUser, currentUserError: undefined });\n        };\n\n        /**\n         * Handles a failed file user info fetch\n         *\n         * @private\n         * @param {ElementsXhrError} e - API error\n         * @return {void}\n         */\n        fetchCurrentUserErrorCallback = (e: ElementsXhrError, code: string) => {\n            this.setState({\n                currentUser: undefined,\n                currentUserError: {\n                    maskError: {\n                        errorHeader: messages.currentUserErrorHeaderMessage,\n                        errorSubHeader: messages.defaultErrorMaskSubHeaderMessage,\n                    },\n                },\n            });\n\n            this.errorCallback(e, code, {\n                error: e,\n            });\n        };\n\n        render() {\n            const { currentUser, currentUserError } = this.state;\n            return <WrappedComponent {...this.props} currentUser={currentUser} currentUserError={currentUserError} />;\n        }\n    }\n\n    const displayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    ComponentWithCurrentUser.displayName = `WithCurrentUser(${displayName})`;\n\n    return withAPIContext(ComponentWithCurrentUser);\n}\n","/**\n * @flow\n * @file Content Sidebar Container\n * @author Box\n */\n\nimport 'regenerator-runtime/runtime';\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport flow from 'lodash/flow';\nimport type { RouterHistory } from 'react-router-dom';\nimport API from '../../api';\nimport APIContext from '../common/api-context';\nimport Internationalize from '../common/Internationalize';\nimport Sidebar from './Sidebar';\nimport NavRouter from '../common/nav-router';\nimport SidebarUtils from './SidebarUtils';\nimport { DEFAULT_HOSTNAME_API, CLIENT_NAME_CONTENT_SIDEBAR, ORIGIN_CONTENT_SIDEBAR } from '../../constants';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { mark } from '../../utils/performance';\nimport { SIDEBAR_FIELDS_TO_FETCH } from '../../utils/fields';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withFeatureProvider } from '../common/feature-checking';\nimport { withLogger } from '../common/logger';\n\nimport type { DetailsSidebarProps } from './DetailsSidebar';\nimport type { ActivitySidebarProps } from './ActivitySidebar';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\nimport type { VersionsSidebarProps } from './versions';\nimport type { WithLoggerProps } from '../../common/types/logging';\nimport type { ElementsXhrError, RequestOptions, ErrorContextProps } from '../../common/types/api';\nimport type { MetadataEditor } from '../../common/types/metadata';\nimport type { StringMap, Token, User, BoxItem } from '../../common/types/core';\nimport type { AdditionalSidebarTab } from './flowTypes';\nimport type { FeatureConfig } from '../common/feature-checking';\nimport type APICache from '../../utils/Cache';\n\nimport '../common/fonts.scss';\nimport '../common/base.scss';\nimport '../common/modal.scss';\nimport './ContentSidebar.scss';\n\ntype Props = {\n    activitySidebarProps: ActivitySidebarProps,\n    additionalTabs?: Array<AdditionalSidebarTab>,\n    apiHost: string,\n    cache?: APICache,\n    className: string,\n    clientName: string,\n    currentUser?: User,\n    defaultView: string,\n    detailsSidebarProps: DetailsSidebarProps,\n    features: FeatureConfig,\n    fileId?: string,\n    getPreview: Function,\n    getViewer: Function,\n    hasActivityFeed: boolean,\n    hasAdditionalTabs: boolean,\n    hasMetadata: boolean,\n    hasNav: boolean,\n    hasSkills: boolean,\n    hasVersions: boolean,\n    history?: RouterHistory,\n    isDefaultOpen?: boolean,\n    language?: string,\n    messages?: StringMap,\n    metadataSidebarProps: MetadataSidebarProps,\n    onAnnotationSelect?: Function,\n    onFetchFileSuccess?: () => void,\n    onVersionChange?: Function,\n    onVersionHistoryClick?: Function,\n    requestInterceptor?: Function,\n    responseInterceptor?: Function,\n    sharedLink?: string,\n    sharedLinkPassword?: string,\n    token: Token,\n    versionsSidebarProps: VersionsSidebarProps,\n} & ErrorContextProps &\n    WithLoggerProps;\n\ntype State = {\n    file?: BoxItem,\n    isLoading: boolean,\n    metadataEditors?: Array<MetadataEditor>,\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_CONTENT_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass ContentSidebar extends React.Component<Props, State> {\n    props: Props;\n\n    state: State = { isLoading: true };\n\n    api: API;\n\n    sidebarRef: Sidebar;\n\n    static defaultProps = {\n        activitySidebarProps: {},\n        apiHost: DEFAULT_HOSTNAME_API,\n        className: '',\n        clientName: CLIENT_NAME_CONTENT_SIDEBAR,\n        defaultView: '',\n        detailsSidebarProps: {},\n        getPreview: noop,\n        getViewer: noop,\n        hasActivityFeed: false,\n        hasAdditionalTabs: false,\n        hasMetadata: false,\n        hasNav: true,\n        hasSkills: false,\n        isDefaultOpen: true,\n        metadataSidebarProps: {},\n    };\n\n    /**\n     * [constructor]\n     *\n     * @private\n     * @return {ContentSidebar}\n     */\n    constructor(props: Props) {\n        super(props);\n        const {\n            apiHost,\n            cache,\n            clientName,\n            language,\n            requestInterceptor,\n            responseInterceptor,\n            sharedLink,\n            sharedLinkPassword,\n            token,\n        } = props;\n\n        this.api = new API({\n            apiHost,\n            cache,\n            clientName,\n            language,\n            requestInterceptor,\n            responseInterceptor,\n            sharedLink,\n            sharedLinkPassword,\n            token,\n        });\n\n        /* eslint-disable react/prop-types */\n        const { logger } = props;\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n        /* eslint-enable react/prop-types */\n    }\n\n    /**\n     * Destroys api instances with caches\n     *\n     * @private\n     * @return {void}\n     */\n    clearCache(): void {\n        this.api.destroy(true);\n    }\n\n    /**\n     * Cleanup\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentWillUnmount() {\n        // Don't destroy the cache while unmounting\n        this.api.destroy(false);\n    }\n\n    /**\n     * Fetches the file data on load\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentDidMount() {\n        this.fetchFile();\n    }\n\n    /**\n     * Fetches new file data on update\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentDidUpdate(prevProps: Props): void {\n        const { fileId }: Props = this.props;\n        const { fileId: prevFileId }: Props = prevProps;\n\n        if (fileId !== prevFileId) {\n            this.fetchFile();\n        }\n    }\n\n    /**\n     * Network error callback\n     *\n     * @private\n     * @param {Error} error - Error object\n     * @param {string} code - error code\n     * @return {void}\n     */\n    errorCallback = (error: ElementsXhrError, code: string): void => {\n        /* eslint-disable no-console */\n        console.error(error);\n        /* eslint-enable no-console */\n\n        /* eslint-disable react/prop-types */\n        this.props.onError(error, code, {\n            error,\n        });\n        /* eslint-enable react/prop-types */\n    };\n\n    /**\n     * File fetch success callback that sets the file and view\n     * Only set file if there is data to show in the sidebar.\n     * Skills sidebar doesn't show when there is no data.\n     *\n     * @private\n     * @param {Object} file - Box file\n     * @return {void}\n     */\n    fetchMetadataSuccessCallback = ({ editors }: { editors: Array<MetadataEditor> }): void => {\n        this.setState({ metadataEditors: editors });\n    };\n\n    /**\n     * Fetches file metadata editors if required\n     *\n     * @private\n     * @return {void}\n     */\n    fetchMetadata(): void {\n        const { file }: State = this.state;\n        const { metadataSidebarProps }: Props = this.props;\n        const { isFeatureEnabled = true }: MetadataSidebarProps = metadataSidebarProps;\n\n        // Only fetch metadata if we think that the file may have metadata on it\n        // but currently the metadata feature is turned off. Use case of this would be a free\n        // user who doesn't have the metadata feature but is collabed on a file from a user\n        // who added metadata on the file. If the feature is enabled we always end up showing\n        // the metadata sidebar irrespective of there being any existing metadata or not.\n        const canHaveMetadataSidebar = !isFeatureEnabled && SidebarUtils.canHaveMetadataSidebar(this.props);\n\n        if (canHaveMetadataSidebar) {\n            this.api\n                .getMetadataAPI(false)\n                .getMetadata(((file: any): BoxItem), this.fetchMetadataSuccessCallback, noop, isFeatureEnabled);\n        }\n    }\n\n    /**\n     * File fetch success callback that sets the file and sidebar visibility.\n     * Also makes an optional request to fetch metadata editors\n     *\n     * @private\n     * @param {Object} file - Box file\n     * @return {void}\n     */\n    fetchFileSuccessCallback = (file: BoxItem): void => {\n        const { onFetchFileSuccess }: Props = this.props;\n        !!onFetchFileSuccess && onFetchFileSuccess();\n        this.setState(\n            {\n                file,\n                isLoading: false,\n            },\n            this.fetchMetadata,\n        );\n    };\n\n    /**\n     * Fetches a file\n     *\n     * @private\n     * @param {Object|void} [fetchOptions] - Fetch options\n     * @return {void}\n     */\n    fetchFile(fetchOptions: RequestOptions = {}): void {\n        const { fileId }: Props = this.props;\n        this.setState({ isLoading: true });\n        if (fileId && SidebarUtils.canHaveSidebar(this.props)) {\n            this.api.getFileAPI().getFile(fileId, this.fetchFileSuccessCallback, this.errorCallback, {\n                ...fetchOptions,\n                fields: SIDEBAR_FIELDS_TO_FETCH,\n            });\n        }\n    }\n\n    /**\n     * Refreshes the sidebar panel\n     * @returns {void}\n     */\n    refresh(): void {\n        if (this.sidebarRef) {\n            this.sidebarRef.refresh();\n        }\n    }\n\n    /**\n     * Renders the sidebar\n     *\n     * @private\n     * @inheritdoc\n     * @return {Element}\n     */\n    render() {\n        const {\n            activitySidebarProps,\n            additionalTabs,\n            className,\n            currentUser,\n            defaultView,\n            detailsSidebarProps,\n            fileId,\n            getPreview,\n            getViewer,\n            hasAdditionalTabs,\n            hasActivityFeed,\n            hasMetadata,\n            hasNav,\n            hasSkills,\n            hasVersions,\n            history,\n            isDefaultOpen,\n            language,\n            messages,\n            metadataSidebarProps,\n            onAnnotationSelect,\n            onVersionChange,\n            onVersionHistoryClick,\n            versionsSidebarProps,\n        }: Props = this.props;\n        const { file, isLoading, metadataEditors }: State = this.state;\n        const initialPath = defaultView.charAt(0) === '/' ? defaultView : `/${defaultView}`;\n\n        if (!file || !fileId || !SidebarUtils.shouldRenderSidebar(this.props, file, metadataEditors)) {\n            return null;\n        }\n\n        return (\n            <Internationalize language={language} messages={messages}>\n                <APIContext.Provider value={(this.api: any)}>\n                    <NavRouter history={history} initialEntries={[initialPath]}>\n                        <Sidebar\n                            activitySidebarProps={activitySidebarProps}\n                            additionalTabs={additionalTabs}\n                            className={className}\n                            currentUser={currentUser}\n                            detailsSidebarProps={detailsSidebarProps}\n                            file={file}\n                            fileId={fileId}\n                            getPreview={getPreview}\n                            getViewer={getViewer}\n                            hasActivityFeed={hasActivityFeed}\n                            hasAdditionalTabs={hasAdditionalTabs}\n                            hasNav={hasNav}\n                            hasMetadata={hasMetadata}\n                            hasSkills={hasSkills}\n                            hasVersions={hasVersions}\n                            isDefaultOpen={isDefaultOpen}\n                            isLoading={isLoading}\n                            metadataEditors={metadataEditors}\n                            metadataSidebarProps={metadataSidebarProps}\n                            onAnnotationSelect={onAnnotationSelect}\n                            onVersionChange={onVersionChange}\n                            onVersionHistoryClick={onVersionHistoryClick}\n                            versionsSidebarProps={versionsSidebarProps}\n                            wrappedComponentRef={ref => {\n                                this.sidebarRef = ref;\n                            }}\n                        />\n                    </NavRouter>\n                </APIContext.Provider>\n            </Internationalize>\n        );\n    }\n}\n\nexport type ContentSidebarProps = Props;\nexport { ContentSidebar as ContentSidebarComponent };\nexport default flow([\n    withFeatureProvider,\n    withLogger(ORIGIN_CONTENT_SIDEBAR),\n    withErrorBoundary(ORIGIN_CONTENT_SIDEBAR),\n])(ContentSidebar);\n","// @flow strict\nexport const SIDEBAR_NAV_TARGETS = {\n    ACTIVITY: 'sidebaractivity',\n    DETAILS: 'sidebardetails',\n    SIGN: 'sidebarsign',\n    SKILLS: 'sidebarskills',\n    METADATA: 'sidebarmetadata',\n    TOGGLE: 'sidebartoggle',\n};\n\nexport const SECTION_TARGETS = {\n    FILE_PROPERTIES: 'fileproperties',\n    ACCESS_STATS: 'accessstats',\n    CLASSIFICATION: 'classification',\n};\n\nexport const DETAILS_TARGETS = {\n    ACCESS_STATS: {\n        COMMENTS: 'accessstats-comments',\n        DOWNLOADS: 'accessstats-downloads',\n        EDITS: 'accessstats-edits',\n        PREVIEWS: 'accessstats-previews',\n        VIEWS: 'accessstats-views',\n        VIEW_DETAILS: 'accessstats-viewdetails',\n    },\n    CLASSIFICATION_ADD: 'addclassification',\n    CLASSIFICATION_EDIT: 'editclassification',\n    DESCRIPTION: 'description',\n    VERSION_HISTORY: 'versionhistory',\n};\n\nexport const ACTIVITY_TARGETS = {\n    ANNOTATION_OPTIONS_DELETE: 'activityfeed-annotation-delete',\n    ANNOTATION_OPTIONS_EDIT: 'activityfeed-annotation-edit',\n    ANNOTATION_OPTIONS_RESOLVE: 'activityfeed-annotation-resolve',\n    ANNOTATION_OPTIONS_UNRESOLVE: 'activityfeed-annotation-unresolve',\n    ANNOTATION_OPTIONS: 'activityfeedannotation', // component\n    APPROVAL_FORM_ADD_TASK: 'activityfeed-apporvalformaddtask',\n    APPROVAL_FORM_CANCEL: 'activityfeed-approvalformcancel',\n    APPROVAL_FORM_POST: 'activityfeed-approvalformpost',\n    COMMENT_OPTIONS: 'activityfeedcomment', // component\n    COMMENT_OPTIONS_DELETE: 'activityfeed-comment-delete',\n    COMMENT_OPTIONS_EDIT: 'activityfeed-comment-edit',\n    INLINE_DELETE_CANCEL: 'activityfeed-delete-cancel',\n    INLINE_DELETE_CONFIRM: 'activityfeed-delete-confirm',\n    MENTION: 'activityfeed-mentionlink',\n    PROFILE: 'activityfeed-profilelink',\n    TASK_APPROVE: 'activityfeed-taskapprove',\n    TASK_COMPLETE: 'activityfeed-taskcomplete',\n    TASK_DATE_PICKER: 'activityfeed-taskdatepicker',\n    TASK_VIEW_DETAILS: 'activityfeed-viewtaskdetails',\n    TASK_OPTIONS: 'activityfeedtask', // component\n    TASK_OPTIONS_DELETE: 'activityfeed-task-delete',\n    TASK_OPTIONS_EDIT: 'activityfeed-task-edit',\n    TASK_REJECT: 'activityfeed-taskreject',\n    VERSION_CARD: 'activityfeed-versioninfo',\n};\n\nexport const SKILLS_TARGETS = {\n    FACES: {\n        CARD: 'skill-facecard',\n        FACE: 'skill-face',\n        DELETE: 'skill-facedelete',\n        EDIT: 'skill-faceedit',\n        EDIT_SAVE: 'skill-faceeditsave',\n        EDIT_CANCEL: 'skill-faceeditcancel',\n        TIMELINE: 'skill-facetimeslice',\n    },\n    KEYWORDS: {\n        CARD: 'skill-keywordcard',\n        EDIT: 'skill-keywordedit',\n        EDIT_SAVE: 'skill-keywordeditsave',\n        EDIT_CANCEL: 'skill-keywordeditcancel',\n        TIMELINE: 'skill-keywordtimeslice',\n        SELECT: 'skill-keywordselect',\n    },\n    TRANSCRIPTS: {\n        CARD: 'skill-transcriptcard',\n        COPY: 'skill-transcriptcopy',\n        EDIT: 'skill-transcriptedit',\n        EXPAND: 'skill-transcriptexpand',\n        EDIT_SAVE: 'skill-transcripteditsave',\n        EDIT_CANCEL: 'skill-transcripteditcancel',\n        TRANSCRIPT: 'skill-transcript',\n        EDIT_TEXT: 'skill-transcriptedittext',\n    },\n    TIMELINE: {\n        NEXT: 'skill-timelimelinenext',\n        PREVIOUS: 'skill-timelineprevious',\n    },\n};\n\nexport const INTERACTION_TARGET = 'data-resin-target';\n","// Need to import and re-export the type to be shared in another component.\n// https://github.com/babel/babel-loader/issues/603#issuecomment-418472968\nimport { TooltipProps as Props } from './Tooltip';\n\nexport { default, TooltipPosition, TooltipTheme } from './Tooltip';\nexport type TooltipProps = Props;\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nimport CloseButton from '../close-button';\nimport MenuContext from './MenuContext';\n\nimport './MenuHeader.scss';\n\nexport interface MenuHeaderProps {\n    /** className - CSS class name for the menu section header */\n    className?: string;\n    /** children - menu section header content */\n    children?: Array<React.ReactChild> | React.ReactChild;\n    /** subtitle - Secondary title of header below Title */\n    subtitle?: React.ReactChild;\n    /** title - Title of header */\n    title?: React.ReactChild;\n}\n\nconst MenuHeader = ({ className, children, subtitle, title, ...rest }: MenuHeaderProps) => {\n    const { closeMenu } = React.useContext(MenuContext);\n\n    return (\n        <div\n            className={classNames('bdl-MenuHeader', className)}\n            data-testid=\"bdl-MenuHeader\"\n            role=\"presentation\"\n            {...rest}\n        >\n            <div className=\"bdl-MenuHeader-content\">\n                <div className=\"bdl-MenuHeader-title-container\">\n                    {title && <div className=\"bdl-MenuHeader-title\">{title}</div>}\n                    {subtitle && <div className=\"bdl-MenuHeader-subtitle\">{subtitle}</div>}\n                </div>\n                {children}\n            </div>\n            <CloseButton className=\"bdl-MenuHeader-close-button\" onClick={closeMenu} />\n        </div>\n    );\n};\n\nexport default MenuHeader;\n","import * as React from 'react';\n\nimport MenuItem, { MenuItemProps } from './MenuItem';\n\nconst SelectMenuItem = (props: MenuItemProps) => <MenuItem isSelectItem {...props} />;\n\nexport default SelectMenuItem;\n","import * as React from 'react';\n\nimport MenuLinkItem from './MenuLinkItem';\nimport { MenuItemProps } from './MenuItem';\n\nconst SelectMenuLinkItem = (props: MenuItemProps) => <MenuLinkItem isSelectItem {...props} />;\n\nexport default SelectMenuLinkItem;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport debounce from 'lodash/debounce';\n\nimport './SubmenuItem.scss';\nimport Arrow16 from '../../icon/fill/Arrow16';\n\nconst SUBMENU_LEFT_ALIGNED_CLASS = 'is-left-aligned';\nconst SUBMENU_BOTTOM_ALIGNED_CLASS = 'is-bottom-aligned';\nconst SUBMENU_RIGHT_BOTTOM_ALIGNED_CLASS = 'is-right-bottom-aligned';\n\nexport interface SubmenuItemProps {\n    /** 'aria-disabled' - ARIA attribute describing whether the submenu item is disabled */\n    'aria-disabled'?: boolean | 'true' | 'false';\n    /** 'aria-disabled' - ARIA attribute describing whether the submenu item is expanded */\n    'aria-expanded'?: boolean | 'true' | 'false';\n    /** 'aria-disabled' - ARIA attribute describing whether the submenu item has a popup */\n    'aria-haspopup'?: boolean | 'true' | 'false';\n    /** bottomBoundaryElement - an HTMLElement defining the bottom boundary for the submenu item */\n    bottomBoundaryElement?: HTMLElement;\n    /** children - submenu item content */\n    children?: Array<React.ReactChild> | React.ReactChild;\n    /** className - CSS class name for the submenu item */\n    className?: string;\n    /** isDisabled - whether the submenu item is disabled */\n    isDisabled?: boolean;\n    /** onClick - function called when the submenu item is clicked */\n    onClick?: (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => void;\n    /** onClick - function called when a key is pressed within the submenu item */\n    onKeyDown?: (event: React.KeyboardEvent<HTMLLIElement>) => void;\n    /** onClick - function called when the mouse enters the submenu item */\n    onMouseEnter?: (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => void;\n    /** onClick - function called when the mouse leaves the submenu item */\n    onMouseLeave?: (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => void;\n    /** onOpen - function called when the submenu opens */\n    onOpen?: () => void;\n    /** ref - reference to the menu element in the DOM */\n    ref?: string | ((instance: HTMLLIElement | null) => void) | React.RefObject<HTMLLIElement> | null | undefined;\n    /** rightBoundaryElement - an HTMLElement defining the right boundary for the submenu item */\n    rightBoundaryElement?: HTMLElement;\n    /** role - ARIA role for the submenu item */\n    role?: string;\n    /** tabIndex - indicator of whether the submenu item is focusable */\n    tabIndex?: number;\n}\n\ninterface SubmenuItemState {\n    /** isSubmenuOpen - whether the submenu is open */\n    isSubmenuOpen: boolean;\n    /** isSubmenuOpen - index of the focused submenu item */\n    submenuFocusIndex: number | null | undefined;\n}\n\n/**\n * A menu-item component which triggers open a submenu\n *\n * @NOTE: Nested submenus are NOT currently supported, switching\n * focus with arrow keys in the subsubmenu is not working properly.\n */\nclass SubmenuItem extends React.Component<SubmenuItemProps, SubmenuItemState> {\n    state = {\n        isSubmenuOpen: false,\n        submenuFocusIndex: null,\n    };\n\n    getMenuAlignmentClasses = (): Record<string, boolean> => {\n        if (!this.submenuTriggerEl || !this.submenuEl) {\n            return {};\n        }\n\n        const { rightBoundaryElement, bottomBoundaryElement } = this.props;\n        const submenuElBounding = this.submenuEl.getBoundingClientRect();\n        const submenuTriggerElBounding = this.submenuTriggerEl.getBoundingClientRect();\n        const rightBoundaryElementBounding = rightBoundaryElement\n            ? rightBoundaryElement.getBoundingClientRect()\n            : { right: window.innerWidth };\n        const bottomBoundaryElementBounding = bottomBoundaryElement\n            ? bottomBoundaryElement.getBoundingClientRect()\n            : { bottom: window.innerHeight };\n\n        const isLeftAligned =\n            submenuTriggerElBounding.right + submenuElBounding.width > rightBoundaryElementBounding.right;\n        const isBottomAligned =\n            submenuTriggerElBounding.top + submenuElBounding.height > bottomBoundaryElementBounding.bottom;\n        const isRightBottomAligned =\n            submenuTriggerElBounding.bottom + submenuElBounding.height > bottomBoundaryElementBounding.bottom;\n        return {\n            [SUBMENU_LEFT_ALIGNED_CLASS]: isLeftAligned,\n            [SUBMENU_BOTTOM_ALIGNED_CLASS]: isBottomAligned,\n            [SUBMENU_RIGHT_BOTTOM_ALIGNED_CLASS]: isRightBottomAligned, // Used only in medium-screen viewport sizes\n        };\n    };\n\n    handleMenuItemClick = (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n        const { isDisabled, onClick } = this.props;\n\n        // If aria-disabled is passed as a prop, we should ignore clicks on this menu item\n        if (isDisabled) {\n            event.stopPropagation();\n            event.preventDefault();\n\n            return;\n        }\n\n        if (onClick) {\n            onClick(event);\n        }\n\n        // If event target is triggering submenu element, do not propagate to close menu\n        if (this.submenuEl && !this.submenuEl.contains(event.target as Node)) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    submenuTriggerEl: HTMLElement | null | undefined;\n\n    submenuEl: HTMLElement | null | undefined;\n\n    handleKeyDown = (event: React.KeyboardEvent<HTMLLIElement>) => {\n        switch (event.key) {\n            case ' ':\n            case 'Enter':\n            case 'ArrowRight':\n                event.stopPropagation();\n                event.preventDefault();\n                this.openSubmenuAndFocus();\n                break;\n            default:\n                break;\n        }\n    };\n\n    closeSubmenu = debounce(() => {\n        this.setState({\n            isSubmenuOpen: false,\n        });\n    }, 50);\n\n    closeSubmenuAndFocusTrigger = (isKeyboardEvent: boolean | null | undefined) => {\n        this.closeSubmenu();\n        if (this.submenuTriggerEl && isKeyboardEvent) {\n            this.submenuTriggerEl.focus();\n        }\n    };\n\n    openSubmenu = () => {\n        this.closeSubmenu.cancel();\n        const { onOpen } = this.props;\n        if (onOpen) {\n            onOpen();\n        }\n        this.setState({\n            isSubmenuOpen: true,\n            submenuFocusIndex: null,\n        });\n    };\n\n    openSubmenuAndFocus = () => {\n        const { onOpen } = this.props;\n        if (onOpen) {\n            onOpen();\n        }\n\n        this.setState({\n            isSubmenuOpen: true,\n            submenuFocusIndex: 0,\n        });\n    };\n\n    render() {\n        const { children, className, isDisabled, ...rest } = this.props;\n        const { isSubmenuOpen, submenuFocusIndex } = this.state;\n\n        const elements = React.Children.toArray(children);\n        const submenuTriggerContent = elements[0];\n        const submenu = elements[1] as React.ReactElement;\n        if (elements.length !== 2 || !submenuTriggerContent || !submenu) {\n            throw new Error('SubmenuItem must have exactly two children, a trigger component and a <Menu>');\n        }\n\n        const chevron = <Arrow16 className=\"menu-item-arrow\" width={12} height={12} />;\n\n        const menuItemProps: SubmenuItemProps = {\n            ...omit(rest, ['bottomBoundaryElement', 'onClick', 'onOpen', 'rightBoundaryElement', 'role', 'tabIndex']),\n            'aria-disabled': isDisabled ? 'true' : undefined,\n            'aria-expanded': isSubmenuOpen ? 'true' : 'false',\n            'aria-haspopup': 'true',\n\n            className: classNames('menu-item', 'submenu-target', className),\n            onClick: this.handleMenuItemClick,\n            onMouseLeave: this.closeSubmenu,\n            onMouseEnter: this.openSubmenu,\n            onKeyDown: this.handleKeyDown,\n            ref: (ref: HTMLLIElement | null) => {\n                this.submenuTriggerEl = ref;\n            },\n            role: 'menuitem',\n            tabIndex: -1,\n        };\n\n        const submenuProps = {\n            className: classNames(submenu.props.className, 'submenu', this.getMenuAlignmentClasses()),\n            initialFocusIndex: submenuFocusIndex,\n            // Hide the menu instead of unmounting it. Otherwise onMouseLeave won't work.\n            isHidden: !isSubmenuOpen,\n            isSubmenu: true,\n            onClose: this.closeSubmenuAndFocusTrigger,\n            setRef: (ref: HTMLLIElement) => {\n                this.submenuEl = ref;\n            },\n        };\n\n        return (\n            <li {...menuItemProps}>\n                {submenuTriggerContent}\n                {chevron}\n                {React.cloneElement(submenu, submenuProps)}\n            </li>\n        );\n    }\n}\n\nexport default SubmenuItem;\n","/**\n * @flow\n * @file Creates an API Context\n * @author Box\n */\nimport React from 'react';\nimport API from '../../../api';\n\nexport default React.createContext<?API>();\n","/**\n * @flow\n * @file Wraps a component with the API context\n * @author Box\n */\nimport * as React from 'react';\nimport APIContext from './APIContext';\n\nconst withAPIContext = (WrappedComponent: React.ComponentType<any>) =>\n    React.forwardRef<Object, React.Ref<any>>((props: Object, ref: React.Ref<any>) => (\n        <APIContext.Consumer>{api => <WrappedComponent ref={ref} {...props} api={api} />}</APIContext.Consumer>\n    ));\n\nexport default withAPIContext;\n","// @deprecated, use Collapsible\n\n/**\n * @flow\n * @file Preview sidebar section component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport IconCaretDown from '../../icons/general/IconCaretDown';\nimport { COLOR_999 } from '../../constants';\nimport './SidebarSection.scss';\n\ntype Props = {\n    children?: any,\n    className: string,\n    interactionTarget?: string,\n    isOpen: boolean,\n    title?: string | React.Node,\n};\n\ntype State = {\n    isOpen: boolean,\n};\n\nclass SidebarSection extends React.PureComponent<Props, State> {\n    props: Props;\n\n    state: State;\n\n    static defaultProps = {\n        className: '',\n        isOpen: true,\n    };\n\n    /**\n     * [constructor]\n     *\n     * @private\n     * @return {ContentPreview}\n     */\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            isOpen: props.isOpen,\n        };\n    }\n\n    /**\n     * Click handler for toggling the section\n     *\n     * @private\n     * @param {Event} event - click event\n     * @return {void}\n     */\n    toggleVisibility = () => {\n        this.setState(prevState => ({\n            isOpen: !prevState.isOpen,\n        }));\n    };\n\n    /**\n     * Renders the section\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    render() {\n        const { isOpen }: State = this.state;\n        const { children, className, title, interactionTarget }: Props = this.props;\n\n        const sectionClassName = classNames(\n            'bcs-section',\n            {\n                'bcs-section-open': isOpen,\n            },\n            className,\n        );\n\n        return (\n            <div className={sectionClassName}>\n                {title && (\n                    <PlainButton\n                        aria-expanded={isOpen}\n                        className=\"bcs-section-title\"\n                        data-resin-target={interactionTarget}\n                        onClick={this.toggleVisibility}\n                        type=\"button\"\n                    >\n                        {title}\n                        <IconCaretDown color={COLOR_999} width={8} />\n                    </PlainButton>\n                )}\n                {(isOpen || !title) && <div className=\"bcs-section-content\">{children}</div>}\n            </div>\n        );\n    }\n}\n\nexport default SidebarSection;\n","// @flow\nexport { default } from './DropdownMenu';\nexport { default as MenuToggle } from './MenuToggle';\n","/**\n * @flow\n * @file Preview sidebar content component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport './SidebarContent.scss';\n\ntype Props = {\n    actions?: React.Node,\n    children: any,\n    className?: string,\n    elementId: string,\n    sidebarView: string,\n    title?: React.Node,\n};\nconst SidebarContent = ({ actions, children, className, elementId, sidebarView, title, ...rest }: Props) => {\n    const label = `${elementId}${elementId === '' ? '' : '_'}${sidebarView}`;\n    const id = `${label}-content`;\n\n    return (\n        <div\n            aria-labelledby={label}\n            className={classNames('bcs-content', className)}\n            data-testid=\"bcs-content\"\n            id={id}\n            role=\"tabpanel\"\n            {...rest}\n        >\n            <div className=\"bcs-content-header\">\n                {title && <h3 className=\"bcs-title\">{title}</h3>}\n                {actions}\n            </div>\n            <div className=\"bcs-scroll-content-wrapper\">\n                <div className=\"bcs-scroll-content\">{children}</div>\n            </div>\n        </div>\n    );\n};\n\nSidebarContent.defaultProps = {\n    elementId: '',\n    sidebarView: '',\n};\n\nexport default SidebarContent;\n","/**\n * @flow\n * @file i18n messages\n * @author Box\n */\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    activitySidebarFilterOptionAllActivity: {\n        id: 'be.activitySidebarFilter.status.allActivity',\n        defaultMessage: 'All Activity',\n        description: 'Dropdown option for filtering all activity from activity list',\n    },\n    activitySidebarFilterOptionAllComments: {\n        id: 'be.activitySidebarFilter.status.allComments',\n        defaultMessage: 'All Comments',\n        description: 'Dropdown option for filtering all comments from comments list',\n    },\n    activitySidebarFilterOptionOpen: {\n        id: 'be.activitySidebarFilter.status.open',\n        defaultMessage: 'Unresolved Comments',\n        description: 'Dropdown option for filtering unresolved comments from activity or comments list',\n    },\n    activitySidebarFilterOptionResolved: {\n        id: 'be.activitySidebarFilter.status.resolved',\n        defaultMessage: 'Resolved Comments',\n        description: 'Dropdown option for filtering resolved comments from activity or comments list',\n    },\n    activitySidebarFilterOptionTasks: {\n        id: 'be.activitySidebarFilter.status.tasks',\n        defaultMessage: 'Tasks',\n        description: 'Dropdown option for filtering tasks from activity list',\n    },\n    boxSignFtuxBody: {\n        id: 'be.contentSidebar.boxSignFtuxBody',\n        defaultMessage: 'Sign documents or send signature requests, right from where your content lives',\n        description: 'body for first-time user experience tooltip shown to new users of Box Sign',\n    },\n    boxSignFtuxTitle: {\n        id: 'be.contentSidebar.boxSignFtuxTitle',\n        defaultMessage: 'Box Sign - Secure, seamless e-signatures in Box',\n        description: 'title for first-time user experience tooltip shown to new users of Box Sign',\n    },\n    boxSignRequest: {\n        id: 'be.contentSidebar.boxSignRequest',\n        defaultMessage: 'Request Signature',\n        description: 'label for button that opens a Box Sign signature request experience',\n    },\n    boxSignRequestSignature: {\n        id: 'be.contentSidebar.boxSignRequestSignature',\n        defaultMessage: 'Request Signature',\n        description: 'One of the dropdown options that opens a Box Sign request signature experience',\n    },\n    boxSignSignMyself: {\n        id: 'be.contentSidebar.boxSignSignMyself',\n        defaultMessage: 'Sign Myself',\n        description: 'One of the dropdown options that opens a Box Sign sign myself experience',\n    },\n    boxSignSignature: {\n        id: 'be.contentSidebar.boxSignSignature',\n        defaultMessage: 'Sign',\n        description: 'label for button that opens a Box Sign signature fulfillment experience',\n    },\n    boxSignSecurityBlockedTooltip: {\n        defaultMessage: 'This action is unavailable due to a security policy.',\n        description: 'Tooltip text for when Box Sign is blocked due to a security policy',\n        id: 'be.contentSidebar.boxSignSecurityBlockedTooltip',\n    },\n    boxSignWatermarkBlockedTooltip: {\n        defaultMessage: 'This action is unavailable, because the file is watermarked.',\n        description: 'Tooltip text for when Box Sign is blocked due to an item being watermarked',\n        id: 'be.contentSidebar.boxSignWatermarkBlockedTooltip',\n    },\n    tasksAddTask: {\n        id: 'be.contentSidebar.addTask',\n        defaultMessage: 'Add Task',\n        description: 'label for button that opens task popup',\n    },\n    taskAddTaskGeneral: {\n        id: 'be.contentSidebar.addTask.general',\n        defaultMessage: 'General Task',\n        description: 'label for menu item that opens general task popup',\n    },\n    taskAddTaskGeneralDescription: {\n        id: 'be.contentSidebar.addTask.general.description',\n        defaultMessage: 'Assignees will be responsible for marking tasks as complete',\n        description: 'description for menu item that opens general task popup',\n    },\n    taskAddTaskApproval: {\n        id: 'be.contentSidebar.addTask.approval',\n        defaultMessage: 'Approval Task',\n        description: 'label for menu item that opens approval task popup',\n    },\n    taskAddTaskApprovalDescription: {\n        id: 'be.contentSidebar.addTask.approval.description',\n        defaultMessage: 'Assignees will be responsible for approving or rejecting tasks',\n        description: 'description for menu item that opens approval task popup',\n    },\n    tasksCreateGeneralTaskFormTitle: {\n        id: 'be.contentSidebar.addTask.general.title',\n        defaultMessage: 'Create General Task',\n        description: 'title for general task popup',\n    },\n    tasksCreateApprovalTaskFormTitle: {\n        id: 'be.contentSidebar.addTask.approval.title',\n        defaultMessage: 'Create Approval Task',\n        description: 'title for approval task popup',\n    },\n    tasksEditApprovalTaskFormTitle: {\n        id: 'be.contentSidebar.editTask.approval.title',\n        defaultMessage: 'Modify Approval Task',\n        description: 'title for when editing an existing approval task',\n    },\n    tasksEditGeneralTaskFormTitle: {\n        id: 'be.contentSidebar.editTask.general.title',\n        defaultMessage: 'Modify General Task',\n        description: 'modal title for when editing an existing general task',\n    },\n});\n\nexport default messages;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconEllipsis = ({ className = '', color = '#000000', height = 20, title, width = 20 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-ellipsis ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 10 2\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M1 2c.6 0 1-.4 1-1s-.4-1-1-1-1 .4-1 1 .4 1 1 1zm8 0c.6 0 1-.4 1-1s-.4-1-1-1-1 .4-1\n                    1 .4 1 1 1zM5 2c.6 0 1-.4 1-1s-.4-1-1-1-1 .4-1 1 .4 1 1 1z\"\n            fill={color}\n            fillRule=\"evenodd\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconEllipsis;\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nimport Button, { ButtonType } from '../button';\nimport IconClose from '../../icons/general/IconClose';\nimport { bdlGray65 } from '../../styles/variables';\n\nimport './CloseButton.scss';\n\nexport interface CloseButtonProps {\n    /** Custom class for the close button */\n    className?: string;\n    /** onClick handler for the close button */\n    onClick?: Function;\n}\n\nconst CloseButton = ({ className, onClick }: CloseButtonProps) => {\n    return (\n        <Button\n            className={classNames('bdl-CloseButton', className)}\n            data-testid=\"bdl-CloseButton\"\n            onClick={onClick}\n            type={ButtonType.BUTTON}\n        >\n            <IconClose color={bdlGray65} height={18} width={18} />\n        </Button>\n    );\n};\n\nexport default CloseButton;\n","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst Arrow16 = (props: SVGProps) => (\n    <AccessibleSVG width={16} height={16} viewBox=\"0 0 16 16\" {...props}>\n        <path\n            fill={vars.bdlGray50}\n            fillRule=\"evenodd\"\n            d=\"M7.646 7.646L4.354 4.354a.5.5 0 010-.708l1.292-1.292a.5.5 0 01.708 0l5.292 5.292a.5.5 0 010 .708l-5.292 5.292a.5.5 0 01-.708 0l-1.292-1.292a.5.5 0 010-.708l3.292-3.292a.5.5 0 000-.708z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default Arrow16;\n","/**\n * @flow\n * @file Back Button component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport { Route, type Location } from 'react-router-dom';\nimport IconNavigateLeft from '../../../icons/general/IconNavigateLeft';\nimport messages from '../messages';\nimport PlainButton from '../../../components/plain-button';\nimport './BackButton.scss';\n\ntype Props = {\n    className?: string,\n    to?: Location,\n};\n\nconst BackButton = ({ className, to, ...rest }: Props) => (\n    <Route>\n        {({ history }) => (\n            <PlainButton\n                className={classNames('bdl-BackButton', className)}\n                onClick={() => (to ? history.push(to) : history.goBack())}\n                type=\"button\"\n                {...rest}\n            >\n                <IconNavigateLeft height={24} width={24} />\n                <span className=\"accessibility-hidden\">\n                    <FormattedMessage {...messages.back} />\n                </span>\n            </PlainButton>\n        )}\n    </Route>\n);\n\nexport default BackButton;\n","/**\n * @flow\n * @file Nav Button component intended to mimic React Router's NavLink component for non-anchor elements\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Route } from 'react-router-dom';\nimport type { Match, Location } from 'react-router-dom';\nimport PlainButton from '../../../components/plain-button';\nimport { isLeftClick } from '../../../utils/dom';\n\ntype Props = {\n    activeClassName?: string,\n    children: React.Node,\n    className?: string,\n    component?: React.ComponentType<any>,\n    exact?: boolean,\n    isActive?: (match: Match, location: Location) => ?boolean,\n    onClick?: (event: SyntheticEvent<>) => void,\n    replace?: boolean,\n    strict?: boolean,\n    to: string | Location,\n};\n\nconst NavButton = React.forwardRef<Props, React.Ref<any>>((props: Props, ref: React.Ref<any>) => {\n    const {\n        activeClassName = 'bdl-is-active',\n        children,\n        className = 'bdl-NavButton',\n        component: Component = PlainButton,\n        exact,\n        isActive,\n        onClick,\n        replace,\n        strict,\n        to,\n        ...rest\n    } = props;\n    const path = typeof to === 'object' ? to.pathname : to;\n\n    return (\n        <Route exact={exact} path={path} strict={strict}>\n            {({ history, location, match }) => {\n                const isActiveValue = !!(isActive ? isActive(match, location) : match);\n\n                return (\n                    <Component\n                        className={classNames(className, { [activeClassName]: isActiveValue })}\n                        onClick={event => {\n                            if (onClick) {\n                                onClick(event);\n                            }\n\n                            if (!event.defaultPrevented && isLeftClick(event)) {\n                                const method = replace ? history.replace : history.push;\n                                method(to);\n                            }\n                        }}\n                        ref={ref}\n                        {...rest}\n                    >\n                        {children}\n                    </Component>\n                );\n            }}\n        </Route>\n    );\n});\n\nexport default NavButton;\n","/**\n * @flow\n * @file Skills utils\n * @author Box\n */\n\nimport getProp from 'lodash/get';\nimport type { SkillCard } from '../../../common/types/skills';\nimport type { BoxItem } from '../../../common/types/core';\n\n/**\n * Returns true if its a valid skills card.\n *\n * @param {SkillCard} card - box skill card\n * @return {boolean} if its valid skills card\n */\nconst isValidSkillsCard = (file: BoxItem, card: SkillCard): boolean => {\n    const fileVersion = getProp(file, 'file_version.id');\n    const skillCardFileVersion = card.file_version ? card.file_version.id : fileVersion;\n    return fileVersion === skillCardFileVersion && (!!card.status || Array.isArray(card.entries));\n};\n\n/**\n * Returns true if there are valid skills to show.\n *\n * @param {BoxItem} file - box file\n * @return {boolean} if there are valid skills to show\n */\nconst hasSkills = (file: BoxItem): boolean => {\n    const cards = getProp(file, 'metadata.global.boxSkillsCards.cards', []);\n    return Array.isArray(cards) && cards.length > 0 && cards.some(card => isValidSkillsCard(file, card));\n};\n\nexport { hasSkills, isValidSkillsCard };\n","// @flow\nimport * as React from 'react';\nimport { Route } from 'react-router-dom';\n\n// Basically a workaround for the fact that react-router's withRouter cannot forward ref's through\n// functional components. Use this instead to gain the benefits of withRouter but also ref forwarding\nexport default function withRouterAndRef(Wrapped: React.ComponentType<any>) {\n    const WithRouterAndRef = React.forwardRef<Object, React.Ref<any>>((props, ref) => (\n        <Route>{routeProps => <Wrapped ref={ref} {...routeProps} {...props} />}</Route>\n    ));\n    const name = Wrapped.displayName || Wrapped.name || 'Component';\n    WithRouterAndRef.displayName = `withRouterAndRef(${name})`;\n    return WithRouterAndRef;\n}\n"],"sourceRoot":""}